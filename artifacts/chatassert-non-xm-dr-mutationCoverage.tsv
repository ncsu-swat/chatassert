OracleID	ClassName	TestName	TrueOracle	GenOracle	MutationStrength
1	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	100
2	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
5	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
7	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	100
8	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected.length(),actual.length());	100
10	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertSame(expected,actual);	100
8	VerbsTest	testVoided	assertNotNull(actual);	assertNotSame(Verbs.voided(),actual);	33
12	VerbsTest	testVoided	assertNotNull(actual);	assertFalse(actual.getDisplay().isEmpty());	75
18	VerbsTest	testVoided	assertNotNull(actual);	assertFalse(actual.getId().isEmpty());	75
24	VerbsTest	testVoided	assertNotNull(actual);	assertNotNull(actual.getDisplay());	75
1	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	44
2	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual.contains(expected));	44
5	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertFalse(actual.isEmpty());	44
7	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual!=null);	33
8	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected.length(),actual.length());	44
24	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	44
4	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotEquals(null,db.getActiveIntent());	100
6	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotSame(null,db.getActiveIntent());	100
11	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertTrue(db.getActiveIntent().getClass().equals(OIntentMassiveInsert.class));	100
3	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotSame(buffer1,buffer2);	99
4	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.position()!=buffer2.position());	99
7	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotNull(buffer2);	99
8	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertFalse(buffer1.hasRemaining());	99
12	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.limit()>=buffer1.position());	99
13	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertFalse(buffer2.isDirect());	99
15	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotNull(buffer1);	99
0	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotNull(qResult);	33
1	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertFalse(qResult.isEmpty());	33
3	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(qResult.size()>0);	33
1	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()==1);	92
2	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(0,keyIndexDefinition.getParamCount());	92
3	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotNull(keyIndexDefinition);	92
8	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()>0);	92
9	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotSame(0,keyIndexDefinition.getParamCount());	92
10	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(keyIndexDefinition.getParamCount()<=0);	92
21	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotSame(0,keyIndexDefinition.getTypes().length);	92
22	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getTypes().length>0);	92
0	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager);	91
3	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().contains(null));	90
5	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotEquals(0,manager.getNewRecords().size());	91
7	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotSame(doc,doc2);	90
8	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc)||manager.getNewRecords().contains(doc2));	91
10	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().size()>0);	91
12	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().isEmpty());	91
16	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().size()>=0);	90
26	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotEquals(doc,doc2);	90
0	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertTrue(true);	29
0	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	91
5	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotEquals(0,result.stream().count());	91
10	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertFalse(result.elementStream().anyMatch(element->element.getProperty("STR").equals(3L)));	91
2	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	92
3	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult.next());	33
6	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotEquals(0,qResult.stream().count());	33
7	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult.getExecutionPlan());	33
1	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.get(24));	29
2	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.get(24)==11);	29
3	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertFalse(test.get(24)==null);	29
4	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals(null,test.get(24));	29
5	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNull(test.get(25));	0
6	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.size()==1);	60
7	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals(1,test.size());	60
8	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals(0,test.size());	40
9	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.keys().length>0);	56
13	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNull(test.get(100));	0
0	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertTrue(kindAndName.equals(secondKindAndName));	67
1	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(kindAndName.equals(thirdKindAndName));	40
3	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals(kindAndName,fifthKindAndName);	33
4	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotSame(kindAndName,thirdKindAndName);	100
6	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotNull(kindAndName);	100
7	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotSame(kindAndName,fourthKindAndName);	100
9	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(kindAndName.toString().isEmpty());	100
11	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals("STR",kindAndName.getKind());	0
4	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertFalse(configMap.isEmpty());	0
5	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotEquals(0,configMap.size());	0
14	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertEquals(1,configMap.size());	0
15	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertTrue(configMap.containsValue(map));	0
21	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotSame(map,configMap.get("STR"));	0
2	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.stream().map(TestNamed::getName).anyMatch(name->name.equals("STR")));	0
4	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	0
6	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(0,filtered.size());	50
9	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotSame(getAllTestData(),filtered);	0
12	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.stream().noneMatch(named->named.getName().startsWith("STR")));	0
14	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	50
15	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(Collections.emptyList(),filtered);	50
17	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()>0);	50
1	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(is.available()>0);	100
5	ProfileUtilTest	multiple	assertNotNull(is);	assertNotEquals(0,is.available());	100
7	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(is.markSupported());	100
8	ProfileUtilTest	multiple	assertNotNull(is);	assertNotSame(null,is);	100
28	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(is.skip(1)>0);	100
1	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	92
2	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertEquals(2,builder.build().getSpec().getInitContainers().size());	94
3	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNotNull(handler);	94
9	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNotEquals(0,builder.build().getSpec().getInitContainers().size());	94
12	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNull(handler.getInitContainer(builder,"STR"));	92
2	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotNull(url);	77
3	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotEquals("STR",url);	79
4	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertFalse(url.isEmpty());	79
6	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame("STR",url);	79
11	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame("STR",url);	79
8	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotNull(config);	79
22	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotSame(config,config.getChild("STR"));	79
8	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverDirectory.list().length>0);	69
9	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotNull(serverDirectory.listFiles());	69
10	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertEquals(2,serverDirectory.listFiles().length);	69
12	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverDirectory.exists());	69
15	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotEquals(0,serverDirectory.listFiles().length);	69
16	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverDirectory.canRead());	69
17	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverDirectory.canWrite());	69
18	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertFalse(serverDirectory.isHidden());	69
20	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverDirectory.isDirectory());	69
2	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotNull(fileString);	69
3	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertFalse(fileString.isEmpty());	69
4	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotEquals("STR",fileString);	69
7	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotSame(null,fileString);	69
9	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotSame("STR",fileString);	69
10	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertEquals(4,fileString.length());	69
2	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.isFile());	69
3	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotEquals(0,targetFile.length());	69
4	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(FileUtils.contentEquals(configFile,targetFile));	69
6	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.canWrite());	69
8	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertFalse(targetFile.isDirectory());	69
9	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(targetFile);	69
10	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotSame(configFile,targetFile);	69
1	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals(FilterReply.ACCEPT,filter.decide(evt));	0
2	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.ACCEPT);	0
3	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.ACCEPT);	0
4	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotNull(filter.decide(evt));	50
6	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotSame(FilterReply.NEUTRAL,filter.decide(evt));	50
9	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals(FilterReply.NEUTRAL,filter.decide(evt));	50
18	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.NEUTRAL);	50
23	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertSame(FilterReply.DENY,filter.decide(evt));	100
25	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.DENY||filter.decide(evt)==FilterReply.NEUTRAL);	50
1	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	9
3	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
4	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	18
5	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testUrl,normalizedUrl);	0
11	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
1	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	13
4	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	25
5	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testUrl,normalizedUrl);	25
13	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
14	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.length()>0);	25
16	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.endsWith("STR"));	13
2	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
3	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	22
4	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
5	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	33
8	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl.trim());	22
9	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult.length(),normalizedUrl.length());	67
2	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	74
3	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotNull(result);	39
4	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotEquals(0,result.size());	74
6	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.size()>=0);	39
9	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.contains(null));	39
12	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.size()<=list.size());	39
1	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotNull(registry);	34
2	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry.agentCount()>=0);	34
4	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertFalse(registry.agentCount()<0);	34
6	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertSame(registry,registry);	29
8	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry.agentCount()>0||registry.agentCount()==0);	34
12	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry!=null);	34
13	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertFalse(registry==null);	34
1	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()>0);	35
2	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotNull(registry);	35
3	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotEquals(0,registry.agentCount());	35
5	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()>=2);	35
9	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotSame(null,registry);	35
10	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()<Integer.MAX_VALUE);	41
11	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()>1&&registry.agentCount()<100);	35
1	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>=0);	53
3	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey));	55
4	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0);	52
6	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertFalse(cm.count(poolKey)==0);	52
11	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0||cm.count("STR")>0);	57
14	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotSame(0,cm.count(poolKey)+cm.count("STR")+cm.count("STR"));	54
15	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0||cm.count("STR")>0||cm.count("STR")>0);	56
20	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey)+cm.count("STR")+cm.count("STR"));	54
22	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0||cm.count("STR")>0||cm.count("STR")>0||cm.count("STR")>0);	56
2	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertEquals(3,graph.edges().size());	60
3	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertNotNull(graph);	33
8	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertNotSame(edge("STR","STR"),edge("STR","STR"));	33
1	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().size());	0
4	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertNotNull(graph.edges());	0
5	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().containsAll(Collections.emptyList()));	0
6	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertNotSame(Collections.emptyList(),graph.edges());	100
9	LoaderTest	jarInClassPathNotModified	assertNull(newClassPathLoader("STR").fetchResource("STR",newDate(130,0,0).getTime()-1));	assertNotNull("STR");	100
0	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	63
29	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	63
2	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql);	89
5	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	89
6	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals(0,sql.toString().length());	89
7	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(sql.toString().length()>0);	89
8	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql.toString());	89
9	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotSame("STR",sql.toString());	89
10	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	89
11	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(sql.toString().trim().length()>0);	89
13	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotSame(0,sql.toString().trim().length());	89
14	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().trim().isEmpty());	89
2	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	70
6	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(res.isEmpty());	70
16	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertFalse(res.contains(null));	70
24	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotSame(helloClass,res);	70
4	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertEquals("STR",ceļu.getToken());	100
21	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.toString().contains("STR"));	100
22	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotSame(ceļu,locītājs.analyze("STR"));	20
1	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	100
3	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertFalse(poller.getObjectQueryPreparer()==null);	100
9	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotSame(mockAccessConnection,poller.getObjectQueryPreparer());	100
14	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertTrue(poller.getObjectQueryPreparer()!=null);	100
17	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertTrue(poller.getPolledObjects().contains(polled001));	100
19	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotSame(mockObjectQueryPreparer,poller.getObjectQueryPreparer());	100
23	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertFalse(poller.getPolledObjects().isEmpty());	100
24	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertTrue(poller.getPolledObjects().size()>0);	100
26	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getPolledObjects().get(0));	100
2	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	assertNotNull(router);	54
1	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	61
4	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()!=null);	61
8	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotSame(null,response);	61
11	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotEquals(null,response);	61
0	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertEquals(true,p.getBlankIndex()>=0);	100
1	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()>=0);	100
2	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotNull(p);	100
4	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(-1,p.getBlankIndex());	100
6	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotSame(-1,p.getBlankIndex());	100
17	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()>=0&&p.getBlankIndex()<9);	100
23	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotSame(0,p.getBlankIndex());	100
26	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(3,p.getBlankIndex());	100
1	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(true,vārds.isRecognized());	21
2	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotNull(vārds);	19
3	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(vārds.wordforms.isEmpty());	21
4	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotEquals(0,vārds.wordforms.size());	21
5	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotSame(0,vārds.wordforms.size());	21
6	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.wordforms.size()>0||vārds.isRecognized());	21
7	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertSame(1,vārds.wordforms.size());	29
8	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(1,vārds.wordforms.size());	29
10	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotEquals(locītājs,vārds.wordforms.size());	19
12	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals("STR",lūzīs.getToken());	100
13	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNull(lūzīs.getCorrectWordform());	20
15	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotSame(lūzīs,lūzīs.getCorrectWordform());	20
17	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(lūzīs);	20
18	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.equals(lūzīs.clone()));	25
28	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertSame(lūzīs,lūzīs);	20
2	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotNull(austrumlatvija);	19
4	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(locītājs.enableVocative);	19
5	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(locītājs.guessVerbs);	19
6	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals("STR",austrumlatvija.getToken());	100
9	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotSame(locītājs,austrumlatvija);	19
22	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNull(austrumlatvija.getCorrectWordform());	19
2	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotNull(w);	17
3	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	18
4	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	100
11	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotSame(w,locītājs.analyze("STR"));	20
12	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.toString().contains("STR"));	100
14	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNull(w.getCorrectWordform());	17
22	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals("STR",w.toString());	100
25	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotEquals(null,w);	17
2	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertTrue(simulatorProperties.getCoordinatorPort()>=0);	23
3	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotNull(simulatorProperties);	26
5	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertFalse(simulatorProperties.getCoordinatorPort()<0);	23
15	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertFalse(simulatorProperties.getCoordinatorPort()==-1);	23
0	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertEquals(cause,exception.getCause());	100
1	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotNull(exception.getCause());	100
6	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	50
8	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertFalse(exception.getMessage().contains("STR"));	50
9	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotEquals(0,exception.getMessage().length());	50
11	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotEquals("STR",exception.getMessage());	50
2	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.isFile());	32
3	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(exceptionFile);	21
4	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotEquals("STR",exceptionFile.getAbsolutePath());	21
5	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertFalse(exceptionFile.isDirectory());	21
7	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotSame("STR",exceptionFile.getName());	21
9	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.canRead());	32
2	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertEquals(loggerA1,loggerA0);	36
3	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA0,loggerA_lh0);	29
4	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA1,loggerB0);	29
8	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA1==loggerA0);	36
9	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertFalse(loggerA_lh0.equals(loggerB0));	29
14	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertSame(loggerA0,loggerA1);	36
15	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertFalse(loggerA0.equals(loggerA_lh0));	29
17	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA_lh0,loggerA_lh1);	29
1	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	92
2	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	92
4	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotNull(doc);	92
0	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(classLinked,prop.getLinkedClass());	75
2	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotNull(classLinked);	75
5	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(OType.LINK,prop.getType());	75
8	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotSame(classLinked,classA.getSuperClass());	75
9	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertFalse(classA.getSuperClasses().contains(classLinked));	75
11	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotSame(classA,classLinked);	75
12	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(1,classA.properties().size());	75
1	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	15
10	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotSame(null,g);	15
18	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotEquals(null,g);	15
1	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotNull(doc);	92
2	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertEquals(4,parentArray.size());	92
4	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotEquals("STR",object4.get("STR"));	92
5	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertTrue(parentArray.contains(2));	92
7	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertFalse(parentArray.isEmpty());	92
9	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNull(doc.field("STR"));	92
10	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotSame(parentArray,doc.field("STR"));	92
1	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	assertTrue(now1.equals(now1));	89
3	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	assertNotNull(now1);	89
4	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	assertFalse(now1.isEmpty());	89
6	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	assertTrue(!now1.isEmpty());	89
10	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	assertTrue(now1.length()>0);	89
26	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	assertFalse(now1.endsWith("STR"));	89
1	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals(doc,doc1);	92
2	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(doc.equals(doc1));	92
3	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertFalse(doc==doc1);	92
4	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(doc1);	92
5	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotSame(doc,doc1);	92
6	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(doc.getClass().equals(doc1.getClass()));	92
7	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotEquals(doc.toJSON(),doc1.toJSON());	92
8	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals(ODocument.class,doc.getClass());	92
9	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotEquals(doc1.field("STR"),String.class);	92
10	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertSame(doc,doc);	92
1	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey(42));	92
2	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertFalse(keysToRemove.containsKey(100));	91
3	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotEquals(0,keysToAdd.size());	92
4	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertSame(0,keysToRemove.size());	91
6	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotNull(keysToAdd);	91
7	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertEquals(2,keysToAdd.size());	92
9	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToRemove.isEmpty());	91
10	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertEquals(0,keysToRemove.size());	91
11	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey(555));	92
2	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotNull(list);	0
3	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertFalse(list.isEmpty());	0
4	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotEquals(0,list.size());	0
5	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotSame(owner1,owner2);	0
9	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotSame(owner1.getIdentity(),owner2.getIdentity());	0
2	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotNull(results);	91
3	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotEquals(0,results.size());	91
4	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertFalse(results.isEmpty());	91
10	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>0);	91
14	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(!results.isEmpty());	91
1	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()==ResponseStatus.OK||response.getStatus()==ResponseStatus.REPLAYED_OTP);	58
2	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	58
7	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(client);	57
8	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotSame(response.getH(),"STR");	58
9	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.isOk()||response.getStatus()==ResponseStatus.REPLAYED_OTP);	57
12	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getNonce().length()>0);	58
13	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getKeyValueMap().size()>0);	61
4	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertNotEquals("STR",result);	0
5	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertNotNull(result);	0
6	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
7	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertNotSame("STR",result);	0
9	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertEquals(15,result.length());	75
2	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertNotEquals("STR",result);	0
3	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertNotNull(result);	0
4	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
5	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertNotSame("STR",result);	0
2	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	47
4	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertTrue(fields.size()>0);	47
6	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertEquals(1,fields.size());	47
8	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertFalse(fields.containsKey("STR"));	13
9	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNull(fields.get("STR"));	13
12	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotNull(fields);	13
14	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertTrue(!fields.isEmpty());	47
15	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotEquals(0,fields.size());	47
20	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotSame(0,fields.keySet().size());	47
21	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertTrue(!fields.keySet().isEmpty());	47
1	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	49
3	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertTrue(!ret.isEmpty());	49
5	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals(serverDisConnectProcessor,ret);	48
7	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotSame(body,ret);	48
8	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertFalse(ret.isEmpty());	49
15	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotSame(ret,body);	48
21	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertSame(NormalStringCustomSerializer_InvokeContext.class,s2.getClass());	48
22	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals(null,ret);	49
24	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotSame(serverUserProcessor,ret);	48
25	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(invokeContext.get(NormalRequestBodyCustomSerializer_InvokeContext.SERIALTYPE_KEY));	48
0	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
2	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertTrue(tokens.isEmpty());	0
3	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertFalse(tokens.contains("STR"));	0
4	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotEquals(5,tokens.size());	0
9	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertFalse(tokens.contains("STR"));	0
1	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertEquals(1002,invalidHandshakeException.getCloseCode());	100
3	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	100
5	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotEquals(0,invalidHandshakeException.getCloseCode());	100
6	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertFalse(invalidHandshakeException.toString().isEmpty());	100
7	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNull(invalidHandshakeException.getCause());	100
9	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotSame(null,invalidHandshakeException);	100
10	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertSame(InvalidHandshakeException.class,invalidHandshakeException.getClass());	100
14	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotEquals(0,invalidHandshakeException.hashCode());	100
2	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertNotNull(cookie.getHTTPHeader());	0
3	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertNotEquals("STR",cookie.getHTTPHeader());	0
4	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertFalse(cookie.getHTTPHeader().isEmpty());	0
7	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertNotSame("STR"+expiresString,cookie.getHTTPHeader());	0
8	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertTrue(cookie.getHTTPHeader().endsWith(expiresString));	0
9	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertNotEquals("STR"+expiresString,cookie.getHTTPHeader());	0
1	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp.length,clazz.length);	100
2	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length>0);	100
3	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotNull(clazz);	100
4	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertSame(exp[0],clazz[0]);	100
6	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(Arrays.asList(clazz).containsAll(Arrays.asList(exp)));	100
7	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp[2],clazz[2]);	100
10	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(Arrays.equals(exp,clazz));	100
12	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertSame(exp.length,clazz.length);	100
13	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length<=exp.length);	100
1	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertNotNull(b);	0
2	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b!=null);	0
3	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertFalse(b.isEmpty());	0
6	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b.size()>0);	0
8	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertFalse(b.nextSetBit(0)<0);	0
11	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b.length()>0);	0
20	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b.toByteArray().length>0);	0
24	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertNotNull(b.toByteArray());	0
3	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotEquals("STR",map.get("STR"));	0
4	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertFalse(map.isEmpty());	0
7	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotNull(map);	0
11	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertFalse(map.containsValue("STR"));	0
12	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotSame(2,map.size());	0
1	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()>=0);	13
2	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotEquals(5,p.getDistanceToGoal());	13
4	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertFalse(p.getDistanceToGoal()<0);	13
7	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()<=20);	13
8	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotEquals(p,p.getDistanceToGoal());	33
10	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertFalse(p.getDistanceToGoal()==Integer.MAX_VALUE);	13
13	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()>-1);	13
19	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()<100);	13
23	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()!=-1);	13
1	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()==1);	100
3	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertFalse(panel.getTurtleCount()==0);	100
4	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotEquals(0,panel.getTurtleCount());	100
5	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0);	100
8	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotSame(0,panel.getTurtleCount());	100
9	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>=0);	100
10	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertFalse(panel.getTurtleCount()<0);	100
11	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0&&panel.getTurtleCount()<=10);	100
15	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()<5);	100
2	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(4,a[3]);	90
4	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertNotEquals(0,a[2]);	90
7	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertFalse(Arrays.asList(a).contains(2));	90
12	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(5,a.length);	90
13	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertFalse(Arrays.asList(a).isEmpty());	90
14	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertNotSame(0,a.length);	90
15	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertNotNull(a);	90
20	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(3,a[2]);	90
21	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertFalse(Arrays.asList(a).contains(-1));	90
25	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertSame(5,a.length);	90
7	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotEquals(0,actuals.length);	90
8	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertTrue(actuals.length>0);	90
9	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotNull(actuals);	90
11	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotEquals(null,actuals);	90
12	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertEquals(3,actuals.length);	90
14	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertFalse(actuals.length==0);	90
15	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertSame(3,actuals.length);	90
21	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotSame(0,actuals.length);	90
22	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotSame(null,actuals);	90
4	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotNull(macAddress);	100
5	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isMulticast());	100
10	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals(macAddress,macAddress.toString());	43
11	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertTrue(macAddress.hashCode()!=0);	100
12	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotSame(null,macAddress);	100
15	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isLocal());	100
17	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals(null,macAddress);	100
18	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertTrue(macAddress.toString().length()>0);	75
19	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotSame(macAddress,PERIOD_SEPARATOR);	100
2	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotNull(exception);	100
4	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertSame(MESSAGE,exception.getMessage());	100
5	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotEquals("STR",exception.getMessage());	100
8	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	100
9	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNull(exception.getCause());	100
13	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotSame(MESSAGE,exception.getCause());	100
14	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertFalse(exception.getMessage().contains("STR"));	100
15	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotEquals("STR",exception.getMessage());	100
0	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotNull(actual);	11
4	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotEquals(null,actual);	11
9	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotSame(null,actual);	11
3	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertEquals(5,cl1.arr.size());	100
5	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertFalse(cl1.arr.isEmpty());	100
6	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertTrue(cl1.arr.size()>0);	100
7	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotEquals(0,cl1.arr.size());	100
8	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertTrue(cl1.arr.size()>=0);	100
14	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertTrue(cl1.arr.size()<=10);	100
19	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotSame(0,cl1.arr.size());	100
23	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotEquals(null,cl1);	100
29	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertSame(cl1,cl1);	100
3	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	28
11	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(matcher.lookingAt());	42
16	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.pattern().flags().contains(PatternFlags.ADVANCED));	29
24	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.pattern().flags().containsAll(EnumSet.of(PatternFlags.ADVANCED)));	29
26	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.regionStart()>=0);	28
28	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher.pattern().toString());	28
4	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	25
12	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.pattern().flags().contains(PatternFlags.ADVANCED));	26
15	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.find());	47
29	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertFalse(matcher.pattern().matcher("STR").matches());	39
1	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertTrue(helloClass!=null);	68
3	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertFalse(sourceCode.toString().isEmpty());	53
4	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotEquals(0,sourceCode.length());	53
6	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredMethods().length>0);	68
8	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotSame(Object.class,helloClass);	53
9	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertFalse(helloClass.getDeclaredFields().length>0);	68
6	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotEquals(null,draft_6455.getExtension());	100
8	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertTrue(draft_6455.getExtension()!=null);	100
11	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotSame(null,draft_6455.getExtension());	100
11	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertFalse(webSocketImpl.isClosed());	71
2	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(expected==actual);	100
3	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotNull(actual);	0
8	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotSame(expected,actual);	0
0	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	44
1	SubStatementTest	testGetVerb	assertNotNull(actual);	assertTrue(expected==actual);	44
13	SubStatementTest	testGetVerb	assertNotNull(actual);	assertSame(expected,actual);	44
0	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
4	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.equals(expected));	100
5	ResultTest	testGetDuration	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
6	ResultTest	testGetDuration	assertNotNull(actual);	assertSame(expected,actual);	100
9	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	100
11	ResultTest	testGetDuration	assertNotNull(actual);	assertArrayEquals(expected.toCharArray(),actual.toCharArray());	100
0	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	43
10	StatementTest	testGetAuthority	assertNotNull(actual);	assertTrue(statement.getAuthority()!=null);	43
12	StatementTest	testGetAuthority	assertNotNull(actual);	assertSame(agent,actual);	43
14	StatementTest	testGetAuthority	assertNotNull(actual);	assertFalse(statement.getAuthority()==null);	43
4	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertTrue(tokens.size()>0);	53
5	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotNull(tokens);	96
6	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertFalse(tokens.isEmpty());	98
7	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotEquals(0,tokens.size());	98
10	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertFalse(tokens.contains(null));	98
12	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotSame(0,tokens.size());	98
2	IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	90
9	IssuesTest	testIssue23	assertTrue(true);	assertTrue(parser.getUnsolvedReferences().isEmpty());	0
10	IssuesTest	testIssue23	assertTrue(true);	assertNotEquals(0,schemas.get(0).getElements().size());	0
11	IssuesTest	testIssue23	assertTrue(true);	assertNotNull(parser.getResultXsdElements());	0
1	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	41
2	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	40
3	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertTrue(schemas.size()>0);	41
4	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(0,schemas.size());	41
5	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotSame(0,schemas.size());	41
6	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertTrue(!schemas.isEmpty());	41
9	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertSame(1,schemas.size());	41
10	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotSame(null,schemas);	40
1	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotEquals(a.getHistory(),b.getHistory());	100
3	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotNull(a.getPuzzle());	100
5	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertFalse(a.isSolution());	50
8	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertTrue(a.hashCode()==b.hashCode());	0
9	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotSame(a,b);	100
10	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotEquals(a.toString(),b.toString());	0
0	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer);	49
8	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer.getTestInstance()!=null);	50
12	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertSame(test,testContainer.getTestInstance());	50
0	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotNull(testData);	80
3	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotEquals("STR",testData.getTestCase().getId());	83
6	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertFalse(testData.isStopRequested());	71
9	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(testData.getTestIndex()>=0);	67
11	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertFalse(testData.isCompleted());	88
13	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotSame(testData.getTestCase(),registry.getTest("STR"));	83
2	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(CloudProviderUtils.isLocal("STR"));	50
4	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertNotNull(CloudProviderUtils.isLocal("STR"));	0
6	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertNotSame(true,CloudProviderUtils.isLocal("STR"));	50
7	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertSame(false,CloudProviderUtils.isLocal("STR"));	50
10	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertNotEquals(true,CloudProviderUtils.isLocal("STR"));	50
9	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	100
7	PropertyBindingSupport_bind0_NumericalTest	bind_Float	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(testObject,"STR","STR"));	50
9	PropertyBindingSupport_bind0_NumericalTest	bind_Float	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(bind0(testObject,"STR","STR"));	50
5	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotNull(workerProcess1);	15
6	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotSame(workerProcess1,workerProcess2);	15
9	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotSame(workerProcess1.getProcess(),workerProcess2.getProcess());	21
10	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertTrue(workerProcess1.getLastSeen()<=System.currentTimeMillis());	15
11	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertFalse(workerProcess1.getLastSeen()>System.currentTimeMillis());	15
12	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotEquals(workerAddress1,workerAddress2);	19
3	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertNotNull(simulatorProperties.get("STR","STR"));	28
4	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertTrue(simulatorProperties.get("STR","STR").contains("STR"));	28
5	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertFalse(simulatorProperties.get("STR","STR").isEmpty());	28
9	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertSame("STR",simulatorProperties.get("STR","STR"));	28
1	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertTrue(qResult.size()<=3);	91
2	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotNull(qResult);	91
3	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertFalse(qResult.isEmpty());	91
4	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotEquals(0,qResult.size());	91
7	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotNull(qResult.get(0));	91
10	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertTrue(!qResult.isEmpty());	91
12	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotNull(qResult);	91
13	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotEquals(5,qResult.size());	91
8	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(schema.existsClass("STR"));	76
14	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotSame(property,null);	76
7	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertFalse(doc.containsField("STR"));	91
11	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNull(doc.removeField("STR"));	91
12	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNotEquals(0,set.size());	91
0	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertEquals(null,result);	91
1	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
4	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotNull(res);	33
5	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	41
6	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>0);	41
12	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotNull(res.get(0));	41
0	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertEquals(0,res.size());	79
2	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNotNull(res);	79
6	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertFalse(res.contains(null));	79
3	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	51
8	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(0,cm.count("STR"));	50
13	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertTrue(conn.isFine());	53
2	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotNull(client2);	20
6	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	20
8	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotEquals(client1,client2);	20
11	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertFalse(System.getProperty(Configs.CONN_MONITOR_SWITCH).isEmpty());	20
1	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertTrue(proxy.getPort()==8080);	100
2	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy.getHost());	100
4	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotEquals("STR",proxy.getProtocol());	100
5	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertFalse(proxy.getHost().isEmpty());	100
7	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy.getProtocol());	100
9	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotSame("STR",proxy.getHost());	100
12	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertFalse(proxy.getProtocol().isEmpty());	100
0	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotNull(res);	100
4	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(res.length>0);	100
5	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotEquals(0,spsList.size());	0
6	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertEquals(2,ppsList.size());	0
13	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertFalse(spsList.isEmpty());	0
0	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotNull(profiles);	43
2	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(profiles.size()>0);	86
6	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertFalse(profiles.isEmpty());	86
1	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder);	94
3	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertSame(builder,builder);	94
4	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotEquals(null,builder);	94
6	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(builder.getSpec().getInitContainers().isEmpty());	94
8	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotSame(builder,getPodTemplateBuilder("STR","STR"));	94
12	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertTrue(builder.getSpec().getInitContainers()!=null&&builder.getSpec().getInitContainers().size()>0);	94
4	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag==latestTag||resultedTag==oldTag);	100
5	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	100
6	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotEquals(latestTag,oldTag);	100
7	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag.equals(latestTag)||resultedTag.equals(oldTag));	100
8	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertSame(latestTag,resultedTag);	100
9	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertFalse(resultedTag==oldTag);	100
10	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(oldTag,resultedTag);	100
12	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag==latestTag&&resultedTag!=oldTag);	100
13	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(latestTag,oldTag);	100
2	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotNull(cookies);	0
3	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertFalse(cookies.getCookies().isEmpty());	0
4	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotEquals(0,cookies.getCookies().size());	0
1	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotEquals(FilterReply.DENY,filter.decide(evt));	50
2	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.NEUTRAL);	100
3	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.DENY);	50
4	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotSame(FilterReply.ACCEPT,filter.decide(evt));	0
5	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertSame(FilterReply.NEUTRAL,filter.decide(evt));	100
6	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotNull(filter);	100
7	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotSame(null,filter.decide(evt));	50
1	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	10
4	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	20
5	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
7	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult.length(),normalizedUrl.length());	70
8	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(expectedResult,normalizedUrl.toUpperCase());	10
10	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl.toUpperCase());	10
2	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.isEmpty());	83
3	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotNull(map.values());	40
4	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotEquals(2,map.size());	40
8	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(3,map.size());	100
9	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsValue(9));	83
11	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.containsKey("STR"));	50
14	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotEquals(0,map.keySet().size());	100
1	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	32
2	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	32
3	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotNull(formas);	23
4	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	32
7	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertSame(formas,formas);	22
8	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotSame(formas,null);	23
0	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertTrue(true);	100
3	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertNotNull(cm);	100
8	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertFalse(false);	100
11	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertNotSame(null,cm);	100
4	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher.pattern());	24
6	MatcherTest	reset	assertTrue(matcher.find());	assertNotEquals(0,matcher.regionEnd());	25
7	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find()&&matcher.regionStart()==0);	45
13	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.matches()||matcher.find());	45
1	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343,OVarIntSerializer.readAsLong(bytes));	99
4	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotNull(bytes);	97
5	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertTrue(bytes.bytes.length>0);	97
10	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertFalse(bytes==null);	97
2	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size()>=0);	89
3	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	89
9	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertSame(cacheEntry.getCachePointer(),cachePointer);	89
2	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertEquals(1,server.listDatabases().size());	91
3	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	89
6	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotNull(server);	91
8	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotEquals(0,server.listDatabases().size());	89
10	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.listDatabases().isEmpty());	91
12	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotSame(0,server.listDatabases().size());	94
0	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
2	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotNull(res);	33
3	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	41
4	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertTrue(!res.isEmpty());	41
8	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>=0);	33
14	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertFalse(res.contains(null));	33
1	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	100
5	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertEquals(2,compositeKey.getKeys().size());	100
7	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,anotherCompositeKey);	99
9	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey);	100
11	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey.getKeys().size(),anotherCompositeKey.getKeys().size());	100
12	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.compareTo(anotherCompositeKey)<=0);	99
13	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey.getKeys(),anotherCompositeKey.getKeys());	100
5	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertTrue(resultinstanceofArrayList);	92
6	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	91
7	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotNull(result);	92
10	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertFalse(expectedResult.isEmpty());	91
12	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotSame(expectedResult,result);	91
3	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertTrue(property.getType().equals(OType.STRING));	68
4	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotNull(property);	68
5	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isNotNull());	68
6	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotSame(companyClass,null);	68
9	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isIndexed());	68
11	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNull(property.getMax());	68
13	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals("STR",property.getDescription());	68
3	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertFalse(objects.isEmpty());	83
7	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotEquals(0,objects.size());	83
13	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertFalse(subObjects.isEmpty());	83
14	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotSame(objects,subObjects);	83
6	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	100
10	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	27
12	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotNull(w);	20
13	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotEquals("STR",w.getToken());	20
1	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertEquals(1,viņš.wordformsCount());	30
2	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotNull(viņš.getBestWordform());	26
4	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertFalse(viņš.hasAttribute("STR","STR"));	20
5	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotEquals(0,viņš.wordformsCount());	27
6	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(viņš.toString().startsWith("STR"));	100
7	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertEquals("STR",viņš.getToken());	100
11	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertSame(Wordform.class,viņš.getBestWordform().getClass());	26
12	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotSame(0,viņš.wordformsCount());	27
13	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotEquals("STR",viņš.getBestWordform().toString());	26
4	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.contains("STR"));	100
6	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotEquals(0,flattened.size());	100
7	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotNull(flattened);	100
8	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattenedinstanceofCollection);	100
2	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
4	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotNull(result);	0
3	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.listFiles().length>0);	69
5	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(sourceFile);	69
6	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(sourceFile.isDirectory());	69
7	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(sourceFile.isHidden());	69
9	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertEquals(false,sourceFile.isDirectory());	69
10	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotEquals(0,targetDir.listFiles().length);	69
11	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.isDirectory());	69
14	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.listFiles()!=null&&targetDir.listFiles().length>0);	69
6	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(src.exists());	69
8	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(util);	69
10	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(serverDirectory.isDirectory());	69
11	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotEquals(0,targetDir.listFiles().length);	69
12	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertEquals(0,srcDir.listFiles().length);	69
14	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotSame(serverDirectory,targetDir);	69
2	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	20
3	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
4	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotNull(result);	0
7	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
11	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
12	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertFalse(result.equalsIgnoreCase("STR"));	0
13	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
14	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertTrue(result.length()>0);	20
6	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertFalse(result.toString().isEmpty());	100
2	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotNull(deflateExtension);	100
3	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertSame(PerMessageDeflateExtension.class,deflateExtension.getClass());	100
5	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertTrue(deflateExtension.isServerNoContextTakeover());	0
6	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.isClientNoContextTakeover());	0
10	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.getProvidedExtensionAsServer().isEmpty());	100
11	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer());	100
13	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame(deflateExtension,null);	100
2	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.equals(defaultExtension1));	50
3	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.equals(null));	100
4	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotNull(defaultExtension0);	100
5	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertSame(DefaultExtension.class,defaultExtension0.getClass());	100
6	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotSame(defaultExtension0,defaultExtension1);	100
8	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.toString().isEmpty());	100
9	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(0,defaultExtension0.getProvidedExtensionAsClient().length());	100
12	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.acceptProvidedExtensionAsServer("STR"));	100
10	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertSame(MockVPXBooleanDecoder.class,decoder.getClass());	0
12	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotNull(c.yModeProbs);	0
13	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertFalse(decoder.isFullyRead());	0
0	VerbsTest	testRegistered	assertNotNull(actual);	assertEquals(actual,actual);	0.0
7	VerbsTest	testRegistered	assertNotNull(actual);	assertSame(actual,actual);	0.0
6	VerbsTest	testImported	assertNotNull(actual);	assertFalse(actual.getDisplay().isEmpty());	80
8	VerbsTest	testImported	assertNotNull(actual);	assertNotSame(null,actual.toString());	25
9	VerbsTest	testInitialized	assertNotNull(actual);	assertNotSame(null,actual);	50
10	VerbsTest	testInitialized	assertNotNull(actual);	assertFalse(actual.toString().isEmpty());	38
13	VerbsTest	testInitialized	assertNotNull(actual);	assertSame(actual,actual);	0
3	StatementTest	testToString	assertNotNull(actual);	assertNotNull(actual.getActor());	43
8	StatementTest	testToString	assertNotNull(actual);	assertNotNull(actual.getObject());	43
11	StatementTest	testToString	assertNotNull(actual);	assertSame(agent,actual.getActor());	43
13	StatementTest	testToString	assertNotNull(actual);	assertNotSame(statement,actual);	33
0	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	100
2	ActivityTest	testGetObjectType	assertNotNull(actual);	assertSame(expected,actual);	100
1	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
3	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotNull(actual);	0
5	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotSame(expected,actual);	0
1	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
3	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
4	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotSame(expected,actual);	0
1	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100);	0
2	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(0,state.randomInt(100));	100
3	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotNull(value);	0
4	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(value,state.randomInt(99));	100
5	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<99);	0
6	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotSame(value,state.randomInt(100));	100
7	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<101);	0
8	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotSame(0,state.randomInt(100));	100
9	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value!=state.randomInt(100));	100
2	PropertyBindingSupport_bind0_NumericalTest	bind_long	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(bind0(testObject,"STR","STR"));	50
3	PropertyBindingSupport_bind0_NumericalTest	bind_long	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(testObject,"STR","STR"));	50
7	PropertyBindingSupport_bind0_NumericalTest	bind_long	assertTrue(bind0(testObject,"STR","STR"));	assertNotSame(testObject,bind0(testObject,"STR","STR"));	50
12	PropertyBindingSupport_bind0_NumericalTest	bind_Double	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	100
2	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(customFile.exists());	25
3	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotNull(simulatorProperties);	25
4	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertFalse(customFile.isDirectory());	25
5	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals("STR",simulatorProperties.getCloudIdentity());	26
6	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(customFile.isFile());	25
8	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(simulatorHome.isDirectory());	25
9	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotSame(identityFile,customFile);	25
13	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotSame(simulatorHome,customFile.getParentFile());	25
2	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).isEmpty());	92
6	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(1,nouns.size());	99
7	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	99
8	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	99
9	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotSame(nouns,OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens));	97
10	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.size()>0);	99
11	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotSame("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	97
0	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser);	100
6	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals(3,env.size());	73
7	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	73
9	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	73
10	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNull(env.get("STR"));	73
11	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotSame("STR",env.get("STR"));	73
1	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass!=null);	68
3	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.getDeclaredClasses().length==0);	68
7	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredMethods().length>0);	68
8	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertEquals(1,helloClass.getDeclaredClasses().length);	68
12	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getModifiers()==java.lang.reflect.Modifier.PUBLIC);	68
13	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotSame(String.class,helloClass.getSuperclass());	68
14	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.isInterface());	68
7	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNull(httpget.getFirstHeader("STR"));	0
0	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	100
1	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(0,duration);	100
2	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotNull(duration);	100
4	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>0);	100
5	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotSame(0,duration);	100
6	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertFalse(duration>durationLimit);	100
7	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotSame(started,System.nanoTime());	100
8	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(durationLimit,duration);	100
3	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertNotNull(toString());	100
4	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse(toString().isEmpty());	100
7	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertNotEquals("STR",toString());	100
11	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse(toString().contains("STR"));	100
12	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertTrue(toString().length()>0);	100
13	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertNotEquals("STR",toString());	100
14	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertNotSame(null,toString());	100
3	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotEquals("STR",clazz.getCustom("STR"));	94
4	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertTrue(schema.existsClass(className));	95
5	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotSame(clazz,schema.getClass("STR"));	94
6	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNull(clazz.getProperty("STR"));	94
7	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertFalse(schema.existsClass("STR"));	94
8	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotSame(result,null);	94
0	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	95
2	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(resultinstanceofList);	95
21	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(resultinstanceofArrayList);	95
1	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(OType.INTEGER,result[0]);	95
3	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotNull(result);	95
4	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertSame(OType.INTEGER,result[0]);	95
5	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(OType.LINK,result[0]);	95
7	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertFalse(Arrays.asList(result).isEmpty());	95
8	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.BOOLEAN,result[0]);	95
11	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(result.length>0);	95
13	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.LINK,result[0]);	95
19	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(OType.BOOLEAN,result[0]);	95
3	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().isEmpty());	100
4	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotNull(compositeKey.getKeys());	100
6	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotEquals(0,compositeKey.getKeys().size());	100
7	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertTrue(!compositeKey.getKeys().isEmpty());	100
10	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotSame("STR",compositeKey.getKeys().get(0));	100
12	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().contains("STR"));	100
1	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(index.getSize()>0);	40
2	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotNull(index);	39
0	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	33
7	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	33
0	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertNotNull(listener);	32
11	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertTrue(db.exists());	32
2	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertEquals(2,oClass.declaredProperties().size());	78
3	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertFalse(oClass.isAbstract());	78
4	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertTrue(oClass.getSubclasses().isEmpty());	78
8	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertTrue(oSchema.getClasses().contains(oClass));	78
3	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotNull(result);	92
3	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.isDirect());	95
6	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(walChanges);	95
9	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertFalse(buffer.isReadOnly());	95
13	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(buffer);	95
14	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.capacity()>=FIELD_SIZE+serializationOffset);	95
17	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.remaining()>=FIELD_SIZE);	95
4	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	75
2	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(6,otp.length());	75
3	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	75
4	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals("STR",otp);	75
8	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame("STR",otp);	75
9	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(otp.isEmpty());	75
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	54
2	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	54
4	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotEquals(5,routePrioritizer.getPrioritizedRoutes().size());	54
0	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	53
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizerinstanceofProvidedPriorityRoutePrioritizer);	53
4	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	54
3	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotEquals(null,transform);	67
11	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(src.getWidth()>0);	33
12	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(src.getData());	33
13	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(dst.getHeight()==2);	33
14	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotSame(src.getColor(),dst.getColor());	33
16	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotEquals(ColorSpace.RGB,dst.getColor());	33
17	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertEquals(2,dst.getHeight());	33
19	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertFalse(src.getColor()==dst.getColor());	33
21	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertEquals(2,src.getHeight());	33
0	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	100
4	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertEquals(expected.length,actual.length);	100
8	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertSame(expected,actual);	100
9	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertFalse(actual==null);	100
10	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertSame(expected,actual);	100
0	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	100
2	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
3	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertSame(expected,actual);	100
8	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.size()>0);	100
14	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	100
24	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(true);	100
25	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertFalse(false);	100
0	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	43
4	StatementTest	testGetObject	assertNotNull(actual);	assertSame(expected,actual);	43
0	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(aXls);	100
1	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertEquals("STR",aXls.getPath());	100
4	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(0,aXls.getSize());	100
5	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(aXls.isDirectory());	100
6	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(aXls.isFile());	100
7	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(expected,actual);	100
8	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	100
9	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(condition);	100
10	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertArrayEquals(expectedArray,actualArray);	100
10	GeneralTest	testGetName	assertEquals("STR",newGeneral(env()).getName());	assertFalse(false);	100
28	GeneralTest	testGetName	assertEquals("STR",newGeneral(env()).getName());	assertTrue(true);	100
3	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup);	100
4	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertFalse(markup.markdown("STR").isEmpty());	23
6	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertTrue(markup.markdown("STR").contains("STR"));	31
3	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(1,env.size());	81
5	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.isEmpty());	81
12	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals(0,env.size());	81
15	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals("STR",env.get("STR"));	81
16	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNull(env.get("STR"));	81
0	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals("STR",result.get("STR"));	81
1	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(result.containsKey("STR"));	81
2	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull(result.get("STR"));	81
3	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals("STR",result.get("STR"));	81
4	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(result.containsKey("STR"));	81
5	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(2,result.size());	81
6	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNull(result.get("STR"));	81
7	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame("STR",result.get("STR"));	81
8	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(result.size()>0);	81
9	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(result.isEmpty());	81
0	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals(expectedMap,filter(env));	81
1	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(filter(env).isEmpty());	81
2	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotNull(filter(env));	81
3	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(filter(env).containsKey("STR"));	81
4	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals(expectedSize,filter(env).size());	81
5	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotEquals(expectedMap,filter(env));	81
6	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertSame(expectedObject,actualObject);	81
7	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotSame(expectedObject,actualObject);	81
8	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(condition);	81
10	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotEquals(expectedValue,actualValue);	81
0	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotNull(atts);	50
3	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertTrue(!atts.isEmpty());	100
5	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertEquals(MBeanAnnotationUtil.getAttributes(testAnnotation1),atts);	50
8	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertFalse(atts.isEmpty());	100
13	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNull(atts.get("STR"));	50
19	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertFalse(atts.containsKey("STR"));	50
1	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertNotNull(processor.getObjectQueryPreparer());	100
6	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertTrue(processor.getObjectQueryPreparer()!=null);	100
10	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertFalse(processor.getObjectQueryPreparer()==null);	100
11	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertNotNull(processor.getObjectQueryPreparer());	100
26	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertNotNull(processor.getObjectQueryPreparer());	100
0	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(Arrays.asList("STR"),tokens.apply("STR"));	0
1	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertTrue(tokens.apply("STR").contains("STR"));	0
2	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertFalse(tokens.apply("STR").isEmpty());	0
3	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotEquals(expectedValue,tokens.apply("STR"));	0
4	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotNull(tokens.apply("STR"));	0
5	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertTrue(tokens.apply("STR").size()>0);	0
6	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotSame(expectedObject,tokens.apply("STR"));	0
7	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotEquals(expectedList,tokens.apply("STR"));	0
8	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertTrue(tokens.apply("STR").containsAll(expectedList));	0
9	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertArrayEquals(expectedArray,tokens.apply("STR").toArray());	0
17	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	assertTrue(true);	18
3	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotNull(iterator);	100
25	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertFalse(false);	0
5	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.containsAll(Arrays.asList(1,2,3))&&expected.size()==3);	100
10	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.size()==3);	100
15	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.size()>0);	100
17	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(!expected.isEmpty());	100
22	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertNotEquals(0,expected.size());	100
4	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
5	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotNull(result);	0
6	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
7	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertTrue(result.length()>0);	33
8	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	33
9	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotEquals(0,result.length());	33
10	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotNull(result);	0
3	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	75
4	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	25
6	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()>0);	75
9	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(!filtered.isEmpty());	75
16	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.size()==0);	75
1	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.lookingAt());	100
2	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertEquals(expectedValue,actualValue);	100
3	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotNull(object);	100
4	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotEquals(expectedValue,actualValue);	100
5	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertArrayEquals(expectedArray,actualArray);	100
6	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNull(object);	100
7	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotSame(expectedObject,actualObject);	100
8	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertSame(expectedObject,actualObject);	100
16	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotEquals(expectedValue,actualValue,delta);	100
0	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	25
2	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	30
5	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	30
7	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(!formas.isEmpty());	30
28	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.contains("STR"));	25
2	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotNull(defaultExtension);	100
3	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertFalse(defaultExtension.toString().isEmpty());	100
4	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotEquals("STR",defaultExtension.toString());	0
6	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.getProvidedExtensionAsClient().isEmpty());	100
9	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotEquals(null,defaultExtension);	100
11	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertSame(DefaultExtension.class,defaultExtension.getClass());	100
13	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.acceptProvidedExtensionAsClient("STR"));	100
20	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertFalse(false);	69
7	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotNull(sql);	89
8	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotEquals(0,sql.toString().length());	89
9	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	89
11	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotSame(null,sql);	89
14	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotSame("STR",sql.toString());	89
1	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotNull(sql.select().from("STR").orderBy("STR"));	90
3	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertFalse(sql.select().from("STR").orderBy("STR").toString().isEmpty());	90
4	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.select().from("STR").orderBy("STR").toString());	90
6	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotNull(sql.select().from("STR").orderBy("STR").toString());	90
9	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotSame("STR",sql.select().from("STR").orderBy("STR").toString());	90
10	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").orderBy("STR").toString().length()>0);	90
11	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertSame(TSqlBuilder.class,sql.getClass());	90
12	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals(null,sql.select().from("STR").orderBy("STR").toString());	90
13	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").orderBy("STR").toString().contains("STR")||sql.select().from("STR").orderBy("STR").toString().contains("STR")||sql.select().from("STR").orderBy("STR").toString().contains("STR")||sql.select().from("STR").orderBy("STR").toString().contains("STR")||sql.select().from("STR").orderBy("STR").toString().contains("STR"));	90
8	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertArrayEquals(expecteds,expecteds);	100
13	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertNotNull(expecteds);	100
1	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertNotNull(ebmlEncode(10));	36
2	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertTrue(ebmlEncode(10).length>0);	36
10	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertNotEquals(ebmlEncode(10),ebmlEncode(20));	36
14	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertTrue(collection.length>0);	100
1	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.size()>0);	43
2	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertFalse(vertices.isEmpty());	43
3	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotNull(vertices);	31
4	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertSame(1,vertices.size());	43
5	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotEquals(0,vertices.size());	43
8	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.contains(doc));	43
10	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotSame(0,vertices.size());	43
2	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	91
7	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotEquals(null,result);	91
11	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotSame(Collections.emptyList(),result);	91
6	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(expectedResult.containsAll((List<OCompositeKey>)result));	92
7	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotNull(result);	92
8	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	91
12	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(resultinstanceofList&&((List<?>)result).size()==expectedResult.size());	92
14	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertSame(expectedResult.size(),((List<?>)result).size());	92
1	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertEquals(0,result.stream().count());	99
13	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertNotNull(result.getExecutionPlan());	0
14	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertTrue(result.stream().noneMatch(element->element.getProperty("STR").equals("STR")));	0
0	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertEquals(OBJECT.byteValue(),stream[0]);	100
1	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertTrue(stream[0]==OBJECT.byteValue());	100
7	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotNull(stream);	100
8	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotEquals(0,stream.length);	100
11	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertTrue(stream.length>0);	100
0	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertEquals(0,database.countClusterElements(database.getDefaultClusterId()));	78
3	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotNull(ridBag);	78
4	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotEquals(0,ridBag.size());	78
5	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertFalse(ridBag.isEmpty());	78
6	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertEquals(2,ridBag.size());	78
7	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotSame(docOne,docTwo);	78
9	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(database.exists());	78
10	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertEquals(0,rootDoc.getVersion());	78
3	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(idProperty);	69
4	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.isMandatory());	70
6	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(idProperty.isNotNull());	69
7	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals(10,idProperty.getMax());	69
13	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotSame(PROP_ID,idProperty.getName());	69
1	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(idProperty);	69
4	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertSame(companyClass,idProperty.getOwnerClass());	69
6	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(idProperty.isNotNull());	69
11	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNull(idProperty.getDescription());	69
4	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotNull(clazzV);	83
5	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(0,clazzV.getClusterIds().length);	83
9	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertFalse(clazzV.isAbstract());	83
11	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotSame(s,t);	83
2	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotNull(doc);	92
3	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	92
8	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertSame(ODocument.class,doc.getClass());	92
9	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotEquals("STR",doc.getProperty("STR"));	92
11	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNull(doc.getProperty("STR"));	92
3	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertEquals(1,manager.getConnections().size());	63
7	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotSame(null,ret);	63
8	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getConnections().contains(ret));	67
12	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertEquals(0,manager.getConnections().indexOf(ret));	67
14	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotEquals(0,manager.getConnections().size());	63
0	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(compositeKey,anotherCompositeKey);	99
12	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,null);	100
13	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey);	100
14	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.equals(null));	100
1	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertNotSame(request,other);	0
4	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertNotNull(other);	0
8	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertNotEquals(0,params.size());	0
12	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertSame(OQueryRequest.QUERY,request.getOperationType());	25
13	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertFalse(params.isEmpty());	0
3	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotNull(result);	95
7	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertTrue(resultinstanceofjava.lang.String);	95
8	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotEquals(0,result.hashCode());	95
11	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotSame("STR",result);	95
13	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertFalse(mapToTest.isEmpty());	95
14	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertEquals(2,mapToTest.size());	95
13	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNotNull(logger);	83
14	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNotEquals("STR",config.getString(Keys.CUCUMBERPRO_LOGGING));	83
8	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotNull(logger);	83
2	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(comparison!=0);	33
3	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(comparison>0);	67
4	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(comparison==0);	33
8	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotNull(macAddress);	0
12	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertArrayEquals(macAddress.getBytes(),macAddress.getBytes());	0
13	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(macAddress.isMulticast());	17
0	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.isMulticast());	33
1	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertEquals(MULTICAST_ADDRESS,macAddress.toString());	100
2	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.isLocal());	67
3	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotNull(macAddress);	100
8	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotEquals(SPACE_SEPARATOR,macAddress);	100
10	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotSame(null,macAddress);	100
12	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.hashCode()>=0);	0
13	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.toString().isEmpty());	75
1	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotNull(sample1);	100
0	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	100
9	AboutTest	testGetExtensions	assertNotNull(actual);	assertTrue(actual!=null);	100
13	AboutTest	testGetExtensions	assertNotNull(actual);	assertNotSame(expected,actual);	0
0	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	100
1	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertTrue(statementRef.getId().contains(id));	100
2	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotNull(statementRef.getId());	0
4	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertFalse(statementRef.getId().isEmpty());	100
5	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotSame("STR",statementRef.getId());	0
10	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertSame(id,statementRef.getId());	100
14	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertFalse(statementRef.getId()==null);	0
0	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	33
1	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	33
4	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.size()>=expected.size());	33
5	GroupTest	testSetMember	assertNotNull(actual);	assertSame(expected,actual);	33
6	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	33
8	GroupTest	testSetMember	assertNotNull(actual);	assertFalse(actual.isEmpty());	33
10	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.containsAll(expected));	33
11	GroupTest	testSetMember	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	33
13	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.size()>0);	33
1	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	100
2	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertNotNull(actual);	100
6	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertSame(expected,actual);	100
7	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertFalse(actual.isEmpty());	100
0	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.containsAll(expected));	100
2	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
3	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertSame(expected,actual);	100
7	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.size()>=expected.size());	100
8	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	100
9	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	100
11	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.contains(expected.get(0)));	100
1	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	70
2	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	10
4	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	20
5	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
6	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertArrayEquals(expectedResult.toCharArray(),normalizedUrl.toCharArray());	70
7	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(expectedResult.startsWith(normalizedUrl));	40
12	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(expectedResult.equalsIgnoreCase(normalizedUrl));	70
1	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.equalsIgnoreCase(expectedResult));	67
3	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	17
5	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	33
6	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
7	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertArrayEquals(expectedResult.toCharArray(),normalizedUrl.toCharArray());	83
10	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult.toUpperCase(),normalizedUrl);	0
11	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult.length(),normalizedUrl.length());	67
0	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(aXls);	100
2	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedValue,actualValue);	100
3	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(unexpectedValue,actualValue);	100
4	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	100
5	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(condition);	100
6	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(obj);	100
7	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(expectedObj,actualObj);	100
8	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertSame(expectedObj,actualObj);	100
10	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedList,actualList);	100
0	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotNull(frame);	17
1	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertEquals(Opcode.CLOSING,frame.getOpcode());	29
11	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotEquals(0,frame.hashCode());	11
12	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertTrue(frame.equals(frame));	17
1	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(protocol0.getProvidedProtocol().isEmpty());	50
2	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("STR",protocol0.getProvidedProtocol());	50
3	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.getProvidedProtocol());	50
7	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(protocol0.acceptProvidedProtocol("STR"));	100
13	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("STR",protocol0.getProvidedProtocol());	50
14	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertFalse(protocol0.getProvidedProtocol().contains("STR"));	50
4	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertEquals(Status.OK,testServer.response.getStatus());	0
5	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNotEquals("STR",testServer.response.getMimeType());	0
6	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertTrue(testServer.isAlive());	0
8	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertTrue(response.getEntity().getContentLength()>0);	0
5	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotNull(jco.getOptions());	70
6	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertTrue(jco.getOptions().size()>0);	70
7	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotEquals("STR",jco.getTarget());	70
8	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertFalse(jco.getOptions().isEmpty());	70
10	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotSame("STR",jco.getSource());	70
11	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNull(jco.getRelease());	70
13	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotEquals("STR",jco.getRelease());	70
2	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.length()>0);	97
3	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	97
6	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	99
7	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	99
9	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotSame(0,tokens.size());	99
12	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(1,tokens.size());	99
1	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertTrue(true);	31
3	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertNotNull(client);	31
0	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	70
1	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(configFile.isFile());	70
4	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertFalse(configFile.isDirectory());	70
5	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotEquals(null,configFile);	70
6	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(Files.exists(configFile.toPath()));	70
7	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotSame(null,configFile);	70
8	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertFalse(configFile.isHidden());	70
10	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotEquals(0,configFile.length());	70
0	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	100
4	OPLogTest	testDescription	assertEquals("STR",value);	assertFalse(value.isEmpty());	100
14	OPLogTest	testDescription	assertEquals("STR",value);	assertFalse(value.endsWith("STR"));	100
0	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNotNull(obj);	17
4	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNull(obj.getEmail());	17
10	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNotSame("STR",obj.getName());	17
1	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotNull(client2);	20
2	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	20
4	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertFalse(client1.equals(client2));	20
9	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertSame(client1.getClass(),client2.getClass());	20
14	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotEquals(client1.hashCode(),client2.hashCode());	20
2	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotNull(btUrl.getProtocol());	26
3	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(url.isEmpty());	27
4	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotEquals(0,btUrl.getPort());	19
7	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(btUrl.getProperties().isEmpty());	29
8	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotEquals("STR",btUrl.getProperty("STR"));	27
10	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(btUrl.getPort()>0);	19
1	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(processorManager.getProcessor(cmd1));	40
4	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotSame(rpcRequestProcessor1,processorManager.getProcessor(cmd2));	27
7	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertEquals(rpcRequestProcessor2,processorManager.getProcessor(cmd2));	40
8	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotEquals(rpcRequestProcessor1,processorManager.getProcessor(cmd2));	27
0	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotEquals(ResponseStatus.OK,response.getStatus());	59
1	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertTrue(response.getStatus()!=ResponseStatus.OK);	59
2	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertFalse(response.getStatus()==ResponseStatus.OK);	59
3	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotNull(response);	59
4	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotSame(ResponseStatus.OK,response.getStatus());	59
7	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotSame(null,response.getStatus());	59
14	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertFalse(response.getStatus()==ResponseStatus.REPLAYED_OTP);	59
2	YubicoClientTest	testBadOTP	assertNotNull(response);	assertFalse(response.isOk());	68
3	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response.getKeyValueMap());	67
4	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotEquals(ResponseStatus.OK,response.getStatus());	67
6	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotSame(ResponseStatus.REPLAYED_OTP,response.getStatus());	67
8	YubicoClientTest	testBadOTP	assertNotNull(response);	assertFalse(response.getKeyValueMap().isEmpty());	67
9	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNull(response.getNonce());	67
0	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertTrue(actual.containsAll(expected));	100
5	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertTrue(actual.size()>=expected.size());	100
9	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertSame(expected,actual);	100
10	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
11	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	100
14	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	100
0	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	100
5	VerbTest	testSetDisplay	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
6	VerbTest	testSetDisplay	assertNotNull(actual);	assertTrue(expected.equals(actual));	100
8	VerbTest	testSetDisplay	assertNotNull(actual);	assertSame(expected,actual);	100
14	VerbTest	testSetDisplay	assertNotNull(actual);	assertFalse(actual.containsKey("STR"));	100
1	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	43
6	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual.contains(expected));	43
7	StatementTest	testGetId	assertNotNull(actual);	assertSame(expected,actual);	43
9	StatementTest	testGetId	assertNotNull(actual);	assertFalse(actual.isEmpty());	43
1	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertFalse(frame.isFin());	50
2	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotNull(frame);	50
6	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotEquals(Opcode.TEXT,frame.getOpcode());	33
9	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotSame(null,frame);	50
10	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertEquals(Opcode.BINARY,frame.getOpcode());	67
13	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotEquals(0,frame.hashCode());	40
0	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
7	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertFalse(qResult.isEmpty());	0
9	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertTrue(qResult.size()>0);	0
10	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotEquals(0,qResult.size());	0
11	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertTrue(!qResult.isEmpty());	0
14	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotSame(0,qResult.size());	0
3	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.isEmpty());	84
4	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotNull(names);	84
5	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotEquals(0,names.size());	84
10	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotSame(names,elem.getPropertyNames());	84
12	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.contains("STR"));	84
13	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertTrue(names.size()>0);	84
3	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotNull(v);	94
6	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotEquals(0,stream.length);	94
1	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	92
2	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	92
4	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNull(doc.getSchemaClass());	92
6	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc.getIdentity());	92
0	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertNotNull(r);	79
6	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertTrue(r.size()>0);	79
4	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotNull(index);	35
8	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertFalse(index.isAutomatic());	35
4	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	73
5	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals(0,env.size());	73
8	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotSame("STR",env.get("STR"));	73
11	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.containsKey("STR"));	73
0	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotNull(env);	73
2	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotNull(env);	73
4	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertEquals(0,env.size());	73
7	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertTrue(env.isEmpty());	73
9	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertFalse(env.containsKey("STR"));	73
10	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotEquals(5,env.size());	73
11	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertSame(env,env);	73
3	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertTrue(factory.getFilterFactories().isEmpty());	100
5	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertTrue(factoryinstanceofRavenAppenderFactory);	100
0	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(0,map.size());	0
1	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(map.isEmpty());	25
2	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotNull(map);	0
7	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(mapinstanceofAMap);	0
9	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertFalse(map.containsKey(key2));	31
1	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertEquals("STR",filteredList.get(0));	100
2	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(filteredList.contains("STR"));	100
3	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertFalse(filteredList.isEmpty());	100
5	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotEquals(0,filteredList.size());	100
6	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotNull(filteredList);	100
7	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertArrayEquals(expectedArray,filteredList.toArray());	100
8	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotSame(originalList,filteredList);	100
10	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(filteredList.size()>0);	100
11	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNull(filteredList);	100
12	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertSame(originalList,filteredList);	100
4	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertEquals(a.toString(),b.toString());	0
5	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.equals(b));	60
6	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertArrayEquals(a.getCells(),b.getCells());	100
7	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotSame(a,b);	100
8	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotNull(a);	100
12	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertSame(a.getClass(),b.getClass());	100
13	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(Arrays.equals(a.getCells(),b.getCells()));	100
4	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertFalse(matcher.matches());	33
5	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotEquals(3,matcher.regionStart());	26
7	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotNull(matcher.pattern());	26
8	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.find());	48
3	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	19
5	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	27
8	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.wordforms.size()>0);	27
9	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotEquals(0,w.wordforms.size());	27
10	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotNull(w.wordforms.get(0));	27
11	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.wordforms.get(0).toString().contains("STR"));	100
12	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotSame(w,locītājs.analyze("STR"));	20
0	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	27
0	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	75
2	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertEquals(AnnotationTestClass.class,method.getDeclaringClass());	75
4	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertTrue(method.isAnnotationPresent(Prepare.class));	75
5	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertFalse(method.isBridge());	75
7	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertTrue(method.getParameterCount()>=0);	75
10	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotEquals("STR",method.getName());	75
12	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertFalse(method.isSynthetic());	75
1	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertEquals(7,words.size());	99
3	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertFalse(words.isEmpty());	99
4	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotEquals(0,words.size());	99
5	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotNull(words);	99
11	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertFalse(words.contains("STR"));	99
0	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNotNull(properties);	20
3	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNotEquals(0,properties.size());	30
4	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.isEmpty());	30
7	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.containsKey("STR"));	20
1	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotNull(execs.getAppName());	0
4	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotEquals(execs,execs.getAppName());	0
7	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertFalse(execs.getAppName().isEmpty());	0
8	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotSame("STR",execs.getAppName());	0
11	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotEquals("STR",execs.getAppName());	0
