OracleID	ClassName	TestName	TrueOracle	GenOracle	MutationStrength
0	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
4	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertSame(expected,actual);	100
18	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected.length(),actual.length());	100
19	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	100
7	VerbsTest	testVoided	assertNotNull(actual);	assertTrue(actual.serialize().isJsonObject());	22
8	VerbsTest	testVoided	assertNotNull(actual);	assertFalse(actual.getDisplay().isEmpty());	75
16	VerbsTest	testVoided	assertNotNull(actual);	assertFalse(actual.serialize().isJsonNull());	22
0	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	44
1	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual.contains(expected));	44
3	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertFalse(actual.isEmpty());	44
5	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertNotSame(expected,actual,"STR");	33
9	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertSame(expected,actual);	44
18	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(!actual.isEmpty());	44
2	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertEquals(OIntentMassiveInsert.class,db.getActiveIntent().getClass());	84
4	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotEquals(null,db.getActiveIntent());	84
5	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertSame(OIntentMassiveInsert.class,db.getActiveIntent().getClass());	84
6	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotSame(null,db.getActiveIntent());	84
21	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertTrue(db.getActiveIntent()!=null&&db.getActiveIntent().getClass().equals(OIntentMassiveInsert.class));	84
26	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertTrue(db.getActiveIntent()!=null);	84
4	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertFalse(buffer1.equals(buffer2));	99
6	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(10,buffer1.capacity());	99
7	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotNull(buffer2);	99
8	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertFalse(buffer1.hasRemaining());	99
9	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer2.hasRemaining());	99
10	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotSame(buffer1,buffer2);	99
12	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.limit()==10);	99
2	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotNull(qResult);	33
4	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotEquals(0,qResult.size());	33
7	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertFalse(qResult.isEmpty());	33
8	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(qResult.size()>0);	33
9	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotSame(0,qResult.size());	33
16	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(!qResult.isEmpty());	33
21	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertFalse(qResult.contains(null));	33
1	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()>0);	95
2	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotNull(keyIndexDefinition);	95
3	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(0,keyIndexDefinition.getParamCount());	95
9	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotSame(simpleKeyIndexDefinition,keyIndexDefinition);	95
10	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(simpleKeyIndexDefinition,keyIndexDefinition);	95
13	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertSame(OSimpleKeyIndexDefinition.class,keyIndexDefinition.getClass());	95
2	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager.getNewRecords());	94
4	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().contains(null));	94
9	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().containsAll(Collections.emptyList()));	94
12	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotSame(0,manager.getNewRecords().size());	94
13	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().isEmpty()||manager.getNewRecords().size()>0);	94
14	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotEquals(0,manager.getNewRecords().size());	94
17	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().size()>=0);	94
1	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	95
3	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertTrue(docinstanceofODocument);	95
2	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	33
13	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult.next());	33
18	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.stream().count()>0);	33
0	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals(11,(int)test.get(24));	29
1	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.get(24)!=null);	29
2	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNull(test.get(42));	0
3	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals(0,test.size());	40
5	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.size()>0);	60
6	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test);	0
11	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals(1,test.size());	60
17	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertSame(11,test.get(24));	29
20	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.keys());	56
9	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertFalse(decoder.isFullyRead());	0
15	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertNotSame(c,null);	0
0	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertEquals(kindAndName,secondKindAndName);	67
1	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertTrue(kindAndName.equals(secondKindAndName));	67
2	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals(kindAndName,thirdKindAndName);	40
3	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(kindAndName.equals(fourthKindAndName));	60
4	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotSame(kindAndName,fifthKindAndName);	100
6	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertEquals(kindAndName,secondKindAndName);	67
7	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals(thirdKindAndName,fourthKindAndName);	33
9	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(fifthKindAndName.toString().isEmpty());	100
4	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	50
7	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(!filtered.isEmpty());	50
8	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()<=getAllTestData().size());	0
9	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(0,filtered.size());	50
10	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()>0);	50
13	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotSame(getAllTestData(),filtered);	0
18	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertEquals(ArrayList.class,filtered.getClass());	0
25	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()>=0);	0
8	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(is.markSupported());	100
11	ProfileUtilTest	multiple	assertNotNull(is);	assertEquals(795,is.available());	100
13	ProfileUtilTest	multiple	assertNotNull(is);	assertNotEquals(-1,is.read());	100
14	ProfileUtilTest	multiple	assertNotNull(is);	assertNotEquals(InputStream.class,is.getClass());	100
18	ProfileUtilTest	multiple	assertNotNull(is);	assertFalse(is==null);	100
19	ProfileUtilTest	multiple	assertNotNull(is);	assertNotSame(System.in,is);	100
21	ProfileUtilTest	multiple	assertNotNull(is);	assertNotEquals(0,is.available());	100
23	ProfileUtilTest	multiple	assertNotNull(is);	assertEquals(795,is.available());	100
28	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(InputStream.class.isInstance(is));	100
6	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	92
8	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	92
11	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNull(handler.getInitContainer(builder,"STR"));	92
13	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNotEquals("STR",builder.build().getMetadata().getName());	94
28	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(builder.build().getSpec().getInitContainers().isEmpty());	94
9	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotNull(url);	79
13	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotEquals(config,url);	79
14	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertEquals(url,url);	79
16	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame(config,url);	79
17	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertFalse(url.isEmpty());	80
22	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertSame(config,config);	79
24	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame("STR",url);	79
25	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertFalse(url.contains("STR"));	79
1	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotNull(config);	79
5	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotNull(config.getChild("STR"));	79
7	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotNull(config);	79
28	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotSame(config,config.getChild("STR"));	79
1	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnvBak.exists());	69
6	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnvBak.isFile());	69
7	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertFalse(serverEnv.isDirectory());	69
10	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotNull(serverEnv);	69
13	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotNull(serverDirectory);	69
17	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnv.exists()||!serverEnv.exists());	69
20	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(targetDir.canRead());	69
21	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotEquals(srcDir.getAbsolutePath()+"STR",serverDirectory,true);	69
23	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertFalse(srcDir.isHidden());	69
2	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertEquals("STR",fileString);	0
6	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertFalse(fileString.isEmpty());	69
8	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotSame("STR",fileString);	69
11	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertTrue(fileString.equalsIgnoreCase("STR"));	69
3	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.isFile());	69
4	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotEquals(0,targetFile.length());	69
5	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.canRead());	69
6	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertEquals(targetFile.getParentFile(),targetDir);	69
7	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.lastModified()>0);	69
8	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertEquals("STR",targetFile.getName());	0
10	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(util);	69
11	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(configFile);	69
2	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.DENY);	100
3	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals(FilterReply.NEUTRAL,filter.decide(evt));	50
4	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertSame(FilterReply.DENY,filter.decide(evt));	100
5	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.NEUTRAL);	50
6	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotNull(filter);	100
9	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals("STR",evt.getLoggerName());	100
11	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertFalse(filter.isStopped());	0
2	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.contains("STR"));	9
3	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	9
4	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(testUrl,normalizedUrl);	0
1	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.startsWith(expectedResult));	25
2	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	13
4	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	25
5	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testUrl,normalizedUrl);	25
7	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.contains("STR"));	13
1	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.equals(expectedResult));	67
2	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
3	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	22
4	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	33
5	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult.substring(7)));	67
8	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertArrayEquals(expectedResult.toCharArray(),normalizedUrl.toCharArray());	67
13	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertEquals(Arrays.asList(expectedResult).hashCode(),Arrays.asList(normalizedUrl).hashCode());	67
14	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(expectedResult,normalizedUrl.toLowerCase());	22
4	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	74
5	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotNull(result);	39
6	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotEquals(list,result.size());	39
7	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.size()>0);	74
19	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.stream().noneMatch(worker->worker.getTags().containsValue("STR")));	39
1	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotNull(registry);	34
8	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry.agentCount()>=0);	34
10	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotEquals(null,registry);	34
11	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry!=null);	34
12	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertFalse(registry==null);	34
8	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotEquals(0,registry.agentCount());	41
21	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotNull(registry);	35
25	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertFalse(registry.getAgents().isEmpty());	39
26	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.getAgents().size()>0);	39
1	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotNull(moneyToStrUAHRUS);	100
18	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotSame(conn,cm.get("STR"));	49
21	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNull(cm.get("STR"));	44
4	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertTrue(graph.outgoingEdges("STR").isEmpty());	64
1	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().size()==0);	100
2	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().size());	100
7	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().stream().allMatch(e->e.getFrom()!=null&&e.getTo()!=null));	67
1	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	63
2	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql);	89
5	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	89
7	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	89
8	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotSame(null,sql);	89
9	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(sql.select("STR","STR").from("STR").groupBy("STR").having("STR").toString().contains("STR")&&sql.toString().contains("STR")&&sql.toString().contains("STR"));	89
14	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals(0,sql.toString().length());	89
15	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(sql.select("STR","STR").from("STR").groupBy("STR").having("STR").toString().contains("STR"));	89
17	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().endsWith("STR"));	89
25	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals(sql,sql.toString());	89
0	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	70
3	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(logger);	70
6	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotEquals(0,sourceCode.length());	70
7	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertSame(java.util.ArrayList.class,res.getClass());	70
8	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(helloClass);	70
12	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(helloClass);	70
2	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotNull(ceļu);	20
3	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ceļu.wordforms.isEmpty());	27
5	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotEquals(0,ceļu.wordforms.size());	27
11	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.getCorrectWordform()!=null||!ceļu.wordforms.isEmpty());	27
17	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertEquals("STR",ceļu.getToken());	100
19	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ceļu.wordforms.contains(null));	20
23	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotSame(ceļu,locītājs.analyze("STR"));	20
28	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ceļu.wordforms.size()==0);	27
29	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertFalse(mockObjectQueryPreparer==poller.getObjectQueryPreparer());	100
3	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getPublicId());	66
4	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertFalse(response.getOtp().isEmpty());	67
6	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	67
0	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(-1,p.getBlankIndex());	100
2	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotNull(p);	100
9	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertSame(Puzzle.class,p.getClass());	100
13	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotSame(0,p.getBlankIndex());	100
19	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()>=0);	100
20	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotSame(-1,p.getBlankIndex());	100
26	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertFalse(p.getBlankIndex()<0);	100
29	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(0,p.getBlankIndex());	100
1	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotNull(vārds);	19
2	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(vārds.wordforms.isEmpty());	21
3	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(1,vārds.wordforms.size());	29
4	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotEquals(0,vārds.wordforms.size());	21
8	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.getToken().contains("STR"));	100
10	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals("STR",vārds.getToken());	100
11	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(vārds.wordforms.contains(null));	19
14	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(!vārds.wordforms.isEmpty());	21
8	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.toString().contains("STR"));	100
9	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals("STR",lūzīs.getToken());	100
1	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals(1,w.wordforms.size());	18
2	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotNull(w);	17
3	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	18
4	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotEquals(0,w.wordforms.size());	18
7	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertSame(Wordform.class,w.wordforms.get(0).getClass());	18
13	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	100
14	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.wordforms.size()<=3);	17
1	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertTrue(simulatorProperties.getCoordinatorPort()>=0);	23
2	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotNull(simulatorProperties);	26
4	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertFalse(simulatorProperties.getCoordinatorPort()<0);	23
8	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotEquals(-1,simulatorProperties.getCoordinatorPort());	23
2	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotNull(exception.getCause());	100
3	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotEquals("STR",exception.getClass().getSimpleName());	50
4	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertSame(RuntimeException.class,exception.getCause().getClass());	100
5	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	50
7	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotSame(Throwable.class,exception.getClass());	50
9	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotNull(exception);	50
10	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotEquals("STR",exception.getClass().getSimpleName());	50
2	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertFalse(exceptionFile.isDirectory());	21
4	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.canRead());	32
6	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotEquals(0,exceptionFile.length());	35
7	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.isFile());	32
10	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(exceptionFile.getParentFile());	21
13	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.exists()&&exceptionFile.isFile());	32
14	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.length()>0);	35
0	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotNull(loggerA_lh1);	21
1	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA0,loggerB0);	36
6	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA1.equals(loggerA0));	50
7	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA1,loggerB0);	29
8	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA1==loggerA0);	36
9	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertFalse(loggerA1==loggerB0);	29
11	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA0.hashCode()!=loggerB0.hashCode());	29
13	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertFalse(loggerA0.equals(loggerB0));	36
14	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertFalse(loggerA_lh0.equals(loggerA_lh1));	29
0	StyleTest	tapered	assertEquals(attrs(attr("STR","STR"),attr("STR",5),attr("STR","STR")),attrs(Style.tapered(5,Arrow.DirType.BOTH)));	assertNotNull(attrs());	100
0	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	95
2	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	95
3	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotNull(doc);	95
5	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertTrue(docinstanceofODocument);	95
0	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(classLinked,prop.getLinkedClass());	82
0	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	15
10	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertFalse(g.isClosed());	15
3	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertFalse(parentArray.isEmpty());	95
4	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertEquals(4,parentArray.size());	95
6	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertTrue(parentArray.contains(2));	95
7	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertSame(object4,parentArray.get(3));	95
10	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotEquals(0,parentArray.size());	95
11	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotSame(object4,doc.field("STR"));	95
0	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals(doc,doc1);	95
1	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotEquals(doc,doc1);	95
2	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(doc.equals(doc1));	95
3	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(doc);	95
4	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertFalse(doc.equals(doc1));	95
5	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotSame(doc,doc1);	95
11	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNull(doc1.field("STR"));	95
1	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToRemove.isEmpty());	95
2	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotEquals(0,keysToAdd.size());	95
3	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotNull(propertyIndex);	95
5	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertFalse(keysToAdd.containsKey(123));	95
6	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertEquals(2,keysToAdd.size());	95
8	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey(42));	95
10	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotSame(multiValueChangeEventOne,multiValueChangeEventTwo);	95
11	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsValue(1));	95
12	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertSame(propertyIndex,propertyIndex);	95
3	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertFalse(list.isEmpty());	0
6	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertTrue(list.size()>0);	0
12	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertTrue(db.exists());	0
0	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotNull(results);	93
2	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>0);	93
9	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertFalse(results.isEmpty());	93
2	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	62
5	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getH());	62
6	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertFalse(response.isOk());	64
8	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotEquals("STR",response.getOtp());	62
12	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotSame(ResponseStatus.OK,response.getStatus());	62
3	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertNotNull(result);	0
7	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertFalse(result.endsWith("STR"));	0
4	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
6	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertTrue(!result.isEmpty());	0
3	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	47
8	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotNull(fields);	13
9	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertEquals(1,fields.size());	47
1	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	49
6	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals("STR",ret);	48
7	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertFalse(ret==null);	49
8	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	49
9	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertTrue(!ret.isEmpty());	49
13	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	49
3	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
1	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	100
2	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertTrue(invalidHandshakeException.getCloseCode()==CloseFrame.PROTOCOL_ERROR);	100
5	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotSame(null,invalidHandshakeException);	100
8	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	100
9	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotEquals(null,invalidHandshakeException);	100
11	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNull(invalidHandshakeException.getCause());	100
2	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(Arrays.equals(exp,clazz));	100
3	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotNull(clazz);	100
5	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotSame(exp,clazz);	67
7	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertFalse(Arrays.asList(clazz).contains(null));	100
8	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp.length,clazz.length);	100
10	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length>0);	100
11	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertFalse(clazz.length==0);	100
12	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length!=0);	100
5	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertFalse(b.isEmpty());	0
6	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertEquals(31,b.length());	100
10	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b.cardinality()>0);	0
3	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertEquals("STR",CommUtil.escapeJava("STR").replaceAll("STR","STR"));	100
3	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertFalse(map.containsKey("STR"));	0
10	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertFalse(map.containsValue("STR"));	0
1	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()==0);	38
2	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertFalse(p.getDistanceToGoal()!=0);	38
3	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotNull(p);	100
5	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotEquals(10,p.getDistanceToGoal());	13
6	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()>=0);	13
7	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,Integer.compare(p.getDistanceToGoal(),0));	38
14	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()<=10);	38
1	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0);	100
4	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>=0);	100
5	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotEquals(0,panel.getTurtleCount());	100
6	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()<=10);	100
7	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(panel,panel.getTurtleCount());	100
8	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotEquals(5,panel.getTurtleCount());	100
9	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotNull(panel);	100
11	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotSame(0,panel.getTurtleCount());	100
13	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()<100);	100
0	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertArrayEquals(a,a);	90
6	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertTrue(a!=null);	90
9	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertNotNull(a);	90
3	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotEquals(Arrays.asList(null,null,null),Arrays.asList(actuals));	90
4	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotNull(actuals);	90
5	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertFalse(Arrays.asList(actuals).isEmpty());	90
6	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertTrue(actuals.length>0);	90
7	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotSame(Arrays.asList("STR","STR","STR"),Arrays.asList(actuals));	90
9	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertSame(Arrays.asList("STR","STR","STR").getClass(),Arrays.asList(actuals).getClass());	90
2	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isLocal());	100
3	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isMulticast());	100
4	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotNull(macAddress.getBytes());	100
5	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertTrue(macAddress.equals(macAddress));	67
6	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals(null,macAddress);	100
8	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertEquals(6,macAddress.getBytes().length);	100
11	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals("STR",macAddress.toString());	25
12	TimestampParserTest	testParseNull	assertNull(parsed);	assertSame(parsed,parsed);	67
1	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertTrue(exception.getMessage().contains(MESSAGE));	100
2	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotNull(exception);	100
3	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotEquals(0,exception.hashCode());	100
4	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertSame(ValidationException.class,exception.getClass());	100
6	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotNull(exception);	100
8	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	100
9	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertEquals(ValidationException.class,exception.getClass());	100
11	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotSame(null,exception);	100
2	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotNull(actual);	11
11	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertFalse(actual.toString().isEmpty());	11
13	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotSame(data,actual);	0
2	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	29
3	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	29
4	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	29
5	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	29
6	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	29
7	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(matcher.matches());	41
2	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertEquals(0,matcher.regionStart());	26
5	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotNull(matcher.pattern());	26
6	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotEquals(0,matcher.regionEnd());	27
7	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.find());	47
8	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotNull(matcher.flags());	26
9	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	26
10	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotEquals("STR",matcher.pattern().pattern());	26
12	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotSame("STR",matcher.pattern().pattern());	26
3	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertFalse(sourceCode.toString().isEmpty());	53
4	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotEquals(0,sourceCode.length());	53
7	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotSame(sourceCode,helloClass.getProtectionDomain());	68
8	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertTrue(helloClass.getMethods().length>0);	68
9	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertFalse(draft_6455.getExtension()==null);	100
10	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotSame(null,draft_6455.getExtension());	100
3	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertEquals(Draft_6455.class,webSocketImpl.getDraft().getClass());	71
9	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertFalse(webSocketImpl.isClosing());	71
7	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertFalse("STR".isEmpty());	90
8	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertNotEquals(0,String.join("STR",Arrays.asList("STR","STR","STR")).length());	90
9	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertNotSame("STR",String.join("STR",Arrays.asList("STR","STR","STR")));	90
10	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertNotNull(String.join("STR",Arrays.asList("STR","STR","STR")));	90
11	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertTrue(String.join("STR",Arrays.asList("STR","STR","STR")).contains("STR"));	90
13	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertTrue("STR".startsWith("STR"));	90
3	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(expected==actual);	100
1	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	44
0	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual!=null);	0
7	ResultTest	testGetDuration	assertNotNull(actual);	assertSame(expected,actual);	100
8	ResultTest	testGetDuration	assertNotNull(actual);	assertNotSame(expected,actual,"STR");	0
10	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual,expected);	100
0	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	43
1	IssuesTest	testIssue23	assertTrue(true);	assertFalse(schemas.isEmpty());	91
3	IssuesTest	testIssue23	assertTrue(true);	assertTrue(schemas.size()>0);	0
9	IssuesTest	testIssue23	assertTrue(true);	assertTrue(schemas.size()>=1);	0
0	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	41
2	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas.get(0));	41
3	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.stream().anyMatch(schema->schema.getTargetNamespace().equals("STR")));	40
5	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	40
8	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	40
14	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(0,schemas.size());	41
1	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotSame(a,b);	100
3	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertFalse(history.isEmpty());	100
4	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertFalse(a.isSolution());	50
5	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(1,a.getActualCost());	100
7	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertTrue(b.getEstimatedCost()>0);	38
8	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotNull(a.getPuzzle());	100
9	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotEquals(a.getHistory(),b.getHistory());	100
2	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer.getTestInstance());	50
0	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotNull(testData);	80
3	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(registry.getTests().contains(testData));	80
4	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertFalse(registry.getTests().isEmpty());	60
6	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(testData.getTestIndex()>=0);	67
7	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNull(registry.getTest("STR"));	40
9	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotEquals("STR",testData.getTestCase().getId());	83
12	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(testData.getTestCase().getProperties().isEmpty());	71
6	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(CloudProviderUtils.isLocal("STR"));	50
7	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertNotSame(true,CloudProviderUtils.isLocal("STR"));	50
9	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertNotEquals("STR",CloudProviderUtils.isLocal("STR"));	0
9	PropertyBindingSupport_bind0_NumericalTest	bind_Float	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	100
4	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotNull(workerProcess1);	15
5	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotSame(workerProcess1,workerProcess2);	15
6	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertEquals(workerAddress1,workerProcess1.getAddress());	21
10	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotEquals(workerProcess1.getLastSeen(),workerProcess2.getLastSeen());	23
12	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertTrue(workerProcess1.getLastSeen()>0);	23
14	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertFalse(workerProcess2.getLastSeen()==0);	23
6	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertNotNull(simulatorProperties);	26
9	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotSame(0,qResult.size());	93
5	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	93
2	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotNull(property);	82
7	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotEquals("STR",property.getName());	82
8	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(classA.existsProperty("STR"));	82
9	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(property.isNotNull());	82
10	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotSame(property,classA.getProperty("STR"));	82
11	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertEquals(OType.STRING,property.getType());	82
1	ODocumentSchemalessBinarySerializationTest	testFieldNamesRaw	assertNotNull(fields);	assertEquals(3,fields.length);	92
4	ODocumentSchemalessBinarySerializationTest	testFieldNamesRaw	assertNotNull(fields);	assertNotEquals(0,fields.length);	92
6	ODocumentSchemalessBinarySerializationTest	testFieldNamesRaw	assertNotNull(fields);	assertTrue(fields.length>0);	92
7	ODocumentSchemalessBinarySerializationTest	testFieldNamesRaw	assertNotNull(fields);	assertFalse(fields.length==0);	92
1	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
4	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotNull(res);	33
6	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>0);	41
8	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	41
0	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertEquals(0,res.size());	84
2	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNotNull(res);	84
3	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertFalse(res.contains(null));	84
9	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNull(database.getMetadata().getSchema().getClass("STR"));	84
0	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotNull(value4);	100
4	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertTrue(this.mockJ4pReadResponse1.getValue(this.att1).equals(this.value1));	100
5	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertFalse(this.att2.equals(this.value2));	100
7	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertTrue(!this.value3.equals("STR"));	100
8	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotSame(this.objectName1,this.objectName2);	100
1	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertEquals(null,result);	38
3	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertTrue(result==null);	38
5	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertFalse(result!=null);	38
3	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	51
4	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(0,cm.count("STR"));	47
14	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotEquals(null,conn);	53
0	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotNull(client2);	20
2	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	20
9	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotEquals("STR",System.getProperty(Configs.CONN_RECONNECT_SWITCH));	20
10	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotNull(client1.isConnectionMonitorSwitchOn());	28
3	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy);	100
4	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotEquals(0,proxy.getPort());	100
8	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotSame("STR",proxy.getProtocol());	100
9	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNull(proxy.getUsername());	100
2	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotNull(res);	100
3	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(res.length>0);	100
9	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertFalse(ppsList.isEmpty());	0
10	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotEquals(0,res.length);	100
11	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertEquals(spsList.get(0).array()[0],115);	0
13	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(avcCBox.getProfile()==66);	50
2	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertFalse(profiles.isEmpty());	86
3	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotEquals(0,profiles.size());	86
4	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotNull(profiles);	43
3	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder);	94
1	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotEquals(oldTag,resultedTag);	100
3	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(service.newerTag(oldTag,latestTag)==latestTag);	100
4	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	100
5	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(oldTag,resultedTag);	100
6	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertFalse(service.newerTag(oldTag,latestTag)==oldTag);	100
8	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(service.newerTag(oldTag,latestTag),oldTag);	100
12	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag==latestTag||resultedTag==oldTag);	100
1	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertTrue(cookies.getCookies().size()>0);	0
1	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotEquals(FilterReply.DENY,filter.decide(evt));	50
2	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.DENY);	50
3	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertSame(FilterReply.NEUTRAL,filter.decide(evt));	100
4	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.DENY);	50
5	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotNull(filter.decide(evt));	50
6	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotSame(FilterReply.DENY,filter.decide(evt));	50
9	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.NEUTRAL||filter.decide(evt)==FilterReply.DENY);	50
2	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	10
4	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.contains("STR"));	10
3	MoneyToStrTest	checkUSDRUS	assertEquals("STR",moneyToStrUSDRUS.convert(V_300D));	assertNotNull(moneyToStrEURRUS);	100
1	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(3,map.size());	100
2	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.isEmpty());	83
3	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotEquals((Object)10,map.get("STR"));	40
4	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsValue(9));	83
5	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotNull(formas);	23
14	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertNotNull(cm);	100
1	MatcherTest	reset	assertTrue(matcher.find());	assertEquals(0,matcher.regionStart());	25
3	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher.pattern());	25
4	MatcherTest	reset	assertTrue(matcher.find());	assertFalse(!matcher.lookingAt());	46
5	MatcherTest	reset	assertTrue(matcher.find());	assertNotEquals(0,matcher.regionEnd());	26
8	MatcherTest	reset	assertTrue(matcher.find());	assertSame(pattern,matcher.pattern());	25
9	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher);	25
14	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.regionStart()<=matcher.regionEnd());	25
0	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343,OVarIntSerializer.readAsLong(bytes));	99
1	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertTrue(bytes.offset>=0);	98
2	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotNull(bytes);	98
2	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.isEmpty());	93
3	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	93
4	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotEquals(0,treeBucket.getValuesFreeListFirstIndex());	93
8	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(cacheEntry.isLockAcquiredByCurrentThread());	93
11	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertEquals(0,cacheEntry.getUsagesCount());	93
14	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNull(cacheEntry.getChanges());	93
2	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotNull(server.existsDatabase("STR"));	94
3	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	90
0	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
4	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertTrue(!res.isEmpty());	41
5	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	41
6	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotNull(res);	33
9	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotSame(null,res);	33
9	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,anotherCompositeKey);	99
11	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertEquals(2,compositeKey.getKeys().size());	100
12	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotNull(anotherCompositeKey);	100
13	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	100
14	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.equals(null));	100
2	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertTrue(resultinstanceofArrayList);	94
3	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	94
5	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotNull(result);	94
7	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertFalse(expectedResult.isEmpty());	94
11	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(expectedResult.size(),2);	94
14	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertSame(expectedResult.getClass(),result.getClass());	94
0	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotNull(property);	68
5	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertTrue(companyClass.properties().size()>0);	68
7	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals("STR",property.getDescription());	68
8	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isNotNull());	68
14	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotSame(0,property.getMin());	68
3	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotNull(document);	84
4	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotEquals(0,timeLine.getMultiValueChangeEvents().size());	84
7	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotSame(subObjects,objects);	84
8	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertEquals(1,objects.size());	84
1	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotNull(viņš);	20
2	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.isEmpty());	100
5	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotEquals(0,flattened.size());	100
6	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattenedinstanceofList);	100
7	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotSame(set,flattened);	100
8	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotNull(flattened);	100
9	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.contains("STR"));	100
2	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotEquals("STR",result);	0
4	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
0	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(sourceFile);	69
2	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(sourceFile);	69
5	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertEquals(false,util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	69
6	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.exists());	69
8	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	69
13	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(sourceFile.canRead());	69
5	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(tempClass.isDirectory());	69
6	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertEquals(4,tempClass.length());	69
7	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.canRead());	69
8	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(tempClass.getAbsolutePath());	69
9	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotEquals(0,tempClass.lastModified());	69
10	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(tempClass.isHidden());	69
11	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.canWrite());	69
12	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(tempClass.getName());	69
2	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotNull(result);	0
3	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
8	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	20
13	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotSame(null,result);	100
14	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertFalse(result.toString().isEmpty());	100
0	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(factory.getJmxServiceUrlFactory());	100
3	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(factory.getJmxServiceUrlFactory());	100
9	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertTrue(factory.getJmxServiceUrlFactory()!=null);	100
2	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotNull(deflateExtension);	100
3	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer());	100
4	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.getProvidedExtensionAsServer().isEmpty());	100
5	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame(null,deflateExtension);	100
11	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame(deflateExtension.getDeflater(),deflateExtension.getInflater());	100
12	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer().trim().replaceAll("STR","STR"));	100
13	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.isClientNoContextTakeover());	0
3	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.equals(defaultExtension1));	50
4	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.equals(null));	100
7	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.acceptProvidedExtensionAsServer("STR"));	100
12	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.copyInstance()==defaultExtension1.copyInstance());	100
14	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.getProvidedExtensionAsClient().isEmpty());	100
2	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertTrue(c.getYModeProbs()[0][1]==Y_MODE_PROBS[1]);	0
4	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertFalse(decoder.isFullyRead());	0
11	VerbsTest	testImported	assertNotNull(actual);	assertFalse(actual.getId().isEmpty());	80
6	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getResult().isSuccess());	44
8	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getAttachments().size()>0);	43
11	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getStored()!=null&&!statement.getStored().isEmpty());	43
12	StatementTest	testToString	assertNotNull(actual);	assertEquals(ID,statement.getId());	43
0	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	100
2	ActivityTest	testGetObjectType	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
9	ActivityTest	testGetObjectType	assertNotNull(actual);	assertSame(expected,actual);	100
12	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
3	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotNull(moneyToStrPER100);	100
1	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertNotNull(moneyToStrUAH);	100
1	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
3	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotNull(actual);	0
4	TestPressure	testToMillibar	assertEquals(expected,actual);	assertFalse(actual.isEmpty());	100
9	TestPressure	testToMillibar	assertEquals(expected,actual);	assertArrayEquals(expected.toCharArray(),actual.toCharArray());	100
10	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotEquals("STR",actual);	0
13	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	100
1	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
3	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
8	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	100
9	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
10	TestPressure	testToInHg	assertEquals(expected,actual);	assertArrayEquals(expected.toCharArray(),actual.toCharArray());	100
12	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(actual.startsWith(expected));	100
0	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertEquals(true,value>=0&&value<100);	0
1	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100);	0
6	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(0,value);	100
7	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertFalse(value<0||value>=100);	0
8	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotSame(0,value);	100
9	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100&&value!=-1);	0
4	PropertyBindingSupport_bind0_NumericalTest	bind_Double	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	100
2	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotNull(simulatorProperties.getCloudIdentity());	26
3	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals("STR",simulatorProperties.getCloudIdentity());	26
5	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotSame("STR",simulatorProperties.getCloudIdentity());	26
6	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertFalse(simulatorProperties.getCloudIdentity().isEmpty());	29
7	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals("STR",simulatorProperties.getCloudIdentity());	26
1	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertEquals(0,options.nonOptionArguments().size());	100
4	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertTrue(options.nonOptionArguments().isEmpty());	100
5	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertFalse(options.hasOptions());	100
9	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertEquals(0,options.nonOptionArguments().toArray().length);	100
10	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotSame(null,options);	100
0	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertEquals("STR",viz.toString());	100
1	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertTrue(!viz.toString().isEmpty());	100
2	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertNotNull(viz);	100
3	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertNotEquals(null,viz);	100
4	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertNotSame(null,viz);	100
5	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertTrue(vizinstanceofGraphviz);	100
6	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertFalse(viz.toString().contains("STR"));	100
9	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertFalse(viz.toString().startsWith("STR"));	100
2	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(first);	67
3	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertEquals(1,embedder.size());	78
6	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertFalse(resp.isEmpty());	67
7	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotSame(null,first);	67
8	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertTrue(response.readableBytes()>0);	67
13	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertFalse(response.toString().contains("STR"));	67
14	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(resp);	67
0	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser);	100
1	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser);	100
8	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertFalse(sample1.isEmpty());	100
9	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotEquals(0,sample1.indexOf("STR"));	100
11	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotSame(sample1,parser);	100
5	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	74
7	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	74
9	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNull(env.get("STR"));	74
10	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals(3,env.size());	74
14	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.containsKey("STR"));	74
2	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass!=null);	68
4	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredClasses().length>0);	68
5	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getMethods().length>0);	68
6	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotEquals(logger,helloClass.getDeclaredFields().length);	68
8	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.isInterface());	68
12	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getConstructors().length>0);	68
13	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotNull(sourceCode.toString());	53
14	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertEquals(String.class,helloClass.getDeclaredMethods()[0].getReturnType());	68
0	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertTrue(responseHandler.toString().contains("STR"));	0
4	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNotEquals("STR",responseHandler.toString());	0
1	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	100
2	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>=0);	100
3	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(0,duration);	100
5	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>0);	100
6	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertFalse(duration<0);	100
12	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>0&&duration<=durationLimit);	100
14	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotSame(duration,0);	100
15	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertFalse(duration>durationLimit);	100
16	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(duration,0);	100
17	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotNull(duration);	100
7	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse("STR".isEmpty());	100
12	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse("STR".isEmpty());	100
0	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertEquals("STR",cookies.getCookies().get(0).getName());	0
1	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertTrue(cookies.getCookies().size()>0);	0
4	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertEquals("STR",cookies.getCookies().get(0).getValue());	0
7	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotEquals("STR",cookies.getCookies().get(0).getDomain());	0
0	OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	assertTrue(headers.containsKey("STR"));	assertEquals(expectedHeaderValue,headers.get("STR").iterator().next());	0
8	OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	assertTrue(headers.containsKey("STR"));	assertNull(requestTemplate.header("STR"));	0
9	OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	assertTrue(headers.containsKey("STR"));	assertFalse(headers.containsKey("STR"));	0
1	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotEquals(FilterReply.DENY,filter.decide(evt));	50
2	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.DENY);	50
3	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertSame(FilterReply.NEUTRAL,filter.decide(evt));	100
4	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.DENY);	50
5	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotNull(filter.decide(evt));	50
6	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotSame(FilterReply.DENY,filter.decide(evt));	50
9	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.NEUTRAL||filter.decide(evt)==FilterReply.DENY);	50
1	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.startsWith("STR"));	85
2	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	10
3	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	85
4	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.contains("STR"));	10
9	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.endsWith("STR"));	85
3	MoneyToStrTest	checkUSDRUS	assertEquals("STR",moneyToStrUSDRUS.convert(V_300D));	assertNotNull(moneyToStrEURRUS);	100
2	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertNotEquals("STR",decode(encoded));	49
5	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertNotSame("STR",decode(encoded));	49
6	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertTrue(decode(encoded).endsWith("STR"));	22
9	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertTrue(decode(encoded).startsWith("STR"));	22
1	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(3,map.size());	100
2	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.isEmpty());	83
3	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotEquals((Object)10,map.get("STR"));	40
4	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsValue(9));	83
8	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotSame(ImmutableList.of("STR","STR","STR"),map.keySet());	0
9	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(15,map.get("STR").intValue());	53
11	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(Integer.valueOf(7),map.get("STR"));	53
5	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotNull(formas);	23
1	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertEquals("STR",config.getString("STR"));	33
3	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertTrue(config.getString("STR").startsWith("STR"));	33
6	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertNotEquals("STR",config.getString("STR"));	0
7	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertNotNull(config.getChild("STR"));	0
11	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertTrue(config.getString("STR").contains("STR"));	49
12	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertEquals("STR",config.getString("STR"));	49
14	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertEquals("STR",config.getString("STR"));	49
14	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertNotNull(cm);	100
1	MatcherTest	reset	assertTrue(matcher.find());	assertEquals(0,matcher.regionStart());	25
3	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher.pattern());	25
4	MatcherTest	reset	assertTrue(matcher.find());	assertFalse(!matcher.lookingAt());	46
5	MatcherTest	reset	assertTrue(matcher.find());	assertNotEquals(0,matcher.regionEnd());	26
8	MatcherTest	reset	assertTrue(matcher.find());	assertSame(pattern,matcher.pattern());	25
9	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher);	25
11	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(pattern.pattern().startsWith("STR"));	25
14	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.regionStart()<=matcher.regionEnd());	25
0	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343,OVarIntSerializer.readAsLong(bytes));	99
1	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertTrue(bytes.offset>=0);	98
2	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotNull(bytes);	98
2	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.isEmpty());	93
3	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	93
4	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotEquals(0,treeBucket.getValuesFreeListFirstIndex());	93
8	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(cacheEntry.isLockAcquiredByCurrentThread());	93
11	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertEquals(0,cacheEntry.getUsagesCount());	93
14	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNull(cacheEntry.getChanges());	93
2	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotNull(server.existsDatabase("STR"));	94
3	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	90
0	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
4	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertTrue(!res.isEmpty());	41
5	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	41
6	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotNull(res);	33
9	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotSame(null,res);	33
9	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,anotherCompositeKey);	99
10	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.getKeys().contains("STR"));	100
11	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertEquals(2,compositeKey.getKeys().size());	100
12	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotNull(anotherCompositeKey);	100
13	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	100
14	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.equals(null));	100
2	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertTrue(resultinstanceofArrayList);	94
3	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	94
5	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotNull(result);	94
7	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertFalse(expectedResult.isEmpty());	94
11	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(expectedResult.size(),2);	94
14	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertSame(expectedResult.getClass(),result.getClass());	94
0	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotNull(property);	68
2	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertEquals("STR",property.getName());	68
5	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertTrue(companyClass.properties().size()>0);	68
7	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals("STR",property.getDescription());	68
8	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isNotNull());	68
11	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotSame("STR",property.getFullName());	68
14	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotSame(0,property.getMin());	68
2	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertTrue(subObjects.contains("STR"));	84
3	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotNull(document);	84
4	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotEquals(0,timeLine.getMultiValueChangeEvents().size());	84
7	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotSame(subObjects,objects);	84
8	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertEquals(1,objects.size());	84
9	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertTrue(document.containsField("STR"));	84
1	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotNull(viņš);	20
0	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertEquals(Arrays.asList("STR","STR","STR","STR","STR"),flattened);	30
1	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattened.containsAll(Arrays.asList("STR","STR","STR","STR")));	30
2	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.isEmpty());	100
4	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattened.contains("STR"));	20
5	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotEquals(0,flattened.size());	100
6	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattenedinstanceofList);	100
7	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotSame(set,flattened);	100
8	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotNull(flattened);	100
9	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.contains("STR"));	100
1	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertTrue(result.contains("STR"));	35
2	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotEquals("STR",result);	0
4	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
8	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertTrue(result.startsWith("STR"));	35
13	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertTrue(result.matches("STR"));	35
0	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(sourceFile);	69
2	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(sourceFile);	69
5	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertEquals(false,util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	69
6	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.exists());	69
7	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertEquals("STR",sourceFile.getName());	69
8	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	69
13	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(sourceFile.canRead());	69
5	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(tempClass.isDirectory());	69
6	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertEquals(4,tempClass.length());	69
7	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.canRead());	69
8	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(tempClass.getAbsolutePath());	69
9	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotEquals(0,tempClass.lastModified());	69
10	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(tempClass.isHidden());	69
11	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.canWrite());	69
12	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(tempClass.getName());	69
1	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertTrue(result.equalsIgnoreCase("STR"));	20
2	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotNull(result);	0
3	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
4	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertTrue(result.contains("STR"));	20
7	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertTrue(result.startsWith("STR"));	20
8	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	20
9	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	20
10	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
2	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertEquals("STR",result.toString());	100
11	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertTrue(result.toString().startsWith("STR"));	100
13	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotSame(null,result);	100
14	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertFalse(result.toString().isEmpty());	100
0	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(factory.getJmxServiceUrlFactory());	100
3	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(factory.getJmxServiceUrlFactory());	100
9	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertTrue(factory.getJmxServiceUrlFactory()!=null);	100
0	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer().trim().replaceAll("STR","STR"));	100
1	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertTrue(deflateExtension.getProvidedExtensionAsServer().startsWith("STR"));	100
2	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotNull(deflateExtension);	100
3	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer());	100
4	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.getProvidedExtensionAsServer().isEmpty());	100
5	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame(null,deflateExtension);	100
10	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertTrue(deflateExtension.toString().contains("STR"));	100
11	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame(deflateExtension.getDeflater(),deflateExtension.getInflater());	100
12	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer().trim().replaceAll("STR","STR"));	100
13	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.isClientNoContextTakeover());	0
3	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.equals(defaultExtension1));	50
4	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.equals(null));	100
7	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.acceptProvidedExtensionAsServer("STR"));	100
12	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.copyInstance()==defaultExtension1.copyInstance());	100
14	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.getProvidedExtensionAsClient().isEmpty());	100
2	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertTrue(c.getYModeProbs()[0][1]==Y_MODE_PROBS[1]);	0
4	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertFalse(decoder.isFullyRead());	0
1	VerbsTest	testImported	assertNotNull(actual);	assertTrue(actual.getId().endsWith("STR"));	80
11	VerbsTest	testImported	assertNotNull(actual);	assertFalse(actual.getId().isEmpty());	80
2	StatementTest	testToString	assertNotNull(actual);	assertEquals("STR",actual.getVerb().getId());	44
6	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getResult().isSuccess());	44
8	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getAttachments().size()>0);	43
11	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getStored()!=null&&!statement.getStored().isEmpty());	43
12	StatementTest	testToString	assertNotNull(actual);	assertEquals(ID,statement.getId());	43
0	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	100
1	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	100
2	ActivityTest	testGetObjectType	assertNotNull(actual);	assertFalse(actual.isEmpty());	100
9	ActivityTest	testGetObjectType	assertNotNull(actual);	assertSame(expected,actual);	100
12	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
3	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotNull(moneyToStrPER100);	100
1	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertNotNull(moneyToStrUAH);	100
1	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
3	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotNull(actual);	0
4	TestPressure	testToMillibar	assertEquals(expected,actual);	assertFalse(actual.isEmpty());	100
9	TestPressure	testToMillibar	assertEquals(expected,actual);	assertArrayEquals(expected.toCharArray(),actual.toCharArray());	100
10	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotEquals("STR",actual);	0
13	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	100
1	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
3	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
8	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	100
9	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
10	TestPressure	testToInHg	assertEquals(expected,actual);	assertArrayEquals(expected.toCharArray(),actual.toCharArray());	100
12	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(actual.startsWith(expected));	100
0	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertEquals(true,value>=0&&value<100);	0
1	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100);	0
6	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(0,value);	100
7	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertFalse(value<0||value>=100);	0
8	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotSame(0,value);	100
9	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100&&value!=-1);	0
4	PropertyBindingSupport_bind0_NumericalTest	bind_Double	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	100
1	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(simulatorProperties.getCloudIdentity().endsWith("STR"));	26
2	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotNull(simulatorProperties.getCloudIdentity());	26
3	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals("STR",simulatorProperties.getCloudIdentity());	26
4	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(simulatorProperties.getCloudIdentity().contains("STR"));	26
5	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotSame("STR",simulatorProperties.getCloudIdentity());	26
6	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertFalse(simulatorProperties.getCloudIdentity().isEmpty());	29
7	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals("STR",simulatorProperties.getCloudIdentity());	26
8	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertSame("STR",simulatorProperties.getCloudIdentity());	26
9	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(simulatorProperties.getCloudIdentity().equalsIgnoreCase("STR"));	26
6	ReflectionUtilsTest	testGetField_typeMismatch	assertNull(field);	assertTrue(field.getName().equals("STR"));	0
1	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertEquals(0,options.nonOptionArguments().size());	100
4	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertTrue(options.nonOptionArguments().isEmpty());	100
5	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertFalse(options.hasOptions());	100
9	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertEquals(0,options.nonOptionArguments().toArray().length);	100
10	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotSame(null,options);	100
0	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertEquals("STR",viz.toString());	100
1	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertTrue(!viz.toString().isEmpty());	100
2	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertNotNull(viz);	100
3	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertNotEquals(null,viz);	100
4	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertNotSame(null,viz);	100
5	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertTrue(vizinstanceofGraphviz);	100
6	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertFalse(viz.toString().contains("STR"));	100
9	SimpleTest	simple	assertNotNull(viz.render(SVG).toString());	assertFalse(viz.toString().startsWith("STR"));	100
1	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertTrue(resp.startsWith("STR"));	67
2	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(first);	67
3	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertEquals(1,embedder.size());	78
6	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertFalse(resp.isEmpty());	67
7	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotSame(null,first);	67
8	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertTrue(response.readableBytes()>0);	67
9	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertEquals("STR",resp.trim());	78
13	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertFalse(response.toString().contains("STR"));	67
14	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(resp);	67
0	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser);	100
1	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser);	100
4	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertTrue(sample1.startsWith("STR"));	100
6	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertEquals(8,sample1.split("STR").length);	100
7	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertTrue(sample1.contains("STR"));	100
8	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertFalse(sample1.isEmpty());	100
9	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotEquals(0,sample1.indexOf("STR"));	100
10	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertTrue(sample1.contains("STR"));	0
11	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotSame(sample1,parser);	100
13	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertTrue(sample1.matches("STR"+"STR"));	0
3	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals("STR",env.get("STR"));	74
4	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(env.containsKey("STR"));	0
5	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	74
6	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotNull(env.get("STR"));	0
7	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	74
8	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(env.containsValue("STR"));	0
9	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNull(env.get("STR"));	74
10	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals(3,env.size());	74
12	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(env.containsValue("STR"));	74
14	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.containsKey("STR"));	74
2	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass!=null);	68
3	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertEquals("STR",helloClass.getName());	68
4	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredClasses().length>0);	68
5	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getMethods().length>0);	68
6	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotEquals(logger,helloClass.getDeclaredFields().length);	68
8	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.isInterface());	68
12	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getConstructors().length>0);	68
13	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotNull(sourceCode.toString());	53
14	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertEquals(String.class,helloClass.getDeclaredMethods()[0].getReturnType());	68
0	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertTrue(responseHandler.toString().contains("STR"));	0
2	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertEquals("STR",responseHandler.toString());	0
4	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNotEquals("STR",responseHandler.toString());	0
1	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	100
2	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>=0);	100
3	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(0,duration);	100
5	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>0);	100
6	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertFalse(duration<0);	100
12	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>0&&duration<=durationLimit);	100
14	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotSame(duration,0);	100
15	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertFalse(duration>durationLimit);	100
16	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(duration,0);	100
17	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotNull(duration);	100
7	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse("STR".isEmpty());	100
12	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse("STR".isEmpty());	100
18	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse("STR".startsWith("STR"));	100
23	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertFalse("STR".equals("STR"));	100
29	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertNotEquals("STR","STR".toString());	100
1	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertTrue(clazz.getCustom("STR").equals("STR"));	94
2	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotNull(clazz.getCustom("STR"));	94
3	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotEquals("STR",clazz.getCustom("STR"));	94
4	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertFalse(clazz.getCustom("STR").isEmpty());	85
5	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertTrue(clazz.getCustom("STR").contains("STR"));	85
6	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotSame("STR",clazz.getCustom("STR"));	94
7	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertFalse(clazz.getCustom("STR").startsWith("STR"));	85
8	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertTrue(clazz.getCustom("STR").endsWith("STR"));	85
9	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotSame("STR",clazz.getCustom("STR"));	94
1	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	95
3	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertFalse(mapToTest.isEmpty());	95
5	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertSame(mapToTest,mapToTest);	95
6	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotSame(propertyIndexByIntegerKey,result);	95
15	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(mapToTest);	95
0	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(OType.INTEGER,result[0]);	95
1	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotNull(result);	95
3	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(result.length>0);	95
8	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(OType.LONG,result[0]);	95
16	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertFalse(result.length==0);	95
17	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.BOOLEAN,result[0]);	95
22	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(Arrays.asList(result).contains(OType.INTEGER));	95
26	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertSame(OType.INTEGER,result[0]);	95
27	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.LINK,result[0]);	95
1	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertTrue(compositeKey.getKeys().contains("STR"));	100
2	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotNull(compositeKey.getKeys());	100
3	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().isEmpty());	100
5	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotEquals(0,compositeKey.getKeys().size());	100
6	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertTrue(compositeKey.getKeys().size()>0);	100
24	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().contains(null));	100
6	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(db.getMetadata().getSchema().existsClass("STR"));	0
7	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(db.getMetadata().getSchema().existsClass("STR"));	0
8	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(db.getMetadata().getIndexManager().existsIndex("STR"));	0
2	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(result);	99
18	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotSame(null,result);	99
24	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertFalse(result==null);	99
25	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertSame(function,function);	99
0	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertEquals(2,qResult.stream().count());	33
3	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	33
4	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	33
6	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotEquals(0,qResult.stream().count());	33
20	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(DB_NAME);	33
26	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.stream().noneMatch(f->DB_STORAGE.isEmpty()));	33
1	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertTrue(oSchema.existsClass("STR"));	78
2	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertTrue(oClass.declaredProperties().size()>=2);	78
3	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertEquals(2,oClass.declaredProperties().size());	78
4	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertFalse(oClass.isAbstract());	78
5	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotEquals(OType.STRING,oClass.getProperty("STR").getType());	78
6	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNull(oClass.getProperty("STR"));	78
7	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotSame(oClass,oClass.getSuperClass());	78
8	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertTrue(oClass.getClassIndexes().isEmpty());	78
9	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertFalse(oClass.isEdgeType());	78
14	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotEquals(Collections.emptyList(),result);	95
1	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.remaining()>=FIELD_SIZE+serializationOffset);	95
2	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(walChanges.hasChanges());	95
3	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FIELD_SIZE,buffer.remaining()-serializationOffset);	95
5	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(walChanges);	95
6	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertFalse(buffer.isReadOnly());	95
9	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotEquals(null,walChanges);	95
11	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertSame(FIELD_SIZE,buffer.remaining()-serializationOffset);	95
0	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(false,YubicoClient.isValidOTPFormat(otp));	50
1	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertTrue(!YubicoClient.isValidOTPFormat(otp));	50
2	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(true,YubicoClient.isValidOTPFormat(otp));	50
4	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame(true,YubicoClient.isValidOTPFormat(otp));	50
5	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(YubicoClient.getClient(this.clientId,apiKey));	83
10	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(YubicoClient.getClient(this.clientId,apiKey));	83
1	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(false,YubicoClient.isValidOTPFormat(otp));	56
2	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(true,YubicoClient.isValidOTPFormat(otp));	56
4	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(YubicoClient.getClient(this.clientId,apiKey));	83
9	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(YubicoClient.getClient(clientId,apiKey));	83
10	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(null,YubicoClient.getClient(clientId,apiKey));	83
11	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertTrue(otp.length()>0);	83
12	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame("STR",otp);	83
15	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(otp.isEmpty());	83
16	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals("STR",otp);	83
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	54
4	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	54
10	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertSame(0,routePrioritizer.getPrioritizedRoutes().size());	54
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	54
2	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	54
3	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotEquals(5,routePrioritizer.getPrioritizedRoutes().size());	54
7	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertSame(ProvidedPriorityRoutePrioritizer.class,routePrioritizer.getClass());	53
8	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	53
4	SvgSizeAnalyzerTest	svgWithoutChanges	assertEquals(SVG,a.getSvg());	assertNotEquals("STR",a.getSvg());	28
5	SvgSizeAnalyzerTest	svgWithoutChanges	assertEquals(SVG,a.getSvg());	assertTrue(a.getSvg().startsWith("STR"));	28
8	SvgSizeAnalyzerTest	svgWithoutChanges	assertEquals(SVG,a.getSvg());	assertTrue(a.getSvg().contains("STR"));	28
9	SvgSizeAnalyzerTest	svgWithoutChanges	assertEquals(SVG,a.getSvg());	assertFalse(a.getSvg().equals("STR"));	0
11	SvgSizeAnalyzerTest	svgWithoutChanges	assertEquals(SVG,a.getSvg());	assertTrue(a.getSvg().matches("STR"));	28
1	GraphvizServerTest	cmdLineArgs	assertEquals(map("STR","STR"),opts.opts);	assertFalse(opts.opts.containsKey("STR"));	0
2	GraphvizServerTest	cmdLineArgs	assertEquals(map("STR","STR"),opts.opts);	assertTrue(opts.args.contains("STR"));	0
5	GraphvizServerTest	cmdLineArgs	assertEquals(map("STR","STR"),opts.opts);	assertNotEquals("STR",opts.opts.get("STR"));	0
8	GraphvizServerTest	cmdLineArgs	assertEquals(map("STR","STR"),opts.opts);	assertTrue(opts.opts.containsKey("STR"));	0
10	GraphvizServerTest	cmdLineArgs	assertEquals(map("STR","STR"),opts.opts);	assertNull(opts.opts.get("STR"));	17
13	GraphvizServerTest	cmdLineArgs	assertEquals(map("STR","STR"),opts.opts);	assertTrue(opts.opts.containsValue("STR"));	17
1	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertEquals(ColorSpace.YUV420J,dst.getColor());	33
2	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(dst.getWidth()==2);	33
4	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotSame(srcPix,dst.getPlaneData(0));	33
5	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(dst.getPlaneHeight(0)==2);	33
7	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertSame(ColorSpace.YUV444J,src.getColor());	33
9	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotEquals(0,transform);	33
10	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(dst.getPlaneWidth(0)>0);	33
13	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotEquals(0,transform.hashCode());	67
0	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(aXls);	100
2	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expected,actual);	100
3	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(expected,actual);	100
5	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(condition);	100
6	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertArrayEquals(expectedArray,actualArray);	100
7	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(expected,actual);	100
9	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expected,actual,delta);	100
10	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNull(object);	100
14	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	100
2	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	20
3	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotEquals("STR",markup);	100
5	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	20
6	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup);	100
25	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotEquals("STR",markup);	100
3	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	20
9	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertFalse(markup.markdown("STR").isEmpty());	23
10	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertTrue(markup.markdown("STR").startsWith("STR"));	23
11	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotEquals(EXPECTED,markup.markdown("STR"));	20
13	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	20
14	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotSame(EXPECTED,markup.markdown("STR"));	20
17	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	20
20	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertTrue(markup.markdown("STR").contains("STR"));	31
21	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotEquals(EXPECTED,markup.markdown("STR"));	20
22	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	20
2	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m.markdown("STR"));	20
3	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotEquals("STR",m.markdown("STR"));	20
4	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertFalse(m.markdown("STR").isEmpty());	23
6	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m.markdown("STR"));	20
7	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotEquals("STR",m.markdown("STR"));	20
8	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m.markdown("STR"));	20
9	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m.markdown("STR"));	20
13	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotSame(m,m.markdown("STR"));	20
15	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertFalse(m.markdown("STR").isEmpty());	23
0	OAuth2FeignRequestInterceptorTests	configureAccessTokenProvider	assertEquals(mockedToken,oAuth2FeignRequestInterceptor.acquireAccessToken());	assertTrue(headers.containsKey("STR"));	21
1	OAuth2FeignRequestInterceptorTests	configureAccessTokenProvider	assertEquals(mockedToken,oAuth2FeignRequestInterceptor.acquireAccessToken());	assertEquals("STR",headers.get("STR").iterator().next());	21
2	OAuth2FeignRequestInterceptorTests	configureAccessTokenProvider	assertEquals(mockedToken,oAuth2FeignRequestInterceptor.acquireAccessToken());	assertNotNull(headers.get("STR"));	0
4	OAuth2FeignRequestInterceptorTests	configureAccessTokenProvider	assertEquals(mockedToken,oAuth2FeignRequestInterceptor.acquireAccessToken());	assertFalse(headers.containsKey("STR"));	21
6	OAuth2FeignRequestInterceptorTests	configureAccessTokenProvider	assertEquals(mockedToken,oAuth2FeignRequestInterceptor.acquireAccessToken());	assertNull(headers.get("STR"));	0
8	OAuth2FeignRequestInterceptorTests	configureAccessTokenProvider	assertEquals(mockedToken,oAuth2FeignRequestInterceptor.acquireAccessToken());	assertNull(headers.get("STR"));	0
9	OAuth2FeignRequestInterceptorTests	configureAccessTokenProvider	assertEquals(mockedToken,oAuth2FeignRequestInterceptor.acquireAccessToken());	assertNotSame("STR",headers.get("STR").iterator().next());	21
0	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertEquals("STR",env.get("STR"));	0
1	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(env.containsKey("STR"));	0
2	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.containsKey("STR"));	81
3	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNull(env.get("STR"));	81
4	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull(env.get("STR"));	81
5	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(1,env.size());	81
6	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals(0,env.size());	81
10	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(env.containsKey("STR")&&env.get("STR").equals("STR"));	81
11	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals("STR",env.get("STR"));	81
12	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame("STR",env.get("STR"));	81
1	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(convertedEnv.containsKey("STR"));	81
2	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull(convertedEnv);	81
3	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals(null,convertedEnv);	81
4	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(convertedEnv.isEmpty());	81
5	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame(env,convertedEnv);	81
6	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertSame(env,convertedEnv);	81
7	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(0,convertedEnv.size());	81
9	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(convertedEnv.containsValue("STR"));	81
10	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(convertedEnv.containsKey("STR"));	81
1	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(filteredEnv.containsKey("STR"));	81
2	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals(expectedSize,filteredEnv.size());	81
3	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(filteredEnv.containsKey("STR"));	81
4	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(filteredEnv.containsKey("STR"));	81
5	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(filteredEnv.containsKey("STR"));	81
6	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(filteredEnv.isEmpty());	81
7	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotNull(result);	81
8	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotEquals(expectedSize,filteredEnv.size());	81
10	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotSame(expectedResult,actualResult);	81
11	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(filteredEnv.containsValue("STR"));	81
1	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertTrue(atts.containsKey("STR"));	33
3	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotNull(atts.get("STR"));	33
8	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNull(atts.get("STR"));	33
9	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertFalse(atts.containsKey("STR"));	33
4	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertTrue(processor.getObjectQueryPreparer()!=null&&processor.getObjectQueryPreparer().getClass().getSimpleName().equals("STR"));	0
0	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNull(fields.get("STR"));	21
3	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotNull(fields);	21
4	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotEquals("STR",fields.get("STR"));	21
6	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNull(fields.get("STR"));	21
7	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	36
10	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.containsKey("STR"));	21
13	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertTrue(fields.size()>0);	36
16	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.containsValue("STR"));	21
18	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotNull(fields);	21
23	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotSame(config,fields.get("STR"));	21
0	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	assertNotNull(bolt);	18
4	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotNull(iterator.next());	100
5	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotEquals(0L,iterator);	0
12	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotNull(iterator.next());	100
20	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotNull(iterator.next());	100
2	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.containsAll(Arrays.asList(1,2,3)));	100
3	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.stream().allMatch(Arrays.asList(1,2,3)::contains));	100
7	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.containsAll(Arrays.asList(1,2,3))&&expected.size()==3);	100
8	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertEquals(expected.size(),3);	100
9	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.contains(1)&&expected.contains(2)&&expected.contains(3));	100
12	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertNotEquals(0,expected.size());	100
13	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertEquals(3,expected.size());	100
14	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertFalse(expected.isEmpty());	100
15	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.size()>0);	100
1	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertTrue(result.equals("STR"));	0
3	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotNull(result);	0
4	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertTrue(!result.isEmpty());	33
6	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertEquals(result,result);	0
13	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertTrue(result.contains("STR")||result.contains("STR"));	33
1	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals("STR",String.join("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens)));	97
2	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.length()>0);	99
3	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	99
4	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	99
7	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotSame(0,tokens.size());	0
9	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(11,tokens.toList().size());	99
11	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	99
12	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.length()>5);	99
2	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	25
3	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	75
4	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotEquals(0,filtered.size());	75
5	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotSame(excludes,filtered);	25
9	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.contains(null));	25
13	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.stream().anyMatch(test->test.getName().equals("STR")));	25
14	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotSame(includes,filtered);	25
17	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	75
23	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()>0);	75
1	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertEquals(true,matcher.lookingAt());	100
2	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	100
3	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.matches());	100
4	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotEquals("STR",matcher.group());	100
5	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNull(matcher.group());	100
6	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.hitEnd());	100
7	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertSame(pattern,matcher.pattern());	100
8	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertTrue(matcher.matches());	100
9	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotSame("STR",matcher.group());	100
12	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.stream().allMatch(forma->forma.getToken().startsWith("STR")));	0
0	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertEquals("STR",moneyToStrEURRUS.convert(V_300D).replaceAll("STR","STR").trim());	27
1	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrEURRUS.convert(V_300D));	27
2	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotNull(moneyToStrEURRUS.convert(V_300D));	27
4	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertFalse(moneyToStrEURRUS.convert(V_300D).isEmpty());	36
5	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotSame("STR",moneyToStrEURRUS.convert(V_300D));	27
6	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertTrue(moneyToStrEURRUS.convert(V_300D).contains("STR"));	27
8	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrEURRUS.convert(V_300D));	27
9	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertTrue(moneyToStrEURRUS.convert(V_300D).startsWith("STR"));	27
13	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertTrue(!moneyToStrEURRUS.convert(V_300D).isEmpty());	36
1	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.toString().startsWith("STR"));	100
2	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotNull(defaultExtension);	100
5	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.acceptProvidedExtensionAsServer("STR"));	100
6	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals(0,defaultExtension.getProvidedExtensionAsClient().length());	100
12	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals(true,true);	100
13	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertFalse(false);	100
1	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertTrue(srcDir.exists());	69
3	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertNotNull(configDirectory);	69
6	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotNull(sql.select().from("STR").where("STR"));	90
7	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotEquals(0,sql.select().from("STR").where("STR").toString().length());	90
8	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").where("STR").toString().startsWith("STR"));	90
10	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").where("STR").toString().contains("STR")||sql.select().from("STR").where("STR").toString().contains("STR"));	90
11	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertFalse(sql.select().from("STR").where("STR").toString().isEmpty());	90
12	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.select().from("STR").where("STR").toString().trim());	90
14	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").where("STR").toString().toLowerCase().contains("STR"));	89
15	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertTrue(SqlBuilder.class.isAssignableFrom(sql.getClass()));	89
18	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").where("STR").toString().contains("STR"));	90
2	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotNull(sql.select().from("STR").orderBy("STR"));	90
26	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotNull(sql.select().from("STR").orderBy("STR"));	90
1	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertEquals(expecteds.length,MkvBlock.calcEbmlLacingDiffs(_in).length);	100
1	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotEquals("STR",moneyToStrUAHRUS.convert(V_300D));	27
3	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotNull(moneyToStrUAHRUS.convert(V_300D));	27
5	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotEquals("STR",moneyToStrCustom.convert(V_300D));	27
12	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertFalse(moneyToStrUAHRUS.convert(V_300D).isEmpty());	36
13	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotEquals(0,moneyToStrUAHRUS.convert(V_300D).length());	36
15	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D).replaceAll("STR","STR"));	27
17	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotEquals(null,moneyToStrUAHRUS.convert(V_300D));	27
20	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertTrue(moneyToStrUAHRUS.convert(V_300D).contains("STR"));	27
7	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotNull(moneyToStrUAHRUS.convert(-V_300D));	27
8	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertFalse(moneyToStrUAHRUS.convert(-V_300D).isEmpty());	36
9	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	27
10	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotSame(null,moneyToStrUAHRUS.convert(-V_300D));	27
15	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotEquals(null,moneyToStrUAHRUS.convert(-V_300D));	27
20	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	27
21	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertTrue(!moneyToStrUAHRUS.convert(-V_300D).isEmpty());	36
22	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotSame("STR",moneyToStrUAHRUS.convert(-V_300D));	27
27	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotEquals(0,moneyToStrUAHRUS.convert(-V_300D).length());	36
1	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertTrue(collection.length>0);	100
2	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotNull(collection);	100
3	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotEquals(0,collection.length);	100
5	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertFalse(collection.length==0);	100
8	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotSame("STR","STR");	69
9	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotEquals("STR","STR");	69
10	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertSame("STR","STR");	100
0	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertFalse(vertices.isEmpty());	43
2	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotNull(vertices);	31
3	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.contains(doc));	43
4	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotEquals(0,vertices.size());	43
5	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.stream().allMatch(v->v.field("STR").equals("STR")));	43
6	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertEquals("STR",vertices.get(0).field("STR"));	43
7	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertSame(doc,vertices.get(0));	43
11	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotSame(vertices.size(),0);	43
12	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(!vertices.isEmpty());	43
4	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	94
10	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertFalse(compositeIndex.equals(result));	94
11	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotSame(compositeIndex,result);	94
17	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	94
1	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(expectedResult.containsAll((List<OCompositeKey>)result));	95
3	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotNull(result);	94
4	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	94
6	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertArrayEquals(expectedResult.toArray(),((List<OCompositeKey>)result).toArray());	95
8	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(expectedResult.stream().allMatch(((List<OCompositeKey>)result)::contains));	95
9	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotSame(expectedResult,result);	94
10	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertSame(expectedResult.getClass(),result.getClass());	94
13	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertFalse(expectedResult.isEmpty());	94
14	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotSame(expectedResult.size(),0);	94
1	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertEquals(0,result.stream().count());	96
5	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotNull(stream);	100
10	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertTrue(stream.length>0);	100
11	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotEquals(0,stream.length);	100
12	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertFalse(stream.length==0);	100
14	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotSame(null,stream);	100
19	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotEquals(null,stream);	100
21	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertSame(stream.getClass(),byte[].class);	100
1	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.contains(docOne));	78
3	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotNull(rootDoc);	78
4	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.size()>0);	78
6	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(database.exists());	78
8	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertFalse(ridBag.isEmpty());	78
9	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotSame(docOne,docTwo);	78
11	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertFalse(database.isClosed());	78
16	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotNull(docOne);	78
19	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.iterator().hasNext());	78
2	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(idProperty);	70
3	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(companyClass.properties().contains(idProperty));	69
4	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals("STR",idProperty.getName());	69
5	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.isReadonly());	70
9	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.getType().equals(OType.INTEGER));	69
11	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(companyClass.declaredProperties().contains(idProperty));	70
1	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(idProperty);	69
2	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(companyClass.existsProperty(PROP_ID));	69
3	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals("STR",idProperty.getDefaultValue());	69
5	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(db.isClosed());	70
6	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertSame(companyClass.getProperty(PROP_ID),idProperty);	69
7	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotSame(companyClass,db.getMetadata().getSchema().getClass("STR"));	69
8	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(companyClass.isAbstract());	69
9	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals(10,companyClass.getClusterSelection());	69
2	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(clazzV.getClusterIds().length>0);	83
3	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotNull(clazzV);	83
4	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(db.getMetadata().getSchema().existsClass("STR"));	83
5	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertFalse(db.getMetadata().getSchema().existsClass("STR"));	84
6	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(0,db.getMetadata().getSchema().getClass("STR").getClusterIds().length);	84
7	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertEquals("STR",clazzV.getName());	84
8	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotSame(s,t);	83
11	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(0,db.getMetadata().getSchema().getClasses().size());	83
12	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(db.getMetadata().getSchema().getClass("STR").getClusterIds().length>0);	83
1	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotNull(doc);	95
2	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertEquals(0,doc.getPropertyNames().size());	95
8	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertTrue(doc.getInternalStatus()==ORecordElement.STATUS.LOADED);	95
9	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotSame(null,doc);	95
10	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertSame(ODocument.class,doc.getClass());	95
1	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertEquals(1,manager.getTotal());	92
2	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.has(ret.getId()));	92
3	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getConnections().contains(ret));	92
5	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertFalse(manager.getConnections().isEmpty());	92
6	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getTotal()>=1);	92
7	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotEquals(0,manager.getTotal());	92
8	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(ret.getId()>0);	96
12	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getTotal()>0);	92
14	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertSame(protocol,ret.getProtocol());	92
0	ODocumentSchemalessBinarySerializationTest	testListOfMapsWithNull	assertEquals(extr.fields(),document.fields());	assertEquals(2,extr.<List<?>>field("STR").size());	17
2	ODocumentSchemalessBinarySerializationTest	testListOfMapsWithNull	assertEquals(extr.fields(),document.fields());	assertNotNull(extr.field("STR"));	17
5	ODocumentSchemalessBinarySerializationTest	testListOfMapsWithNull	assertEquals(extr.fields(),document.fields());	assertTrue(extr.<List<?>>field("STR").contains(mappa));	0
6	ODocumentSchemalessBinarySerializationTest	testListOfMapsWithNull	assertEquals(extr.fields(),document.fields());	assertNotSame(lista,extr.<List<?>>field("STR"));	0
8	ODocumentSchemalessBinarySerializationTest	testListOfMapsWithNull	assertEquals(extr.fields(),document.fields());	assertTrue(extr.<List<?>>field("STR").isEmpty());	0
10	ODocumentSchemalessBinarySerializationTest	testListOfMapsWithNull	assertEquals(extr.fields(),document.fields());	assertNull(extr.getProperty("STR"));	10
1	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(compositeKey,anotherCompositeKey);	99
5	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.compareTo(anotherCompositeKey)==0);	99
7	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(2,compositeKey.getKeys().size());	100
8	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.equals(null));	100
9	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	100
11	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.toString().isEmpty());	100
12	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey.getKeys());	100
13	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.getKeys().contains("STR"));	100
14	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotEquals("STR",compositeKey.toString());	99
6	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertTrue(params.containsKey("STR"));	0
13	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertEquals(12,params.get("STR"));	0
1	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotNull(result);	95
2	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotEquals(null,result);	95
8	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotSame(mapToTest,propertyIndexByKey);	95
10	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotEquals(propertyIndexByKey,propertyIndexByIntegerKey);	93
20	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertSame(propertyIndexByKey,propertyIndexByKey);	95
1	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNotEquals(Logger.Level.DEBUG,logger.level);	83
2	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertTrue(logger.level.ordinal()>=Logger.Level.WARN.ordinal());	83
3	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNotNull(logger);	83
6	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNotSame(Logger.Level.ERROR,logger.level);	83
7	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertFalse(logger.level==Logger.Level.DEBUG);	83
11	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNull(config.getString(Keys.CUCUMBERPRO_PROFILE));	83
12	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertEquals(5000,(int)config.getInteger(Keys.CUCUMBERPRO_CONNECTION_TIMEOUT));	84
14	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertTrue(config.isNull(Keys.CUCUMBERPRO_TOKEN));	83
1	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertTrue(logger.level==Logger.Level.INFO);	83
2	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotNull(logger);	83
3	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotEquals(Logger.Level.DEBUG,logger.level);	83
4	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertFalse(logger.level==Logger.Level.DEBUG);	83
5	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertSame(Logger.Level.INFO,logger.level);	83
6	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotSame(Logger.Level.ERROR,logger.level);	83
7	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotEquals(Logger.Level.WARN,logger.level);	83
11	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotSame(Logger.Level.DEBUG,logger.level);	83
12	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertTrue(logger.level.ordinal()<=Logger.Level.INFO.ordinal());	83
16	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(macAddress.toString().contains("STR"));	25
6	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.toString().matches("STR"));	27
12	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.toString().startsWith("STR"));	25
14	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.toString().contains("STR"));	27
15	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertTrue(sample1.startsWith("STR"));	27
1	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.startsWith("STR"));	25
2	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	10
3	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
4	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.contains("STR"));	10
6	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains("STR"));	0
7	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertEquals("STR",normalizedUrl);	0
9	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	20
1	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.startsWith(expectedResult));	83
2	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	17
3	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	17
4	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(inputURL,normalizedUrl);	17
5	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	33
6	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
7	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(expectedResult,normalizedUrl.toUpperCase());	17
9	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains("STR"));	0
10	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.equals(inputURL));	33
1	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotNull(frame);	17
3	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertTrue(frame.getCloseCode()==CloseFrame.NORMAL);	33
4	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertFalse(frame.getCloseCode()==CloseFrame.GOING_AWAY);	17
8	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotNull(frame);	17
13	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotEquals(CloseFrame.PROTOCOL_ERROR,frame.getCloseCode());	17
20	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertTrue(frame.getCloseCode()!=CloseFrame.GOING_AWAY);	17
24	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertSame(CloseFrame.class,frame.getClass());	17
1	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.getProvidedProtocol());	50
4	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("STR",protocol0.getProvidedProtocol());	50
5	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertFalse(protocol0.getProvidedProtocol().contains("STR"));	50
7	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals(null,protocol0.getProvidedProtocol());	50
8	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertFalse(protocol0.getProvidedProtocol().startsWith("STR"));	50
9	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotSame(protocol0,protocol0.copyInstance());	33
10	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(protocol0.toString().contains(protocol0.getProvidedProtocol()));	33
12	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("STR",protocol0.toString());	33
3	IterableToStreamTest	iteratorToStream	assertEquals(Arrays.asList(1,2,3,4,5,6),IterableToStream.stream(ImmutableList.of(1,2,3,4,5,6).iterator()).collect(java.util.stream.Collectors.toList()));	assertNotNull("STR");	100
0	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertEquals(null,contentEncoding);	0
2	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertTrue(contentEncoding==null||!contentEncoding.getValue().equals("STR"));	0
7	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertEquals("STR",response.getEntity().getContentType().getValue());	0
8	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNull(response.getEntity().getContentEncoding());	0
9	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertTrue(response.getStatusLine().getStatusCode()>=200&&response.getStatusLine().getStatusCode()<300);	0
11	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertEquals("STR",String.valueOf(response.getStatusLine().getStatusCode()));	0
3	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertTrue(result.contains("STR"));	70
4	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertFalse(result.isEmpty());	70
5	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotNull(result);	70
6	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotEquals(0,result.size());	70
7	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotSame(jco,result);	70
8	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertSame(jco.getSource(),"STR");	70
9	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertFalse(jco.isShowWarnings());	70
11	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertEquals("STR",jco.getSource());	70
12	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotEquals("STR",jco.getTarget());	70
0	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertTrue(true);	31
4	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertFalse(TEST_PRODUCER_GROUP.isEmpty());	0
5	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertNotEquals(TEST_NAME_SERVER,"STR");	0
11	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertNotSame(TEST_PRODUCER_GROUP,TEST_CONSUMER_GROUP);	0
13	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertFalse(TEST_NAME_SERVER.isEmpty());	0
14	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertNotEquals(TEST_PRODUCER_GROUP,"STR");	0
15	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertTrue(TEST_PRODUCER_GROUP.contains("STR"));	0
18	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertTrue(TEST_PRODUCER_GROUP.startsWith("STR"));	0
0	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertEquals(tempTextFile,configFile);	70
1	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	70
3	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertFalse(configFile.isDirectory());	70
4	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotEquals(null,configFile);	70
5	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertEquals(tempTextFile,configFile);	70
6	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotSame(tempTextFile,configFile);	69
7	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(configFile.isFile());	70
9	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotSame(tempTextFile,configFile.getParentFile());	70
10	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(configFile.canRead());	70
0	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	100
6	OPLogTest	testDescription	assertEquals("STR",value);	assertTrue(value!=null);	100
0	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNotNull(obj);	17
1	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertEquals("STR",obj.getName());	17
2	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertTrue(obj.getEmail()==null||obj.getEmail().isEmpty());	17
3	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertFalse(obj.getAge()<0);	17
4	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertTrue(obj.toString().contains("STR")&&obj.toString().contains("STR"));	17
5	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertEquals("STR",obj.toString().replaceAll("STR","STR").trim());	17
7	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertTrue(obj.getAge()>0);	67
9	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertTrue(!"STR".equals(obj.getName()));	17
11	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertFalse("STR".equals(obj.getEmail()));	17
0	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotNull(client2);	20
1	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	20
1	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(btUrl.getPort()==1111);	19
2	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotNull(btUrl.getProperties());	29
3	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertEquals("STR",btUrl.getProperty("STR"));	29
4	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotEquals("STR",btUrl.getIp());	26
5	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(btUrl.getPort()<1000);	19
6	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotSame(null,btUrl);	27
7	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(url.contains("STR"));	27
8	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(url.endsWith("STR"));	27
9	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(btUrl.getProperty("STR").matches("STR"));	27
0	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertEquals(rpcRequestProcessor2,processorManager.getProcessor(cmd2));	40
1	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotSame(rpcRequestProcessor1,processorManager.getProcessor(cmd1));	27
3	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(processorManager.getProcessor(cmd1));	40
4	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(processorManager.getProcessor(cmd1));	40
6	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotEquals(rpcRequestProcessor1,processorManager.getProcessor(cmd2));	27
1	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotNull(response);	61
10	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertFalse(response.isOk());	62
4	YubicoClientTest	testBadOTP	assertNotNull(response);	assertEquals(ResponseStatus.BAD_OTP,response.getStatus());	69
5	YubicoClientTest	testBadOTP	assertNotNull(response);	assertFalse(response.isOk());	70
7	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNull(response.getNonce());	69
12	ScoreTest	testSerialize	assertNotNull(actual);	assertTrue(actual.toString().contains("STR"));	0
1	VerbTest	testSetDisplay	assertNotNull(actual);	assertTrue(actual.containsKey("STR"));	0
2	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertFalse(frame.isFin());	50
5	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotNull(frame);	50
10	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotEquals(true,frame.isFin());	50
13	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotSame(null,frame);	50
14	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertEquals(Opcode.BINARY,frame.getOpcode());	67
1	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertEquals(3,names.size());	84
3	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.isEmpty());	84
4	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.contains("STR"));	84
5	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotNull(names);	84
6	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotEquals(0,names.size());	84
14	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertEquals("STR",elem.getProperty("STR"));	84
3	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertTrue(ddl.startsWith("STR"));	95
4	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotNull(ddl);	95
5	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotEquals("STR",ddl);	95
6	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertFalse(ddl.isEmpty());	95
8	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotSame("STR",ddl);	95
14	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotSame("STR",ddl);	95
1	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertFalse(Float.isNaN(v));	94
3	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertTrue(Float.isFinite(v));	94
4	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotNull(v);	94
5	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotSame(OBJECT,v);	94
9	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertEquals(OBJECT,Float.valueOf(v));	95
10	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotSame(stream,null);	94
1	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	95
2	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	95
3	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	95
4	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertSame(ODocument.class,doc.getClass());	95
5	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotSame(String.class,doc.getClass());	95
6	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotEquals("STR",doc.toString());	95
9	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotEquals(42,doc.getVersion());	95
14	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertEquals("STR",doc.getErrorMessage());	95
4	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertNotNull(r);	78
6	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertFalse(r.isEmpty());	79
7	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertTrue(r.iterator().hasNext());	79
3	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertTrue(index.getSize()>0);	36
4	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotNull(index);	35
5	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotEquals(0,index.getSize());	36
8	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertTrue(index.getSize()<=10);	36
11	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertFalse(index.getSize()==0);	36
12	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotSame(0,index.getSize());	35
1	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals("STR",env.get("STR"));	0
2	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(env.containsKey("STR"));	0
3	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotNull(env.get("STR"));	0
4	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals(4,env.size());	74
5	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	74
6	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	74
7	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(env.containsValue("STR"));	0
9	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotNull(env);	74
10	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(env.containsKey("STR"));	0
11	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(env.containsValue("STR"));	0
1	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotNull(env);	74
1	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertTrue(factory.getAppenderName().equals("STR"));	0
2	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertNotNull(factory.getLayoutFactory());	0
3	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertTrue(factory.getFilterFactories().isEmpty());	100
4	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertSame(LoggerContext.class,factory.getBuildLoggerContext());	0
5	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertFalse(factory.isAsyncLoggingEnabled());	0
6	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertEquals("STR",factory.getJsonTypeName());	0
7	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertFalse(factory.isCustomPropertyEnabled());	0
8	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertNotEquals("STR",factory.getEmail());	0
0	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(map.containsKey(key3));	0
1	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(0,map.size());	0
2	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNull(map.get(key3));	0
3	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertFalse(map.containsKey("STR"));	31
4	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(map.isEmpty());	25
5	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(0,map.entrySet().size());	0
6	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotNull(map.keySet());	0
7	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotEquals(5,map.size());	0
8	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertSame(emptyEquals,AHashMap.empty(AEquality.EQUALS));	0
0	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(len1.apply("STR"));	100
3	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertFalse(len1.apply("STR"));	100
5	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertArrayEquals(expectedArray,result.toArray());	100
8	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotEquals(expectedList,result);	100
9	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(result.contains("STR"));	100
1	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotSame(a,b);	100
2	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.equals(b));	60
3	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertArrayEquals(a.getCells(),b.getCells());	100
5	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotNull(a);	100
6	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.hashCode()==b.hashCode());	0
8	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertFalse(a==b);	100
11	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertSame(a.getClass(),b.getClass());	100
13	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.toString().equals(b.toString()));	0
1	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertFalse(matcher.matches());	33
2	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertEquals(7,matcher.regionEnd());	28
6	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertEquals(7,matcher.regionEnd());	28
7	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(pattern.pattern().contains("STR"));	0
9	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	27
1	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	19
4	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertEquals("STR",jāmāk.getToken());	19
3	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	100
4	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotNull(w);	19
5	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	27
7	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotEquals("STR",w.getToken());	19
10	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertEquals(2,w.wordforms.size());	27
11	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.getToken().startsWith("STR"));	27
12	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotSame("STR",w.getToken());	19
0	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	27
5	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	27
1	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(testTarget001);	100
0	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertEquals("STR",factory.getTargetDescription());	0
1	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotNull(factory.getTargetDescription());	0
2	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertTrue(!factory.getTargetDescription().equals("STR"));	0
4	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotSame("STR",factory.getTargetDescription());	0
5	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse(factory.getTargetDescription().isEmpty());	100
7	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse("STR".equals(factory.getTargetDescription()));	0
9	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertTrue(factory.getTargetDescription().startsWith("STR"));	0
10	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertTrue(!"STR".equals(factory.getTargetDescription()));	0
11	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse(factory.getTargetDescription().contains("STR"));	0
13	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertEquals("STR",factory.getTargetDescription());	0
2	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertEquals(null,method);	0
3	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotEquals(null,method);	75
4	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertFalse(method==null);	75
6	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotSame(null,method);	75
7	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertEquals(7,words.size());	99
8	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertTrue(words.contains("STR"));	0
9	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotNull(words);	99
10	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotEquals(0,words.size());	99
11	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertFalse(words.isEmpty());	99
13	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertTrue(words.size()>5);	99
14	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotSame("STR",words.get(0));	99
3	ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertTrue(builder.useCachedDownload(true)!=null);	0
8	ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertNotNull(extractor);	0
1	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertTrue(responseHandler.getBody().contains("STR"));	0
6	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertTrue(httpget.getFirstHeader("STR").getValue().contains("STR")&&httpget.getFirstHeader("STR").getValue().contains("STR")&&httpget.getFirstHeader("STR").getValue().contains("STR")&&httpget.getFirstHeader("STR").getValue().contains("STR"));	0
7	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertTrue(responseHandler.getBody().startsWith("STR")&&responseHandler.getBody().contains("STR")&&responseHandler.getBody().contains("STR")&&responseHandler.getBody().endsWith("STR"));	0
8	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertNotEquals(0,responseHandler.getBody().length());	0
9	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertTrue(responseHandler.getBody().matches("STR"));	0
0	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNotNull(properties);	20
2	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertTrue(properties.containsKey("STR"));	0
3	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.isEmpty());	30
5	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertTrue(properties.getProperty("STR").startsWith("STR"));	0
10	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.containsKey("STR"));	20
11	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNull(properties.getProperty("STR"));	20
0	OAuth2FeignRequestInterceptorTests	tryToAcquireToken	assertTrue(oAuth2AccessToken.getValue()+"STR",oAuth2AccessToken.getValue()==null);	assertEquals(OAuth2AccessDeniedException.class,assertThrows(OAuth2AccessDeniedException.class,()->oAuth2FeignRequestInterceptor.getToken()));	0
11	OAuth2FeignRequestInterceptorTests	tryToAcquireToken	assertTrue(oAuth2AccessToken.getValue()+"STR",oAuth2AccessToken.getValue()==null);	assertNotSame(expectedObject,actualObject);	0
0	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertEquals(expectedOutput,markdown(inputText));	0
1	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertTrue(markdown(inputText).contains(expectedOutput));	0
4	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertFalse(markdown(inputText).isEmpty());	0
1	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertTrue(node.getPath().endsWith("STR"));	0
3	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertTrue(!node.getPath().equals("STR"));	0
4	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotSame("STR",node.getPath());	0
11	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertFalse(node.getPath().contains("STR"));	0
12	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertFalse("STR".equals(node.getPath()));	0
12	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotEquals("STR",execs.getAppName());	0
0	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertNotNull(convertToBytes(123));	40
2	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertTrue(convertToBytes(123).length>0);	40
3	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertEquals(2,convertToBytes(123).length);	53
5	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertNotEquals(0,convertToBytes(123).length);	40
