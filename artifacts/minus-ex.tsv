OracleID	ClassName	TestName	TrueOracle	GenOracle	Correct
0	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(expected.equals(actual));	0
2	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertNotNull(actual);	1
4	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertNotNull(activityDefinition.getType());	0
5	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(activityDefinition.getType().equals(expected));	0
6	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertFalse(activityDefinition.getType().isEmpty());	0
12	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertSame(expected,actual);	0
15	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	0
17	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	0
6	VerbsTest	testVoided	assertNotNull(actual);	assertNotNull(actual);	1
7	VerbsTest	testVoided	assertNotNull(actual);	assertNotSame("STR",actual.getId());	0
8	VerbsTest	testVoided	assertNotNull(actual);	assertFalse(actual.getId().isEmpty());	0
9	VerbsTest	testVoided	assertNotNull(actual);	assertFalse("STR".equals(actual.getId()));	0
13	VerbsTest	testVoided	assertNotNull(actual);	assertNotSame("STR",actual.getId());	0
17	VerbsTest	testVoided	assertNotNull(actual);	assertFalse("STR".equals(actual.getId()));	0
0	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
1	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertNotNull(actual);	1
3	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual!=null);	0
4	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
5	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
7	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
8	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
9	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
21	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertSame(expected,actual);	0
22	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
0	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotNull(db.getActiveIntent());	1
2	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotEquals(null,db.getActiveIntent());	0
3	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotSame(IllegalArgumentException.class,db.getActiveIntent().getClass());	0
4	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotNull(db.getActiveIntent());	1
5	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotNull(db.getActiveIntent());	1
6	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertEquals(OIntentMassiveInsert.class,db.getActiveIntent().getClass());	0
10	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotNull(db.getActiveIntent());	1
13	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotSame(ODatabaseDocumentTx.class,db.getActiveIntent().getClass());	0
16	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotSame(ODatabaseDocumentTx.class,db.getActiveIntent().getClass());	0
17	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertFalse(db.getActiveIntent()==null);	0
0	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(storedVar,var);	1
1	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(storedVar>0);	0
2	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(storedVar,var);	1
4	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotNull(buffer1);	0
5	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotEquals(buffer1,buffer2);	0
6	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(42,storedVar);	0
7	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.position()>0);	0
8	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(var,storedVar&0xFFFF);	0
9	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotEquals(buffer1.position(),buffer2.position());	0
10	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.remaining()>=0);	0
0	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertEquals(2,qResult.size());	1
1	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(qResult.size()>0);	0
2	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotNull(qResult);	0
3	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertFalse(qResult.isEmpty());	0
4	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotEquals(0,qResult.size());	0
7	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertFalse(qResult.contains(null));	0
9	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotSame(0,qResult.size());	0
11	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotEquals("STR",qResult.get(0).getProperty("STR"));	0
0	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertEquals(keyIndexDefinition.getParamCount(),1);	1
1	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()==1);	0
2	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(0,keyIndexDefinition.getParamCount());	0
3	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotNull(keyIndexDefinition.getParamCount());	0
4	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertEquals(keyIndexDefinition.getParamCount(),1);	1
5	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(keyIndexDefinition.getParamCount()!=1);	0
6	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotSame(0,keyIndexDefinition.getParamCount());	0
7	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()>0);	0
9	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertSame(1,keyIndexDefinition.getParamCount());	0
10	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()>=1);	0
0	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager);	0
4	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(2,manager.getNewRecords().size());	1
5	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotEquals(0,manager.getNewRecords().size());	0
6	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc));	0
7	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc2));	0
9	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().isEmpty());	0
10	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(doc.getIdentity().isNew());	0
11	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc2));	0
13	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(2,manager.getNewRecords().size());	1
17	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(2,manager.getNewRecords().size());	1
3	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNotNull(proc);	0
19	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNotNull(proc);	0
0	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
2	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	0
3	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertFalse(db.isClosed());	0
4	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	0
7	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotEquals(0,result.stream().count());	0
8	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
9	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	0
0	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
2	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertEquals(false,doc.isDirty());	0
3	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotEquals(true,doc.isDirty());	0
8	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotSame(true,doc.isDirty());	0
12	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
14	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertSame(false,doc.isDirty());	0
18	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
19	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
21	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
0	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
1	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	0
2	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
3	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
4	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	0
5	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
6	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertFalse(DB_NAME.isEmpty());	0
8	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotEquals(0,qResult.stream().count());	0
9	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	0
0	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals((long)11,(long)test.get(24));	0
1	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.get(24));	0
14	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals(null,test.get(24));	0
25	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.get(24));	0
0	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals((Integer)11,test.get(24));	0
1	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.get(24));	0
2	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNull(test.get(99));	0
3	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.get(24)!=null);	0
4	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNull(test.get(99));	0
8	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals((Integer)5,test.get(24));	0
11	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertSame((Integer)11,test.get(24));	0
12	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotSame((Integer)10,test.get(24));	0
13	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.size()>0);	0
15	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals(1,test.size());	0
0	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertEquals(kindAndName,secondKindAndName);	0
1	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertTrue(kindAndName.equals(secondKindAndName));	0
2	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals(kindAndName,thirdKindAndName);	0
3	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(kindAndName.equals(thirdKindAndName));	0
4	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(fourthKindAndName.equals(thirdKindAndName));	0
5	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(fourthKindAndName.equals(fifthKindAndName));	0
6	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals(kindAndName,fourthKindAndName);	0
7	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotSame(kindAndName,thirdKindAndName);	0
8	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotSame(kindAndName,fourthKindAndName);	0
10	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotNull(fifthKindAndName);	0
0	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertEquals(3,filtered.size());	0
1	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.containsAll(filtered));	0
2	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertEquals(filtered,filtered);	0
3	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	0
4	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	0
5	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(0,filtered.size());	0
6	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(getAllTestData().containsAll(filtered));	0
7	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(0,getAllTestData().size());	0
8	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.isEmpty()||filtered.size()>0);	0
9	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertSame(pConfig,pConfig);	0
2	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(!io.fabric8.maven.core.util.ProfileUtil.fromYaml(is).isEmpty());	0
3	ProfileUtilTest	multiple	assertNotNull(is);	assertFalse(io.fabric8.maven.core.util.ProfileUtil.fromYaml(is).isEmpty());	0
27	ProfileUtilTest	multiple	assertNotNull(is);	assertNotNull(is);	1
29	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(!io.fabric8.maven.core.util.ProfileUtil.fromYaml(is).isEmpty());	0
0	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertTrue(handler.hasInitContainer(builder,"STR"));	1
1	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	0
2	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertTrue(handler.hasInitContainer(builder,"STR"));	1
4	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNull(handler.getInitContainer(builder,"STR"));	0
10	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertTrue(handler.hasInitContainer(builder,"STR"));	1
11	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	0
0	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertEquals("STR",url);	1
2	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotNull(url);	0
3	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotEquals("STR",url);	0
4	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertFalse(url.isEmpty());	0
5	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame(null,url);	0
7	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertEquals("STR",url);	1
8	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotEquals("STR",url);	0
1	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertEquals(true,config.isNull("STR"));	0
2	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
5	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
13	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
14	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertEquals(true,config.isNull("STR"));	0
18	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
20	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
25	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
3	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnv.exists());	1
11	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotNull(serverEnv);	0
12	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotEquals("STR",Files.readAllLines(serverEnv.toPath()).get(0));	0
17	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(Files.exists(serverEnv.toPath()));	0
18	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotEquals(0,serverEnv.length());	0
22	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnv.delete());	0
24	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnv.exists());	1
2	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotNull(fileString);	0
3	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertFalse(fileString.isEmpty());	0
4	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotEquals("STR",fileString);	0
5	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertEquals(4,fileString.length());	0
6	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertTrue(fileString.length()>0);	0
7	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotSame("STR",fileString);	0
0	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.exists());	1
2	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.exists());	1
4	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(util);	0
6	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(targetFile);	0
7	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.isFile());	0
9	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.canRead());	0
10	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertFalse(targetFile.isDirectory());	0
11	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotEquals(srcDir,targetDir);	0
12	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.length()>0);	0
14	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.exists());	1
0	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertEquals(FilterReply.DENY,filter.decide(evt));	1
1	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals(FilterReply.NEUTRAL,filter.decide(evt));	0
2	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.DENY);	0
3	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.NEUTRAL);	0
4	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotNull(filter.decide(evt));	0
5	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotSame(FilterReply.NEUTRAL,filter.decide(evt));	0
6	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.NEUTRAL);	0
7	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertSame(FilterReply.DENY,filter.decide(evt));	0
11	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.ACCEPT);	0
12	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals(FilterReply.ACCEPT,filter.decide(evt));	0
0	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(normalizedUrl.startsWith(expectedResult));	0
2	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
3	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
4	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
5	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	0
8	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
9	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
11	BasicURLNormalizerTest	testQuerySort	assertEquals("STR",expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
0	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(normalizedUrl.startsWith(expectedResult));	0
2	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
3	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
12	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	0
15	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
17	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
18	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	0
26	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertFalse(expectedResult.isEmpty());	0
0	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	0
2	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
3	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
5	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.contains(normalizedUrl));	0
15	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
17	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertNotEquals(urlWithEscapedCharacters,normalizedUrl);	0
18	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
19	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals("STR",expectedResult,normalizedUrl);	assertSame(urlWithEscapedCharacters,testUrl);	0
0	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2,result.size());	0
1	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotNull(result);	0
5	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	0
7	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.size()>0);	0
9	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(result,result);	0
10	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	0
20	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(!result.isEmpty());	0
22	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotEquals(0,result.size());	0
28	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotNull(result);	0
0	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertEquals(0,loadComponentRegister(agentsFile,false).agentCount());	0
1	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(loadComponentRegister(agentsFile,false).agentCount()>=0);	0
2	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotNull(loadComponentRegister(agentsFile,false));	0
7	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertFalse(loadComponentRegister(agentsFile,false).agentCount()!=0);	0
25	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertEquals(0,loadComponentRegister(agentsFile,false).agentCount());	0
0	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertEquals(2,registry.agentCount());	1
1	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()>0);	0
2	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertFalse(registry.agentCount()==0);	0
3	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotNull(registry);	0
4	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotEquals(0,registry.agentCount());	0
6	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotSame(registry,load(agentsFile));	0
7	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertEquals(2,registry.agentCount());	1
9	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertEquals(2,registry.agentCount());	1
14	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()>=0);	0
28	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()<=10);	0
5	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotNull(moneyToStrPER100);	0
6	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertFalse(moneyToStrPER100.convert(123.45).isEmpty());	0
7	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotEquals("STR",moneyToStrPER100.convert(123.45));	0
11	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotSame(moneyToStrUSD,moneyToStrRUR);	0
14	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotEquals("STR",moneyToStrUAHENG.convert(100.0));	0
16	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotSame(moneyToStrUAH,moneyToStrRURRUS);	0
18	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotEquals("STR",moneyToStrPER100.convert(123.45).trim());	0
3	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertFalse(poolKey==null||poolKey.trim().isEmpty());	0
4	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0);	0
5	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	0
6	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey));	0
7	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotSame(0,cm.count(poolKey));	0
10	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>=0);	0
11	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertEquals(0,cm.count("STR"));	0
12	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(3,cm.count(poolKey));	0
0	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertFalse(graph.hasCycles());	1
1	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertTrue(graph.minimalCycles().isEmpty());	0
2	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertEquals(0,graph.minimalCycles().size());	0
3	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertTrue(graph.minimalCycles().isEmpty());	0
4	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertNotNull(graph.minimalCycles());	0
5	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertFalse(!graph.minimalCycles().isEmpty());	0
6	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertNotEquals(3,graph.minimalCycles().size());	0
8	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertFalse(graph.hasCycles());	1
9	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertTrue(graph.minimalCycles().size()<=1);	0
13	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertNotSame(2,graph.minimalCycles().size());	0
0	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().isEmpty());	1
1	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().size());	0
2	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertNotNull(graph.edges());	0
3	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertFalse(graph.edges().iterator().hasNext());	0
5	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(Collections.emptyList(),Arrays.asList(graph.edges().toArray()));	0
6	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().stream().count());	0
7	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().isEmpty());	1
8	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().size()==0);	0
9	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(Collections.emptyList(),graph.edges());	0
10	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().stream().noneMatch(e->true));	0
0	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
1	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals("STR",ret);	0
2	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
4	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
6	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
10	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
13	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
25	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotSame(clientUserProcessor,ret);	0
27	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertEquals(ret,ret);	0
26	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	assertEquals("STR","STR");	0
0	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(loader);	0
3	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertFalse(factory==null);	0
4	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
5	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotSame(factory,LoaderUriDownloader.createJsonSchemaFactory(loader));	0
6	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
15	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
23	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
27	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
28	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertTrue(factory!=null);	0
1	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertEquals(null,event);	0
2	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
6	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
14	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
0	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
1	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	0
4	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
5	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql.toString());	0
6	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals(null,sql.toString());	0
7	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql.toString());	0
8	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(sql.toString().length()>0);	0
9	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotSame("STR",sql.toString());	0
12	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(!sql.toString().isEmpty());	0
22	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString().replaceAll("STR","STR").toLowerCase());	0
0	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	0
2	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertEquals(0,res.size());	1
3	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(res.isEmpty());	0
4	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertFalse(res.contains("STR"));	0
5	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotEquals(5,res.size());	0
7	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	0
10	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	0
12	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(helloClass!=null);	0
15	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotEquals(null,res);	0
16	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertEquals(0,res.size());	1
0	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.isRecognized());	1
1	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.isRecognized());	1
6	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertEquals(true,ceļu.isRecognized());	0
7	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotEquals(false,ceļu.isRecognized());	0
10	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotNull(ceļu);	0
1	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
2	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertTrue(poller.getObjectQueryPreparer()!=null);	0
9	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
14	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotSame(mockObjectQueryPreparer,poller.getObjectQueryPreparer());	0
18	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertFalse(poller.getObjectQueryPreparer()==null);	0
29	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
7	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	assertNotNull(notFoundHandler);	0
0	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	1
2	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()==ResponseStatus.OK||response.getStatus()==ResponseStatus.REPLAYED_OTP);	0
3	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getStatus());	0
6	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getStatus());	0
8	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()!=null);	0
9	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertFalse(response.getStatus()==null);	0
13	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	1
15	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotSame(ResponseStatus.OK,response.getStatus());	0
22	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()!=null&&(response.getStatus()==ResponseStatus.OK||response.getStatus()==ResponseStatus.REPLAYED_OTP));	0
24	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertSame(ResponseStatus.REPLAYED_OTP,response.getStatus());	0
1	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()>=0&&p.getBlankIndex()<p.getCells().length);	0
2	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(-1,p.getBlankIndex());	0
3	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotSame(-1,p.getBlankIndex());	0
4	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotNull(p.getBlankIndex());	0
5	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertFalse(p.getBlankIndex()==-1);	0
6	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(null,p.getBlankIndex());	0
7	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotSame(null,p.getBlankIndex());	0
8	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()>=0);	0
9	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertFalse(p.getBlankIndex()<0);	0
12	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(-1,p.getBlankIndex());	0
1	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertTrue(CommUtil.repeatChar('Z',0).isEmpty());	0
3	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertNotNull(CommUtil.repeatChar('C',5));	0
4	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertTrue(!"STR".equals(CommUtil.repeatChar('D',2)));	0
5	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertFalse("STR".equals(CommUtil.repeatChar('E',4)));	0
8	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertNotSame(CommUtil.repeatChar('H',2),CommUtil.repeatChar('H',3));	0
9	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertEquals(5,CommUtil.repeatChar('I',5).length());	0
11	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertTrue(CommUtil.repeatChar('J',0).isEmpty());	0
0	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
1	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(vārds.wordforms.isEmpty());	0
3	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotNull(vārds);	0
4	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotEquals(0,vārds.wordforms.size());	0
6	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized()&&vārds.wordforms.size()>0);	0
9	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotSame(0,vārds.wordforms.size());	0
10	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized()||vārds.wordforms.size()>0);	0
15	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(vārds.isRecognized()&&vārds.wordforms.isEmpty());	0
23	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
26	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
0	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.isRecognized());	1
1	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.isRecognized());	1
5	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(true,lūzīs.isRecognized());	0
8	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(lūzīs);	0
14	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(lūzīs);	0
15	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertFalse(lūzīs.wordforms.isEmpty());	0
16	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(!lūzīs.wordforms.isEmpty());	0
17	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.isRecognized());	1
18	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotEquals(0,lūzīs.wordforms.size());	0
19	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(lūzīs.getClass(),lv.semti.morphology.analyzer.Word.class);	0
0	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(austrumlatvija.isRecognized());	1
1	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals(true,austrumlatvija.isRecognized());	0
2	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotNull(austrumlatvija);	0
3	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(austrumlatvija.wordforms.isEmpty());	0
4	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotEquals(0,austrumlatvija.wordforms.size());	0
5	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(!austrumlatvija.wordforms.isEmpty());	0
6	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotSame(0,austrumlatvija.wordforms.size());	0
13	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotNull(locītājs);	0
16	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotNull(locītājs);	0
17	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(austrumlatvija.isRecognized());	1
0	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
1	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
4	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals(true,w.isRecognized());	0
6	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotNull(w);	0
28	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	0
29	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotEquals(0,w.wordforms.size());	0
5	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertTrue(simulatorProperties.getCoordinatorPort()>=0);	0
6	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotNull(simulatorProperties.getCoordinatorPort());	0
7	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotEquals("STR",simulatorProperties.getCoordinatorPort());	0
24	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotSame("STR",simulatorProperties.getCoordinatorPort());	0
29	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertEquals(0,simulatorProperties.getCoordinatorPort());	1
0	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertEquals("STR",exception.getMessage());	1
2	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotNull(exception.getMessage());	0
4	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertTrue(exception.getMessage()!=null&&!exception.getMessage().isEmpty());	0
5	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotEquals("STR",exception.getMessage());	0
6	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertSame(cause,exception.getCause());	0
9	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertEquals(cause,exception.getCause());	0
12	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertSame(cause,exception.getCause());	0
15	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotNull(exception.getCause());	0
20	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotSame("STR",exception.getMessage());	0
0	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.exists());	1
2	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(exceptionFile);	0
3	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.isFile());	0
4	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertFalse(exceptionFile.isDirectory());	0
5	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.exists());	1
8	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.length()>0);	0
9	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotEquals(0,exceptionFile.length());	0
12	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(exceptionFile);	0
2	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(testObject,"STR","STR"));	0
3	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	0
4	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	0
7	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(testObject,"STR","STR"));	0
15	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(testObject,"STR","STR"));	0
27	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(null,"STR","STR"));	0
29	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(testObject);	0
0	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertEquals(loggerA0,loggerA1);	0
1	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA0,loggerB0);	0
2	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA_lh0,loggerA_lh1);	0
3	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotNull(loggerA0);	0
4	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA0==loggerA1);	1
5	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA_lh0,loggerA_lh1);	0
6	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertFalse(loggerA0==loggerB0);	0
7	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA0!=loggerB0);	0
12	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotNull(loggerA_lh0);	0
0	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
2	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertEquals(false,doc.isDirty());	0
4	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotNull(doc);	0
5	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
6	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotEquals(true,doc.isDirty());	0
7	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotSame(true,doc.isDirty());	0
9	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertSame(false,doc.isDirty());	0
12	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotEquals(null,doc.getDirtyFields());	0
14	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
0	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(classLinked,prop.getLinkedClass());	0
1	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertFalse(prop.isNotNull());	0
2	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotNull(prop.getLinkedClass());	1
5	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(OType.LINK,prop.getType());	0
6	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotEquals(0,schema.countClasses());	0
7	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertFalse(classA.properties().isEmpty());	0
0	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
6	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotSame(graph,g);	0
7	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotEquals(graph,g);	0
8	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
12	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertFalse(g.isClosed());	0
20	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
21	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertEquals(0,g.countVertices());	0
22	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
29	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
0	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertEquals(doc.field("STR"),"STR");	1
2	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertTrue(!data.isEmpty());	0
4	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertTrue(parentArray.contains(2));	0
5	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertEquals(4,parentArray.size());	0
6	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertFalse(data.containsKey("STR"));	0
7	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotEquals(5,parentArray.size());	0
9	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertEquals(3,parentArray.get(2));	0
0	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals(doc1,doc1.field("STR"));	0
1	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals(String.class,doc1.field("STR").getClass());	0
2	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNull(doc1.field("STR"));	0
3	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(json.matches("STR"));	0
4	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotEquals("STR",json);	0
5	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(doc1.containsField("STR"));	0
6	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertFalse(doc1.containsField("STR"));	0
7	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(doc1.field("STR"));	0
8	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotEquals("STR",doc1.field("STR"));	0
11	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(doc1.field("STR").equals("STR"));	0
0	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToAdd,addedKeys);	1
1	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey(42)&&keysToAdd.containsKey(555));	0
2	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.size()==2&&keysToAdd.containsKey(42)&&keysToAdd.containsKey(555));	0
3	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.size()==2);	0
4	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertFalse(keysToAdd.isEmpty());	0
5	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotNull(keysToAdd);	0
6	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertEquals(2,keysToAdd.size());	0
7	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsValue(1)&&keysToAdd.containsValue(1));	0
8	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotEquals(keysToAdd,removedKeys);	0
9	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotSame(keysToAdd,removedKeys);	0
0	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertEquals(list.size(),1);	1
1	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertTrue(!list.isEmpty());	0
2	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotNull(list);	0
3	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertFalse(list.isEmpty());	0
4	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertEquals(list.size(),1);	1
5	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotEquals(0,list.size());	0
6	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertTrue(list.size()==1);	0
7	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotEquals(2,list.size());	0
0	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertEquals(26,results.size());	1
2	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>=0);	0
3	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotNull(results);	0
4	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertFalse(results.isEmpty());	0
5	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotEquals(0,results.size());	0
7	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(!results.isEmpty());	0
9	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotNull(results.get(0));	0
11	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>0);	0
18	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotSame(0,results.size());	0
0	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	1
1	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotEquals(ResponseStatus.BAD_OTP,response.getStatus());	0
6	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()==ResponseStatus.OK||response.getStatus()==ResponseStatus.REPLAYED_OTP);	0
7	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertFalse(response.getStatus()==ResponseStatus.BAD_OTP);	0
8	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getStatus());	0
9	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotSame(ResponseStatus.NO_SUCH_CLIENT,response.getStatus());	0
11	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()!=null);	0
12	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotSame(ResponseStatus.BAD_OTP,response.getStatus());	0
15	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertFalse(response.getStatus()==null);	0
17	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertEquals(ResponseStatus.class,response.getStatus().getClass());	0
6	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertEquals("STR",result);	1
2	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertNotNull(WARCRecordFormat.getDigestSha1(content));	0
3	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertNotEquals("STR",WARCRecordFormat.getDigestSha1(content));	0
4	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	1
5	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertFalse(WARCRecordFormat.getDigestSha1(content).isEmpty());	0
6	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertNotEquals(null,WARCRecordFormat.getDigestSha1(content));	0
7	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertTrue(!WARCRecordFormat.getDigestSha1(content).isEmpty());	0
12	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertNotNull(WARCRecordFormat.getDigestSha1(content));	0
0	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertEquals(1,fields.size());	0
2	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertFalse(fields.isEmpty());	0
4	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertNull(fields.get("STR"));	0
5	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertNotEquals("STR",fields.get("STR"));	0
6	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertFalse(fields.containsKey("STR"));	0
7	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertNotSame("STR",fields.get("STR"));	0
17	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertNotNull(fields);	0
0	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
1	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertEquals(ret,ret);	0
2	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
3	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
4	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertTrue(true);	0
5	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals("STR",ret);	0
0	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertEquals(0,tokens.size());	1
1	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
3	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
5	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertTrue(tokens.isEmpty());	0
6	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertFalse(tokens.contains("STR"));	0
10	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
13	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
0	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotEquals(0,invalidHandshakeException.getCloseCode());	0
2	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertEquals(1002,invalidHandshakeException.getCloseCode());	0
3	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertTrue(invalidHandshakeException.getCloseCode()!=0);	0
4	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	0
5	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNull(invalidHandshakeException.getMessage());	0
6	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertFalse(invalidHandshakeException.getCloseCode()==0);	0
9	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotSame(0,invalidHandshakeException.getCloseCode());	0
10	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNull(invalidHandshakeException.getMessage());	0
11	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotEquals(1000,invalidHandshakeException.getCloseCode());	0
2	CookieTest	testCookieWithExpiresString	assertTrue("STR",cookie.getHTTPHeader().contains(expiresString));	assertNotNull(cookie.getHTTPHeader());	0
3	CookieTest	testCookieWithExpiresString	assertTrue("STR",cookie.getHTTPHeader().contains(expiresString));	assertNotEquals("STR",cookie.getHTTPHeader());	0
4	CookieTest	testCookieWithExpiresString	assertTrue("STR",cookie.getHTTPHeader().contains(expiresString));	assertFalse(cookie.getHTTPHeader().isEmpty());	0
5	CookieTest	testCookieWithExpiresString	assertTrue("STR",cookie.getHTTPHeader().contains(expiresString));	assertNotSame("STR"+expiresString,cookie.getHTTPHeader());	0
8	CookieTest	testCookieWithExpiresString	assertTrue("STR",cookie.getHTTPHeader().contains(expiresString));	assertNotSame("STR",cookie.getHTTPHeader());	0
0	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(exp,clazz);	0
1	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp.length,clazz.length);	0
2	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotNull(clazz);	0
3	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length>0);	0
4	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length>0);	0
8	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertSame(exp[0],clazz[0]);	0
9	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertSame(exp[1],clazz[1]);	0
10	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(Arrays.equals(exp,clazz));	0
12	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(exp,clazz);	0
13	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(exp,clazz);	0
10	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(!CommUtil.hexdump(bs.getBytes()).isEmpty());	0
11	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertNotNull(CommUtil.hexdump(bs.getBytes()));	0
18	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertFalse(CommUtil.hexdump(bs.getBytes()).startsWith("STR"));	0
21	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertNotSame("STR",CommUtil.hexdump(bs.getBytes()));	0
1	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertNotNull(CommUtil.escapeJava("STR"));	0
2	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertTrue(!CommUtil.escapeJava("STR").isEmpty());	0
5	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertFalse(CommUtil.escapeJava("STR").isEmpty());	0
22	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertEquals("STR",CommUtil.escapeJava("STR"));	1
2	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotNull(moneyToStrRUR.convert(100.0));	0
3	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotEquals("STR",moneyToStrRUR.convert(100.0));	0
4	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertTrue(!moneyToStrRUR.convert(100.0).isEmpty());	0
5	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotSame("STR",moneyToStrRUR.convert(100.0));	0
7	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertFalse(moneyToStrRUR.convert(100.0).isEmpty());	0
8	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotEquals(null,moneyToStrRUR.convert(100.0));	0
9	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertTrue(moneyToStrRUR.convert(100.0).length()>0);	0
13	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotSame("STR",moneyToStrRUR.convert(100.0).trim());	0
15	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertFalse(moneyToStrRUR.convert(100.0).endsWith("STR"));	0
7	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertFalse(map.containsKey("STR"));	0
8	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNull(map.get("STR"));	0
10	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotEquals("STR",map.get("STR"));	0
11	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotSame("STR",map.get("STR"));	0
12	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertEquals(map,map);	0
0	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,p.getDistanceToGoal());	1
1	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()>=0);	0
2	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,p.getDistanceToGoal());	1
3	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertFalse(p.getDistanceToGoal()<0);	0
4	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotEquals(5,p.getDistanceToGoal());	0
5	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotNull(p);	0
6	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,p.getDistanceToGoal());	1
7	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotEquals(10,p.getDistanceToGoal());	0
8	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()<=100);	0
9	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertFalse(p.getDistanceToGoal()>100);	0
0	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
1	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>=1);	0
2	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotNull(panel);	0
3	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
4	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertFalse(panel.getTurtleCount()<=0);	0
5	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotEquals(0,panel.getTurtleCount());	0
7	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0);	0
9	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
11	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>=0);	0
14	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertSame(panel,panel);	0
15	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertArrayEquals(a,a);	0
0	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	1
1	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals("STR",macAddress.toString());	0
3	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotNull(macAddress.toString());	0
4	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.toString().isEmpty());	0
5	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotSame("STR",macAddress.toString());	0
6	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotNull(macAddress);	0
9	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.toString().endsWith("STR"));	0
10	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals("STR",macAddress.toString());	0
0	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
1	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
10	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
14	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
22	TimestampParserTest	testParseNull	assertNull(parsed);	assertEquals(null,parsed);	0
25	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
26	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
0	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertEquals(MESSAGE,exception.getMessage());	1
1	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertTrue(exception.getMessage().contains(MESSAGE));	0
2	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotNull(exception);	0
4	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotEquals("STR",exception.getMessage());	0
5	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertEquals(MESSAGE,exception.getMessage());	1
6	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	0
7	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotSame(null,exception);	0
10	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotEquals("STR",exception.getClass());	0
11	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertEquals(MESSAGE,exception.getMessage());	1
12	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertEquals(MESSAGE,exception.getMessage());	1
0	CollectorsTest	toImmutableSet	assertEquals(ImmutableSet.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableSet()));	assertNotNull(Collectors.toImmutableSet());	0
1	CollectorsTest	toImmutableSet	assertEquals(ImmutableSet.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableSet()));	assertNotNull(Collectors.toImmutableSet());	0
6	CollectorsTest	toImmutableSet	assertEquals(ImmutableSet.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableSet()));	assertNotNull(java.util.stream.Collectors.toSet());	0
9	CollectorsTest	toImmutableSet	assertEquals(ImmutableSet.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableSet()));	assertNotNull(java.util.stream.Collectors.toSet());	0
16	CollectorsTest	toImmutableSet	assertEquals(ImmutableSet.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableSet()));	assertTrue(true);	0
2	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotNull(actual);	0
5	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotEquals(null,actual);	0
12	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertTrue(actual!=null);	0
16	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotNull(actual);	0
21	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertFalse(actual==null);	0
23	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotSame(null,actual);	0
29	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotNull(actual);	0
13	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotSame(ToJSON.toJSON(cl1),"STR");	0
14	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotNull(ToJSON.toJSON(cl1));	0
15	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertFalse(ToJSON.toJSON(cl1).isEmpty());	0
16	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotEquals("STR",ToJSON.toJSON(cl1));	0
17	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertTrue(!ToJSON.toJSON(cl1).equals("STR"));	0
19	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotSame(ToJSON.toJSON(cl1),"STR");	0
20	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertTrue(!ToJSON.toJSON(cl1).trim().isEmpty());	0
21	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotEquals(0,ToJSON.toJSON(cl1).length());	0
26	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertFalse(ToJSON.toJSON(cl1).contains("STR"));	0
0	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
1	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
2	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
4	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertEquals(true,matcher.find());	0
5	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	0
9	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(matcher.matches());	0
10	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	0
11	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertEquals(1,matcher.find()?1:0);	0
12	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
13	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
8	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
12	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	0
14	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
15	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
19	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
20	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
21	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.matches());	0
24	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotEquals(false,matcher.lookingAt());	0
25	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
0	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotNull(helloClass);	1
5	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertEquals(1,helloClass.getDeclaredMethods().length);	0
6	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotNull(helloClass);	1
9	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertFalse(helloClass.getMethods().length==0);	0
0	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	1
7	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertFalse(draft_6455.getExtension()==null);	0
0	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketImpl);	1
3	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketImpl);	1
12	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertFalse(webSocketImpl.isClosed());	0
14	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotEquals(0,webSocketImpl.hashCode());	0
4	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(actual>=expected);	0
1	SubStatementTest	testGetVerb	assertNotNull(actual);	assertNotNull(actual);	1
2	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
6	SubStatementTest	testGetVerb	assertNotNull(actual);	assertSame(expected,actual);	0
9	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
2	ResultTest	testGetDuration	assertNotNull(actual);	assertNotNull(actual);	1
3	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.contains(expected));	0
6	ResultTest	testGetDuration	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
10	ResultTest	testGetDuration	assertNotNull(actual);	assertSame(expected,actual);	0
13	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	0
0	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	0
1	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	1
3	StatementTest	testGetAuthority	assertNotNull(actual);	assertTrue(statement.getAuthority().equals(agent));	0
4	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotSame(null,actual);	0
5	StatementTest	testGetAuthority	assertNotNull(actual);	assertSame(agent,actual);	0
10	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(statement.getAuthority());	0
0	IssuesTest	testIssue23	assertTrue(true);	assertTrue(true);	1
1	IssuesTest	testIssue23	assertTrue(true);	assertEquals(2,schemas.size());	0
2	IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	0
6	IssuesTest	testIssue23	assertTrue(true);	assertNotEquals(0,schemas.size());	0
7	IssuesTest	testIssue23	assertTrue(true);	assertTrue(schemas.stream().allMatch(schema->schema.getTargetNamespace()!=null));	0
8	IssuesTest	testIssue23	assertTrue(true);	assertSame(parser,schemas.get(0).getParser());	0
9	IssuesTest	testIssue23	assertTrue(true);	assertTrue(parser.getUnsolvedReferences().isEmpty());	0
14	IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	0
0	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	0
1	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertEquals(1,schemas.size());	1
2	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	0
3	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	0
5	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(0,schemas.size());	0
8	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertTrue(schemas.stream().anyMatch(schema->schema.getElements().size()>0));	0
9	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(0,schemas.stream().flatMap(schema->schema.getElements().stream()).count());	0
10	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	0
12	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertEquals(2,schemas.get(0).getElements().size());	0
0	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(a,b);	1
2	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotNull(a);	0
5	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotSame(a,b);	0
7	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertTrue(a.equals(b));	0
13	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotEquals(a.getHistory(),b.getHistory());	0
14	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(1,a.getActualCost());	0
0	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertEquals(test,testContainer.getTestInstance());	1
1	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer.getTestInstance());	0
4	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertFalse(testContainer.getTestInstance()==null);	0
7	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertSame(test,testContainer.getTestInstance());	0
0	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotNull(testData);	0
2	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(testData.getTestIndex()>=0);	0
3	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotEquals("STR",testData.getTestCase().getId());	0
5	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertFalse(testData.isStopRequested());	0
6	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotSame("STR",testData.getTestCase().getId());	0
7	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotNull(testData.getTestSuite());	0
8	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(testData.getTestSuite().size()>0);	0
9	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertEquals(3,testData.getTestSuite().size());	0
2	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(null,"STR","STR"));	0
0	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	1
1	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertEquals(System.currentTimeMillis(),workerProcess1.getLastSeen(),100);	0
2	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotEquals(0,workerProcess1.getLastSeen());	0
3	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotNull(workerProcess1.getLastSeen());	0
4	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotSame(firstLastSeen,workerProcess1.getLastSeen());	0
7	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertFalse(workerProcess1.getLastSeen()<=0);	0
0	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertEquals("STR",simulatorProperties.get("STR","STR"));	1
1	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertNotNull(simulatorProperties.get("STR","STR"));	0
3	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertTrue(simulatorProperties.get("STR","STR").startsWith("STR"));	0
4	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertFalse(simulatorProperties.get("STR","STR").isEmpty());	0
8	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertTrue(simulatorProperties.get("STR","STR").endsWith("STR"));	0
0	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertEquals(qResult.size(),3);	1
1	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertTrue(qResult.size()<=3);	0
2	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotNull(qResult);	0
3	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertFalse(qResult.isEmpty());	0
4	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotEquals(0,qResult.size());	0
8	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotSame(null,qResult);	0
2	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertEquals(qResult.size(),2);	1
3	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	0
6	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotNull(qResult);	0
7	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotEquals(0,qResult.size());	0
2	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertTrue(property.getType()==OType.STRING);	0
3	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotNull(property);	0
4	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(classA.isAbstract());	0
9	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotEquals("STR",property.getName());	0
12	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNull(schema.getClass("STR"));	0
1	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNotNull(manager.getNewRecords());	0
5	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().isEmpty());	0
11	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNotSame(doc1,doc2);	0
3	ODocumentSchemalessBinarySerializationTest	testFieldNamesRaw	assertNotNull(fields);	assertNotNull(fields);	1
0	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
0	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	0
1	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
2	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotNull(res);	0
3	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	0
5	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>0);	0
1	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertEquals(0,res.size());	0
2	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertTrue(res.isEmpty());	1
3	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNotNull(res);	0
4	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertFalse(res.contains(doc));	0
7	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNotEquals(2,res.size());	0
10	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNull(database.getMetadata().getSchema().getClass("STR"));	0
12	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertFalse(database.getMetadata().getSchema().existsClass("STR"));	0
4	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotNull(value3);	0
0	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(0,cm.count("STR"));	0
1	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count("STR")>=0);	0
2	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	0
8	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotEquals(null,conn);	0
9	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count("STR")<=10);	0
12	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(1,cm.count(poolKey));	1
0	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn());	1
1	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotNull(client2);	0
2	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	0
9	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertFalse(client1.equals(client2));	0
1	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy);	0
3	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertEquals(8080,proxy.getPort());	0
5	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotEquals("STR",proxy.getProtocol());	0
9	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertFalse(proxy.getProtocol().isEmpty());	0
10	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy.getHost());	0
12	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotSame(null,proxy);	0
13	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertFalse(proxy.getHost().isEmpty());	0
1	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotNull(res);	0
2	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertEquals(34,res.length);	0
3	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(res.length>0);	0
4	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertArrayEquals(res,res);	0
5	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(spsList.size()>0&&ppsList.size()>0);	0
6	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotSame(spsList.get(0),ppsList.get(0));	0
10	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertFalse(spsList.isEmpty()||ppsList.isEmpty());	0
11	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotEquals(0,res.length);	0
12	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(res.length>=0);	0
0	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertEquals(false,profiles.isEmpty());	0
1	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(profiles.size()>0);	0
2	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotNull(profiles);	0
3	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotEquals(0,profiles.size());	0
4	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertSame(1,profiles.size());	0
5	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(!profiles.isEmpty());	0
7	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertEquals(1,profiles.size());	1
8	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotSame(0,profiles.size());	0
10	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertFalse(profiles.isEmpty());	0
12	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(profiles.size()>=1);	0
1	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertEquals(1,builder.build().getSpec().getInitContainers().size());	0
2	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder.build().getSpec().getInitContainers());	0
3	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(builder.build().getSpec().getInitContainers().isEmpty());	0
4	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotEquals(0,builder.build().getSpec().getInitContainers().size());	0
5	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertTrue(builder.build().getSpec().getInitContainers().size()>0);	0
6	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotSame(0,builder.build().getSpec().getInitContainers().size());	0
7	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder.build().getSpec().getInitContainers());	0
8	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotEquals(null,builder.build().getSpec().getInitContainers());	0
9	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertTrue(builder.build().getSpec().getInitContainers()!=null&&!builder.build().getSpec().getInitContainers().isEmpty());	0
0	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertEquals(latestTag,resultedTag);	1
1	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag==latestTag||resultedTag==oldTag);	0
2	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	0
3	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotEquals(oldTag,resultedTag);	0
5	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertSame(latestTag,resultedTag);	0
6	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag.equals(latestTag)||resultedTag.equals(oldTag));	0
7	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertFalse(resultedTag.equals(oldTag));	0
9	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertSame(latestTag,service.newerTag(latestTag,oldTag));	0
10	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(oldTag,resultedTag);	0
2	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotNull(cookies.getCookies());	0
4	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertEquals(1,cookies.getCookies().size());	1
6	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertFalse(cookies.getCookies().isEmpty());	0
7	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotEquals(0,cookies.getCookies().size());	0
0	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	1
1	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotEquals(FilterReply.DENY,filter.decide(evt));	0
2	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.DENY);	0
3	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertSame(FilterReply.NEUTRAL,filter.decide(evt));	0
5	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.DENY);	0
7	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotSame(FilterReply.DENY,filter.decide(evt));	0
9	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotNull(filter.decide(evt));	0
11	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt)==null);	0
0	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
3	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
4	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.endsWith("STR"));	0
5	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testUrl,normalizedUrl);	0
7	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
8	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
10	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertArrayEquals(expectedResult.toCharArray(),normalizedUrl.toCharArray());	0
10	MoneyToStrTest	checkUSDRUS	assertEquals("STR",moneyToStrUSDRUS.convert(V_300D));	assertNotNull(moneyToStrUSD.convert(123.45));	0
11	MoneyToStrTest	checkUSDRUS	assertEquals("STR",moneyToStrUSDRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrUSD.convert(123.45));	0
14	MoneyToStrTest	checkUSDRUS	assertEquals("STR",moneyToStrUSDRUS.convert(V_300D));	assertFalse(moneyToStrUSD.convert(123.45).isEmpty());	0
1	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(3,map.size());	0
3	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotNull(map.keySet());	0
4	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.isEmpty());	0
5	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotEquals(4,map.size());	0
6	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsValue(9));	0
8	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.containsKey("STR"));	0
9	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotSame(7,map.get("STR"));	0
10	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNull(map.get("STR"));	0
0	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotNull(formas);	0
2	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertEquals(1,formas.size());	1
3	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	0
1	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertFalse(config.isNull("STR"));	1
8	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertNotNull(config);	0
10	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertTrue(config.isNull("STR"));	0
1	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertEquals(0,cm.maxcolor());	0
10	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertNotNull(cm.getMap());	0
0	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find());	1
1	MatcherTest	reset	assertTrue(matcher.find());	assertEquals(0,matcher.regionStart());	0
3	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher.pattern());	0
4	MatcherTest	reset	assertTrue(matcher.find());	assertNotEquals(0,matcher.regionEnd());	0
5	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.matches());	0
6	MatcherTest	reset	assertTrue(matcher.find());	assertNotEquals("STR",matcher.pattern().pattern());	0
7	MatcherTest	reset	assertTrue(matcher.find());	assertEquals(0,matcher.regionStart());	0
13	MatcherTest	reset	assertTrue(matcher.find());	assertNotEquals(5,matcher.regionEnd());	0
0	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343,OVarIntSerializer.readAsLong(bytes));	0
1	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertTrue(OVarIntSerializer.readAsLong(bytes)>0);	0
2	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotNull(bytes);	0
3	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(0,bytes.offset);	0
4	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertFalse(OVarIntSerializer.readAsLong(bytes)<0);	0
5	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotEquals(100,OVarIntSerializer.readAsLong(bytes));	0
12	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertTrue(bytes.offset>=0);	0
14	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotSame(null,bytes);	0
1	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertEquals(treeBucket.size(),0);	1
2	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size()>=0);	0
3	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	0
9	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertSame(cacheEntry.getCachePointer(),cachePointer);	0
10	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(cacheEntry.isAlive());	0
2	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertTrue(server.existsDatabase("STR"));	1
5	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	0
0	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	0
4	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotNull(res);	0
9	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
7	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,anotherCompositeKey);	0
9	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.compareTo(anotherCompositeKey)<=0);	0
12	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.equals(anotherCompositeKey));	1
13	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	0
14	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey);	0
0	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
2	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotNull(result);	0
7	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertTrue(expectedResult.size()==2);	0
8	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	0
10	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertTrue(Arrays.asList(expectedResult).contains(result));	0
11	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotSame(expectedResult,result);	0
1	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotNull(property);	0
3	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals("STR",property.getDescription());	0
4	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertSame(companyClass,property.getOwnerClass());	0
5	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isMandatory());	0
6	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotSame(companyClass,property.getLinkedClass());	0
10	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals("STR",property.getName());	0
0	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	1
1	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	1
4	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertFalse(objects.isEmpty());	0
5	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertEquals(1,objects.size());	0
6	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotSame(subObjects,objects);	0
10	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotEquals(0,document.getVersion());	0
11	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertTrue(db.getClusterNames().contains(db.getClusterNameById(db.getDefaultClusterId())));	0
0	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
10	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	0
0	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(viņš.isRecognized());	1
2	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotNull(viņš);	0
3	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertEquals("STR",viņš.getToken());	0
4	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertFalse(viņš.wordforms.isEmpty());	0
6	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertEquals(1,viņš.wordforms.size());	0
8	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotEquals(0,viņš.wordforms.size());	0
13	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertSame(Analyzer.class,locītājs.getClass());	0
2	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.isEmpty());	0
4	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertEquals(5,flattened.size());	1
5	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattenedinstanceofList);	0
6	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotNull(flattened);	0
7	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotSame(set,flattened);	0
0	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertEquals("STR",result);	1
3	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotNull(result);	0
4	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
10	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertFalse(result.endsWith("STR"));	0
0	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(sourceFile.exists());	0
1	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(sourceFile);	0
7	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertEquals(0,sourceFile.length());	0
9	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotEquals("STR",sourceFile.getName());	0
14	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.isDirectory());	0
0	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.exists());	1
1	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(tempClass.isHidden());	0
6	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotEquals(0,Files.size(tempClass.toPath()));	0
7	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertEquals(true,tempClass.isFile());	0
10	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(tempClass.getParentFile());	0
11	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotSame(serverDirectory,targetDir);	0
12	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(targetDir.isDirectory());	0
0	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
2	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
3	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotNull(result);	0
4	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
6	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
7	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
8	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
9	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
13	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
2	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotNull(result);	1
2	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(mockJmxConnector);	0
1	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertEquals("STR",m.markdown(null));	1
2	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotNull(deflateExtension.getProvidedExtensionAsServer());	0
3	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer());	0
5	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.getProvidedExtensionAsServer().isEmpty());	0
6	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame("STR",deflateExtension.getProvidedExtensionAsServer());	0
11	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals(null,deflateExtension.getProvidedExtensionAsServer());	0
0	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	1
2	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.equals(defaultExtension1));	0
3	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.equals(null));	0
4	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotNull(defaultExtension0);	0
5	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertSame(DefaultExtension.class,defaultExtension0.getClass());	0
6	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotSame(defaultExtension0,defaultExtension1);	0
7	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(defaultExtension0.toString(),defaultExtension1.toString());	0
8	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotEquals(defaultExtension0.getProvidedExtensionAsClient(),String.CASE_INSENSITIVE_ORDER);	0
10	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.acceptProvidedExtensionAsServer("STR"));	0
11	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.acceptProvidedExtensionAsClient("STR"));	0
3	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotEquals(0,c.getYModeProbs().length);	0
5	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertEquals(3,blSz);	0
8	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotNull(c.yModeProbs);	0
9	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertSame(DecodingContext.class,c.getClass());	0
10	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotEquals(MockVPXBooleanDecoder.class,decoder.getClass().getClass());	0
0	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual);	1
1	VerbsTest	testRegistered	assertNotNull(actual);	assertEquals(actual,actual);	0
2	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual);	1
8	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual);	1
0	VerbsTest	testImported	assertNotNull(actual);	assertEquals(actual,actual);	0
1	VerbsTest	testImported	assertNotNull(actual);	assertNotNull(actual);	1
2	VerbsTest	testImported	assertNotNull(actual);	assertNotNull(actual);	1
7	VerbsTest	testImported	assertNotNull(actual);	assertTrue(actual!=null);	0
2	VerbsTest	testInitialized	assertNotNull(actual);	assertNotNull(actual);	1
4	VerbsTest	testInitialized	assertNotNull(actual);	assertNotNull(actual);	1
9	VerbsTest	testInitialized	assertNotNull(actual);	assertNotSame(null,actual);	0
2	StatementTest	testToString	assertNotNull(actual);	assertEquals(actual.toString(),actual.toString());	0
3	StatementTest	testToString	assertNotNull(actual);	assertNotNull(actual);	1
6	StatementTest	testToString	assertNotNull(actual);	assertNull(actual.getTimestamp());	0
9	StatementTest	testToString	assertNotNull(actual);	assertNotNull(actual);	1
12	StatementTest	testToString	assertNotNull(actual);	assertFalse(actual.toString().isEmpty());	0
0	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	0
2	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	0
4	ActivityTest	testGetObjectType	assertNotNull(actual);	assertNotNull(actual);	1
5	ActivityTest	testGetObjectType	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
7	ActivityTest	testGetObjectType	assertNotNull(actual);	assertSame(expected,actual);	0
3	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrUAH.convert(100.0));	0
4	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotNull(moneyToStrRUR.convert(100.0));	0
7	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotSame("STR",moneyToStrUSDENG.convert(100.0).replace("STR","STR"));	0
11	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertFalse(moneyToStrRUR.convert(100.0).isEmpty());	0
12	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrRURRUS.convert(100.0));	0
14	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertFalse(moneyToStrUAHRUS.convert(100.0).isEmpty());	0
3	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertNotNull(moneyToStrRUR);	0
0	TestPressure	testToMillibar	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(actual!=null&&!actual.isEmpty());	0
2	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotNull(actual);	0
4	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotSame(expected,actual);	0
14	TestPressure	testToMillibar	assertEquals(expected,actual);	assertFalse(actual.isEmpty());	0
0	TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue("STR"+expected+"STR"+actual,expected.equals(actual));	0
2	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotSame(expected,actual);	0
3	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
5	TestPressure	testToInHg	assertEquals(expected,actual);	assertArrayEquals(expected.toCharArray(),actual.toCharArray());	0
6	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(expected.contains(actual));	0
12	TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
0	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100);	0
1	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(0,value);	0
2	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotNull(value);	0
3	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>0&&value<101);	0
4	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0);	1
7	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value<=100);	0
8	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotSame(0,value);	0
10	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertFalse(value<0);	0
4	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotNull(simulatorProperties.getCloudIdentity());	0
5	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals("STR",simulatorProperties.getCloudIdentity());	0
7	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertFalse(simulatorProperties.getCloudIdentity().isEmpty());	0
8	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotSame(identityFile,simulatorProperties.getCloudIdentity());	0
10	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotSame(identityFile.getAbsolutePath(),simulatorProperties.getCloudIdentity());	0
0	ReflectionUtilsTest	testGetField_typeMismatch	assertNull(field);	assertNull(field);	1
0	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotNull(options);	1
2	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(first);	0
3	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertFalse(resp.isEmpty());	0
4	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(resp);	0
9	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertFalse(resp.endsWith("STR"));	0
1	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(sample1);	0
6	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertFalse(sample1.isEmpty());	0
7	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotEquals(0,sample1.length());	0
8	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertSame(parser.getClass(),CEFParser.class);	0
11	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotSame("STR",sample1);	0
13	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertFalse(sample1.endsWith("STR"));	0
4	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	0
6	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	0
8	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	0
11	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	0
0	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotNull(helloClass);	1
4	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotEquals(0,helloClass.getDeclaredClasses().length);	0
9	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredMethods().length>0);	0
11	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredConstructors().length>0);	0
12	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.getFields().length>0);	0
0	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	0
2	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertEquals(0,duration,1639302);	0
3	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotNull(duration);	0
4	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(0,duration);	0
5	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotSame(started,duration);	0
6	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotNull(duration);	0
7	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertFalse(duration<=0);	0
9	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(started,duration);	0
10	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>0);	0
13	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(durationLimit,duration);	0
0	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertEquals("STR",clazz.getCustom("STR"));	1
4	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotEquals("STR",clazz.getCustom("STR"));	0
6	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotSame("STR",clazz.getCustom("STR"));	0
7	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertEquals("STR",clazz.getCustom("STR"));	1
8	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotSame("STR",clazz.getCustom("STR"));	0
2	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
3	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertFalse(mapToTest.isEmpty());	0
4	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotEquals(propertyIndexByKey,result);	0
8	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
14	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(!mapToTest.isEmpty());	0
15	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotSame(mapToTest,result);	0
1	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(OType.INTEGER,result[0]);	0
2	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotNull(result);	0
3	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(result.length>0);	0
5	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.BOOLEAN,result[0]);	0
7	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertSame(OType.INTEGER,result[0]);	0
8	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(result.length,1);	1
9	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(OType.LINK,result[0]);	0
11	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(Arrays.asList(result).contains(OType.INTEGER));	0
12	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertFalse(Arrays.asList(result).isEmpty());	0
13	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(OType.STRING,result[0]);	0
0	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertEquals(compositeKey.getKeys().size(),1);	1
2	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().isEmpty());	0
3	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotEquals(0,compositeKey.getKeys().size());	0
4	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotNull(compositeKey.getKeys());	0
6	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotSame(0,compositeKey.getKeys().size());	0
7	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotNull(compositeKey);	0
10	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotSame(2,compositeKey.getKeys().size());	0
1	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(index.getSize()>0);	0
2	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotNull(index);	0
5	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(index.getSize()>=0);	0
6	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertFalse(index.getSize()<0);	0
7	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertEquals(2,index.getSize());	1
8	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotEquals(0,index.getSize());	0
10	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotSame(0,index.getSize());	0
12	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertEquals(2,index.getSize());	1
16	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(index.getSize()<=10);	0
17	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotEquals(5,index.getSize());	0
0	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertEquals(java.math.BigDecimal.valueOf(10.5),result);	0
1	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(function);	0
3	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertTrue(resultinstanceofBigDecimal);	1
6	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(function);	0
28	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(function);	0
0	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	0
2	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	0
3	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertEquals(2,qResult.stream().count());	0
4	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertFalse(DB_NAME.isEmpty());	0
5	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotEquals(0,qResult.stream().count());	0
14	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotEquals(DB_STORAGE,42);	0
17	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(db);	0
22	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(DB_STORAGE);	0
3	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertNotNull(listener);	0
10	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertFalse(db.isClosed());	0
28	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertNotEquals("STR",channelBinary);	0
0	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertEquals(2,oClass.declaredProperties().size());	0
2	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotNull(oClass.getProperty("STR"));	1
3	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertFalse(oClass.isAbstract());	0
4	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotEquals(0,oClass.getClusterIds().length);	0
5	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertTrue(oSchema.getClasses().contains(oClass));	0
5	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertEquals(2,((List)result).size());	0
8	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
13	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertFalse(((List)result).isEmpty());	0
17	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertTrue(Arrays.asList("STR","STR").containsAll(Arrays.asList("STR","STR")));	0
19	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotEquals(0,((List)result).size());	0
21	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertSame(ArrayList.class,result.getClass());	0
28	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertFalse(((List)result).isEmpty());	0
2	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(walChanges.hasChanges());	0
9	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotEquals(4,buffer.remaining());	0
10	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(walChanges);	0
11	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FIELD_SIZE,buffer.capacity()-serializationOffset);	0
12	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotSame(OBJECT,walChanges);	0
14	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.remaining()>=FIELD_SIZE);	0
18	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(9,buffer.remaining());	0
25	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotEquals(FIELD_SIZE,buffer.remaining());	0
26	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(walChanges.hasChanges());	0
29	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(OBJECT,OBJECT);	0
1	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(false,YubicoClient.isValidOTPFormat(otp));	0
2	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
3	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(true,YubicoClient.isValidOTPFormat(otp));	0
4	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame(true,YubicoClient.isValidOTPFormat(otp));	0
6	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
7	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	0
8	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertTrue(otp.length()<=64);	0
9	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(0,otp.length());	0
10	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame("STR",otp);	0
11	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(64,otp.length());	0
0	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(false,YubicoClient.isValidOTPFormat(otp));	0
2	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
4	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	0
5	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals("STR",otp);	0
7	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(6,otp.length());	0
8	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame("STR",otp);	0
0	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	0
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	0
2	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
4	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotSame(null,routePrioritizer);	0
15	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotSame(routePrioritizer,null);	0
16	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	0
0	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	0
4	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
6	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotSame(null,routePrioritizer);	0
7	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertSame(ProvidedPriorityRoutePrioritizer.class,routePrioritizer.getClass());	0
9	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	0
10	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertFalse(routePrioritizer.getPrioritizedRoutes().contains(null));	0
0	SvgSizeAnalyzerTest	svgWithoutChanges	assertEquals(SVG,a.getSvg());	assertEquals(SVG,a.getSvg());	1
0	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
1	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertEquals(expected.length,actual.length);	0
2	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
7	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertTrue(actual.toString().equals(expected.toString()));	0
8	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertNotNull(actual);	1
11	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
28	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertSame(expected,actual);	0
0	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
2	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertFalse(actual.isEmpty()||expected.isEmpty());	0
4	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertNotNull(actual);	1
5	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertSame(expected,actual);	0
6	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.size()>0);	0
8	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
9	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
11	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.size()>=0);	0
20	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
0	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	0
1	StatementTest	testGetObject	assertNotNull(actual);	assertTrue(expected.equals(actual));	0
2	StatementTest	testGetObject	assertNotNull(actual);	assertNotNull(actual);	1
4	StatementTest	testGetObject	assertNotNull(actual);	assertSame(expected,actual);	0
6	StatementTest	testGetObject	assertNotNull(actual);	assertNotNull(statement);	0
0	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(aXls.exists());	1
2	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(condition);	0
3	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedValue,actualValue);	0
4	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(expectedValue,actualValue);	0
5	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertArrayEquals(expectedArray,actualArray);	0
6	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertSame(expectedObject,actualObject);	0
7	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(expectedObject,actualObject);	0
9	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	0
10	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedValue,actualValue,delta);	0
1	GeneralTest	testGetName	assertEquals("STR",newGeneral(env()).getName());	assertNotNull(this);	0
0	SourceLoaderFactoryTest	testCreateSourceLoaderWithAdditionalSourceDirectories	assertNotNull(sourceLoader);	assertNotNull(sourceLoader);	1
14	SourceLoaderFactoryTest	testCreateSourceLoaderWithAdditionalSourceDirectories	assertNotNull(sourceLoader);	assertNotEquals(s1,s2);	0
20	SourceLoaderFactoryTest	testCreateSourceLoaderWithAdditionalSourceDirectories	assertNotNull(sourceLoader);	assertNotNull(m1Sources);	0
2	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(m);	0
8	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(m);	0
2	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup);	0
3	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertFalse(EXPECTED.isEmpty());	0
8	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotSame(MarkdownProcessor.class,EXPECTED.getClass());	0
9	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertTrue(EXPECTED.length()>0);	0
13	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertEquals(markup,markup);	0
15	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertTrue(EXPECTED.contains(EXPECTED));	0
16	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertFalse(EXPECTED.isEmpty());	0
22	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotEquals(expectedObject,markdownProcessor.beforeTheseAssign(););	0
5	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertEquals("STR",m.markdown("STR"));	1
6	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotEquals(m,m.markdown("STR"));	0
7	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m.markdown("STR"));	0
8	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotSame(m,m.markdown("STR"));	0
12	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotSame("STR",m.markdown("STR"));	0
14	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertFalse(m.markdown("STR").isEmpty());	0
15	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotEquals("STR",m.markdown("STR"));	0
24	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m.markdown("STR"));	0
27	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotEquals(m,m.markdown("STR"));	0
0	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertEquals("STR",convertedEnv.get("STR"));	1
2	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.containsKey("STR"));	0
3	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNull(env.get("STR"));	0
4	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull(env);	0
5	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals("STR",env.get("STR"));	0
6	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(env.size()>0);	0
7	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(1,env.size());	0
8	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.isEmpty());	0
9	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame(0,env.size());	0
0	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals("STR",convertedEnv.get("STR"));	1
2	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals("STR",result.get("STR"));	0
3	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull(result.get("STR"));	0
4	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals("STR",result.get("STR"));	0
5	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(result.containsKey("STR"));	0
6	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame("STR",result.get("STR"));	0
7	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNull(result.get("STR"));	0
9	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame(3,result.size());	0
10	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(2,result.size());	0
0	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals(4,result.size());	0
1	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(result.containsKey("STR"));	0
2	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(result.containsKey("STR"));	0
3	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotNull(result.get("STR"));	0
4	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertSame(env,result);	0
5	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotEquals(0,result.size());	0
6	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals("STR",result.get("STR"));	0
7	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(result.containsValue("STR"));	0
8	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNull(result.get("STR"));	0
9	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(result.containsKey("STR"));	0
0	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotNull(atts);	0
1	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertFalse(atts.isEmpty());	0
2	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertTrue(atts.size()>0);	0
4	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertEquals(2,atts.size());	1
25	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertTrue(5>2);	0
0	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNull(fields.get("STR"));	0
1	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertEquals(1,fields.size());	0
3	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	0
5	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	0
10	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotEquals(0,fields.size());	0
21	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotEquals("STR",config.get("STR"));	0
23	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertTrue(metadata.size()>0);	0
24	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	0
5	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	assertEquals(FeedParserBolt.class,bolt.getClass());	0
0	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	0
1	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertEquals(3,filtered.size());	0
2	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	0
7	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotEquals(0,filtered.size());	0
10	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.containsAll(filtered));	0
11	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.stream().anyMatch(item->item.getName().equals("STR")));	0
0	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
1	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.lookingAt());	0
2	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	0
3	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertEquals(3,matcher.groupCount());	0
4	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotEquals("STR",matcher.group());	0
7	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertArrayEquals(expectedArray,actualArray);	0
9	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNull(matcher.group());	0
10	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotSame(expectedObject,actualObject);	0
12	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.hitEnd());	0
13	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotEquals(5,matcher.start());	0
0	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	0
1	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertEquals(1,formas.size());	1
3	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	0
6	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	0
8	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(!formas.isEmpty());	0
10	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotSame(locītājs,formas);	0
15	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas.get(0));	0
20	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotSame(formas,locītājs.generateInflections("STR"));	0
21	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertSame(locītājs,locītājs);	0
28	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotEquals(locītājs,formas.size());	0
2	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotNull(moneyToStrEURRUS.convert(1.23));	0
3	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrEURRUS.convert(0.0));	0
5	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertFalse(moneyToStrEURRUS.convert(1.23).isEmpty());	0
6	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotSame("STR",moneyToStrEURRUS.convert(0.20));	0
8	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrEURRUS.convert(0.20));	0
10	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotSame("STR",moneyToStrEURRUS.convert(0.20));	0
0	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals("STR",defaultExtension.toString());	1
2	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotNull(defaultExtension);	0
3	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.acceptProvidedExtensionAsServer("STR"));	0
6	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotEquals(null,defaultExtension.copyInstance());	0
7	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertFalse(defaultExtension.equals(null));	0
8	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.hashCode()>0);	0
10	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotSame(defaultExtension,defaultExtension.copyInstance());	0
12	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertFalse(defaultExtension.toString().isEmpty());	0
0	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertEquals("STR",util.removeSurroundingQuotes("STR"));	0
1	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertTrue(util.removeSurroundingQuotes("STR").equals("STR"));	0
2	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertNotNull(util.removeSurroundingQuotes("STR"));	0
3	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertFalse(util.removeSurroundingQuotes("STR").isEmpty());	0
5	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertEquals("STR",util.removeSurroundingQuotes("STR"));	0
7	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertNull(util.removeSurroundingQuotes(null));	0
8	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertNotEquals(null,util.removeSurroundingQuotes("STR"));	0
2	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	0
3	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotNull(sql.toString());	0
5	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
9	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
10	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").where("STR").toString().contains("STR"));	0
11	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertTrue(sql.select().from("STR").where("STR").toString().endsWith("STR"));	0
12	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotSame("STR",sql.select().from("STR").where("STR").toString().trim());	0
1	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
9	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals(0,sql.toString().length());	0
14	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
2	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertEquals(expecteds.length,MkvBlock.calcEbmlLacingDiffs(_in).length);	0
2	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotNull(moneyToStrUAHENG);	0
3	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertTrue(moneyToStrUAHRUS!=null);	0
8	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotNull(moneyToStrUAH.convert(-500.25));	0
9	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotEquals("STR",moneyToStrUAH.convert(-500.25));	0
0	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertEquals(OMultiValue.getFirstValue(collection),"STR");	1
7	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertTrue(collection.length>0);	0
8	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotNull(collection);	0
9	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertFalse(collection.length==0);	0
13	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotEquals(2,collection.length);	0
0	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertEquals(1,vertices.size());	1
1	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.size()>0);	0
2	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotNull(vertices);	0
3	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertFalse(vertices.isEmpty());	0
4	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertEquals(1,vertices.size());	1
13	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(!vertices.isEmpty()&&vertices.contains(doc));	0
14	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertFalse(vertices.contains(null));	0
3	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertTrue(resultinstanceofList);	0
5	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	0
0	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
2	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(resultinstanceofArrayList);	0
3	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotNull(result);	0
4	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	0
11	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotSame(expectedResult,result);	0
0	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
1	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertEquals(0,result.stream().count());	0
3	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertNotNull(result);	0
4	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertTrue(result.stream().noneMatch(e->e.getProperty("STR").equals("STR")));	0
5	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertNotSame(0,result.stream().count());	0
8	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertTrue(result.stream().allMatch(e->e.getPropertyNames().contains("STR")));	0
0	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	1
8	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertTrue(stream[0]==OBJECT.byteValue());	0
9	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotNull(stream);	0
0	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	1
1	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.contains(docOne));	0
2	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertFalse(ridBag.isEmpty());	0
3	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotEquals(0,ridBag.size());	0
5	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotNull(rootDoc);	0
6	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.size()>=2);	0
7	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotSame(docOne,docTwo);	0
9	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(database.exists());	0
10	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotSame(docOne.getIdentity(),docTwo.getIdentity());	0
13	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(database.getDefaultClusterId()>=0);	0
0	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(idProperty);	0
1	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.isMandatory());	0
4	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(idProperty.isNotNull());	0
5	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals(10,idProperty.getMin());	0
7	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotSame(companyClass,db.getMetadata().getSchema().getClass("STR"));	0
9	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotSame(idProperty,companyClass.getProperty("STR"));	0
0	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertEquals(idProperty.getName(),PROP_ID);	1
2	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(idProperty);	0
4	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(companyClass.properties().contains(idProperty));	0
5	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(idProperty.isMandatory());	0
6	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals(0,companyClass.properties().size());	0
1	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotNull(clazzV);	0
5	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertFalse(clazzV.isAbstract());	0
7	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(0,clazzV.getClusterIds().length);	0
8	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotSame(s,t);	0
10	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(clazzVinstanceofOClass);	0
11	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertFalse(clazzV.isSubClassOf("STR"));	0
14	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(clazzV.getDefaultClusterId()>0);	0
0	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
2	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertEquals(false,doc.isDirty());	0
6	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotNull(doc);	0
8	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotEquals(null,doc);	0
0	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotNull(ret);	1
1	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertEquals(1,manager.getConnections().size());	0
3	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getConnections().contains(ret));	0
8	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotSame(ret,manager.connect(protocol));	0
1	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.equals(anotherCompositeKey));	1
2	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	0
3	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey);	0
5	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(2,compositeKey.getKeys().size());	0
6	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.getKeys().isEmpty());	0
10	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotEquals(3,compositeKey.getKeys().size());	0
12	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.getKeys().containsAll(anotherCompositeKey.getKeys()));	0
5	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertNotNull(request);	0
6	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertEquals(2,params.size());	0
0	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertEquals(result,"STR");	1
1	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotNull(result);	0
3	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertTrue(resultinstanceofString);	0
4	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotEquals("STR",result);	0
7	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertEquals(Logger.Level.WARN,logger.level);	1
10	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertEquals(Logger.Level.INFO,logger.level);	1
0	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertEquals(true,comparison!=0);	0
1	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotEquals(0,comparison);	1
2	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(comparison<0);	0
4	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(comparison>0);	0
5	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotNull(macAddress);	0
7	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(macAddress.isMulticast());	0
8	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(macAddress.isLocal());	0
0	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.isLocal());	0
1	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertEquals(MULTICAST_ADDRESS,macAddress.toString());	0
2	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.isMulticast());	0
3	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotNull(macAddress.getBytes());	0
6	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotEquals("STR",macAddress.toString());	0
9	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.equals(macAddress));	0
0	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotNull(parser);	0
11	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertFalse(sample1.isEmpty());	0
12	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotEquals(0,sample1.length());	0
14	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotSame(sample1,parser.parse(sample1,true,Locale.US));	0
0	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	0
1	AboutTest	testGetExtensions	assertNotNull(actual);	assertTrue(actual.equals(expected));	0
2	AboutTest	testGetExtensions	assertNotNull(actual);	assertNotNull(actual);	1
3	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	0
0	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotNull(statementRef);	1
2	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotNull(statementRef.getId());	0
6	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotSame(null,statementRef.getId());	0
9	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertFalse(statementRef.getId().isEmpty());	0
13	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotSame(statementRef,statementRef.getId());	0
0	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	0
1	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
2	GroupTest	testSetMember	assertNotNull(actual);	assertNotNull(actual);	1
4	GroupTest	testSetMember	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
5	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.size()>0);	0
7	GroupTest	testSetMember	assertNotNull(actual);	assertSame(expected,actual);	0
10	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.contains(expected.get(0)));	0
11	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
14	GroupTest	testSetMember	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
0	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	0
2	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertNotNull(actual);	0
4	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertFalse(actual.isEmpty());	0
5	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertSame(expected,actual);	0
6	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertSame(expected,actual);	0
10	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.startsWith(expected));	0
0	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
2	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertNotNull(actual);	1
4	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(expected.size()==actual.size()&&expected.containsAll(actual));	0
5	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertSame(expected,actual);	0
6	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
7	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
8	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertSame(expected,actual);	0
10	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(expected.containsAll(actual));	0
0	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	0
3	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(null,normalizedUrl);	0
4	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
6	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
7	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testSourceUrl,normalizedUrl);	0
9	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
0	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
2	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	0
6	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
10	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
12	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
13	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
0	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(codeListDocument);	0
1	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(codeListDocumentinstanceofCodeListDocument);	0
2	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedValue,actualValue);	0
3	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(expectedValue,actualValue);	0
4	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	0
5	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(condition);	0
6	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNull(object);	0
7	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertArrayEquals(expectedArray,actualArray);	0
8	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(expectedObject,actualObject);	0
9	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertSame(expectedObject,actualObject);	0
0	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotNull(frame);	0
3	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertEquals(Opcode.CLOSING,frame.getOpcode());	0
0	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertEquals("STR",protocol0.getProvidedProtocol());	1
1	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(protocol0.getProvidedProtocol().isEmpty());	0
2	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("STR",protocol0.getProvidedProtocol());	0
3	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.getProvidedProtocol());	0
5	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertFalse(protocol0.getProvidedProtocol().startsWith("STR"));	0
8	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotSame("STR",protocol0.getProvidedProtocol());	0
10	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.getProvidedProtocol());	0
11	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("STR",protocol0.getProvidedProtocol());	0
0	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNull(contentEncoding);	1
3	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertTrue(response.getEntity().getContentLength()>0);	0
4	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNotNull(response.getEntity());	0
6	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertTrue(response.getEntity().isStreaming());	0
7	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNotEquals("STR",response.getEntity().getContentType().getValue());	0
8	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertFalse(response.getEntity().isChunked());	0
9	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNotSame(testServer,null);	0
3	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertEquals(3,result.size());	1
5	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertFalse(result.isEmpty());	0
6	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotNull(result);	0
7	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotEquals("STR",jco.getTarget());	0
9	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotSame("STR",jco.getRelease());	0
10	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNull(jco.getTarget());	0
13	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertFalse(jco.isShowWarnings());	0
0	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertNotNull(server);	0
14	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertNotNull("STR");	0
1	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertEquals(tempTextFile,configFile);	0
2	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	0
3	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(serverDirectory.exists());	0
13	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(configFile.exists());	1
0	OPLogTest	testDescription	assertEquals("STR",value);	assertEquals("STR",value);	1
1	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	0
7	OPLogTest	testDescription	assertEquals("STR",value);	assertFalse(value==null);	0
1	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertEquals(21,obj.getAge());	1
4	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertTrue(obj.getAge()>=18);	0
0	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotEquals(client1,client2);	0
1	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotNull(client1);	0
3	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertTrue(client1!=null&&client2!=null);	0
4	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	0
8	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertFalse(client1.equals(client2));	0
10	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertSame(client1.getClass(),client2.getClass());	0
11	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertFalse(client1==client2);	0
12	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1.hashCode(),client2.hashCode());	0
13	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotEquals(client1.toString(),client2.toString());	0
0	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertEquals("STR",btUrl.getIp());	1
1	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(btUrl.getConnectTimeout()==2000);	0
2	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotNull(btUrl);	0
4	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotEquals("STR",btUrl.getIp());	0
5	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(btUrl.getPort()>0);	0
7	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(btUrl.getProperties().isEmpty());	0
9	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotSame("STR",btUrl.getIp());	0
0	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	1
1	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertEquals(RpcRequestProcessor.class,processorManager.getProcessor(cmd1).getClass());	0
2	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertEquals(cmd1,cmd2);	0
4	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(processorManager.getProcessor(cmd1));	0
8	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertTrue(cmd1==cmd2||cmd1.equals(cmd2));	0
11	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotSame(rpcRequestProcessor1,rpcRequestProcessor2);	0
13	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(cmd1);	0
0	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotEquals(ResponseStatus.BAD_OTP,response.getStatus());	0
1	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertTrue(response.getStatus()!=ResponseStatus.BAD_OTP);	0
3	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotNull(response.getH());	0
4	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotSame(ResponseStatus.REPLAYED_OTP,response.getStatus());	0
7	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotSame(response.getH(),"STR");	0
8	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertTrue(response.getStatus()!=ResponseStatus.REPLAYED_OTP);	0
6	YubicoClientTest	testBadOTP	assertNotNull(response);	assertTrue(response.getKeyValueMap().size()>0);	0
0	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
4	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertNotNull(actual);	1
14	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
0	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(actual,actual);	0
1	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(actual);	1
10	ScoreTest	testSerialize	assertNotNull(actual);	assertFalse(actual.toString().isEmpty());	0
12	ScoreTest	testSerialize	assertNotNull(actual);	assertSame(actual,actual);	0
0	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	0
2	VerbTest	testSetDisplay	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
7	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
9	VerbTest	testSetDisplay	assertNotNull(actual);	assertSame(expected,actual);	0
10	VerbTest	testSetDisplay	assertNotNull(actual);	assertNull(actual.get("STR"));	0
0	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
1	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual.contains(expected));	0
2	StatementTest	testGetId	assertNotNull(actual);	assertNotNull(actual);	1
5	StatementTest	testGetId	assertNotNull(actual);	assertSame(expected,actual);	0
6	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	0
7	StatementTest	testGetId	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
10	StatementTest	testGetId	assertNotNull(actual);	assertSame(expected,actual);	0
1	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertFalse(frame.isFin());	0
2	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertEquals(Opcode.BINARY,frame.getOpcode());	0
3	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotNull(frame.getPayloadData());	0
5	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotSame(frame,FramedataImpl1.get(Opcode.TEXT));	0
6	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotEquals(Opcode.PING,frame.getOpcode());	0
10	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertSame(Opcode.BINARY,frame.getOpcode());	0
1	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	1
2	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertTrue(qResult.size()>0);	0
3	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
4	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotEquals(0,qResult.size());	0
5	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertFalse(qResult.isEmpty());	0
6	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotSame(0,qResult.size());	0
10	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotEquals(2,qResult.size());	0
11	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertFalse(qResult.contains(null));	0
14	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotEquals(3,qResult.size());	0
1	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertEquals(3,names.size());	0
2	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertTrue(names.contains("STR"));	1
3	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.isEmpty());	0
4	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotNull(names);	0
5	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotEquals(0,names.size());	0
8	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotSame(0,names.size());	0
9	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertTrue(names.size()>0);	0
10	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertEquals(3,names.stream().distinct().count());	0
14	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.contains("STR"));	0
3	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertEquals(ddl,"STR");	1
7	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotNull(ddl);	0
8	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotEquals("STR",ddl);	0
9	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotSame(null,ddl);	0
12	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertFalse(ddl.isEmpty());	0
0	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertEquals(v,OBJECT);	1
3	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotNull(v);	0
4	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotEquals(0,stream.length);	0
11	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertTrue(stream.length>0);	0
13	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotSame(OBJECT,v);	0
0	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
2	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
5	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
0	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertNotNull(r);	0
0	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertEquals(0,index.getRebuildVersion());	0
1	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertTrue(index.getSize()>0);	0
2	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotNull(index.getDefinition());	0
3	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertFalse(index.isAutomatic());	0
4	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotEquals(0,index.getSize());	0
5	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertEquals(index.getSize(),4);	1
6	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotSame(null,index);	0
7	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertTrue(index.getRebuildVersion()>=0);	0
8	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertFalse(index.isUnique());	0
10	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotEquals("STR",index.getAlgorithm());	0
2	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	0
6	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	0
7	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals(4,env.size());	0
9	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.containsKey("STR"));	0
10	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNull(env.get("STR"));	0
0	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotNull(env);	0
1	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertEquals(0,env.size());	0
3	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertTrue(env.isEmpty());	0
4	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertFalse(env.containsKey("STR"));	0
7	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotSame("STR",env.get("STR"));	0
9	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertEquals(0,env.keySet().size());	0
10	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotEquals(5,env.size());	0
14	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertSame(HashMap.class,env.getClass());	0
1	YamlConfigLoaderTest	merges	assertEquals(yaml,config.toYaml("STR"));	assertEquals(yaml,config.toYaml("STR"));	1
0	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertNotNull(factory);	0
2	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertTrue(factoryinstanceofRavenAppenderFactory);	0
3	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertSame(RavenAppenderFactory.class,factory.getClass());	0
4	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertNull(factory.getDsn());	1
0	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(key1,key2);	1
1	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotSame(key1,key2);	0
2	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(key1.equals(key2));	0
4	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotNull(map);	0
6	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(map.isEmpty());	0
7	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(mapinstanceofAMap);	0
0	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(allMatch);	0
1	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertEquals(expected,actual);	0
2	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotNull(object);	0
3	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertFalse(condition);	0
4	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotEquals(expected,actual);	0
5	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertArrayEquals(expectedArray,actualArray);	0
6	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNull(object);	0
7	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotSame(expected,actual);	0
13	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertSame(expected,actual);	0
0	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertEquals(a,b);	1
1	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.equals(b));	0
2	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotSame(a,b);	0
3	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotNull(a);	0
0	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
2	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	0
3	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertEquals(7,matcher.regionEnd());	0
5	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.find());	0
7	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertFalse(matcher.matches());	0
8	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertSame(pattern,matcher.pattern());	0
11	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertFalse(matcher.regionStart()>matcher.regionEnd());	0
14	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotEquals("STR",matcher.pattern().pattern());	0
0	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(jāmāk.isRecognized());	1
5	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	0
6	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertFalse(jāmāk.wordforms.isEmpty());	0
9	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertEquals(2,jāmāk.wordforms.size());	0
10	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotEquals(0,jāmāk.wordforms.size());	0
13	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	0
0	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
5	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertEquals(2,w.wordforms.size());	0
6	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotNull(w.wordforms.get(0));	0
7	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	0
8	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotEquals(0,w.wordforms.size());	0
9	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertEquals(Word.class,w.getClass());	0
10	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.getToken().contains("STR"));	0
11	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotSame(null,w);	0
12	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.toString().startsWith("STR"));	0
13	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertEquals("STR",w.toString());	0
0	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	0
2	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	0
3	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(preparer.getParameterReplacer());	0
8	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertFalse(mockLog.isDebugEnabled());	0
2	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotNull(mockJmxServiceUrl.toString());	0
5	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse(mockJmxServiceUrl.toString().isEmpty());	0
7	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotSame("STR",mockJmxServiceUrl.toString());	0
0	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	0
1	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertTrue(method.isAnnotationPresent(Prepare.class));	0
2	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertEquals(void.class,method.getReturnType());	0
4	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotEquals(null,method);	0
6	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertSame(AnnotationTestClass.class,method.getDeclaringClass());	0
7	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertTrue(AnnotationTestClass.class.isAssignableFrom(method.getDeclaringClass()));	0
8	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertFalse(method.isSynthetic());	0
9	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotSame(Prepare.class,method.getAnnotation(Prepare.class));	0
10	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertTrue(method.getParameterCount()<=0);	0
12	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertFalse(method.isDefault());	0
1	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertEquals(7,words.size());	0
4	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotEquals(0,words.size());	0
6	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertTrue(words.size()>0);	0
7	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertFalse(words.isEmpty());	0
9	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotSame("STR",words.get(2));	0
11	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertFalse(words.contains("STR"));	0
13	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotNull(words);	0
1	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertEquals(4,testServer.cookiesToSend.size());	0
2	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertFalse(testServer.cookiesToSend.isEmpty());	0
3	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertNotNull(responseHandler);	0
4	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertNotEquals("STR",httpget.getURI().toString());	0
0	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNotNull(properties);	0
1	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertEquals(5,properties.size());	1
4	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.isEmpty());	0
5	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNotEquals("STR",properties.getProperty("STR"));	0
7	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNull(properties.getProperty("STR"));	0
9	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertTrue(properties!=null&&!properties.isEmpty());	0
10	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertEquals(5,properties.stringPropertyNames().size());	0
0	CEFParserTest	invalidMessageValidationTest	assertNull(event);	assertNull(event);	1
5	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertFalse(node.getPath().substring(4).equals("STR"));	0
8	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotNull(node.getPath());	0
0	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertEquals("STR",execs.getAppName());	1
1	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotEquals("STR",execs.getAppName());	0
3	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotNull(execs.getAppName());	0
4	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotSame("STR",execs.getAppName());	0
5	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertFalse(execs.getAppName().isEmpty());	0
6	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotEquals("STR",execs.getAppName());	0
8	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertEquals(5,execs.getAppName().length());	0
9	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotSame("STR",execs.getAppName());	0