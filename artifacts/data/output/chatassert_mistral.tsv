OracleID	ClassName	TestName	TrueOracle	GenOracle	Correct
0	adlnet/jxapi ActivityProfileTest	testGetActivityId	assertNotNull(actual);	assertNotNull(activityProfile);	0
0	trung/InMemoryJavaCompiler InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(helloClass);	0
/	// InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	0
0	amlinv/stat-collection-utils JmxAttributePollerTest	testGetSetScheduler	assertNull(this.poller.getScheduler());	assertNotNull(this.poller.getObjectQueryPreparer());	0
0	// LoaderTest	fileNok	"assertEquals(""STR"",resource.getProtocol());"	assertEquals(null,resource);	0
/	// LoaderTest	fileNok	"assertEquals(""STR"",resource.getProtocol());"	assertTrue(resource==null);	0
/	// LoaderTest	fileNok	"assertEquals(""STR"",resource.getProtocol());"	"assertTrue(Thread.currentThread().getContextClassLoader().getResource(""STR"")!=null);"	0
0	// MacAddressTest	testAddressUnderscoreSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isLocal());	0
1	// MacAddressTest	testAddressCompareToEqual	assertEquals(0,comparison);	assertNotNull(macAddress);	0
0	// MorphologyTest	tuStum	assertTrue(stum.isRecognized());	assertFalse(stum.getBestWordform()==null);	0
0	// SimulatorPropertiesTest	testLoad_justKey	"assertTrue(simulatorProperties.get(""STR"").isEmpty());"	"assertNotNull(simulatorProperties.get(""STR""));"	0
0	// MapUtilTest	testMergeIfAbsent	assertEquals(expected,origMap);	assertTrue(origMap.keySet().containsAll(expected.keySet()));	0
/	// MapUtilTest	testMergeIfAbsent	assertEquals(expected,origMap);	"assertFalse(origMap.containsKey(""STR""));"	0
/	// MapUtilTest	testMergeIfAbsent	assertEquals(expected,origMap);	"assertFalse(origMap.containsValue(""STR""));"	0
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java StringUtilsTest	testNullIsEmpty	assertTrue(StringUtils.isEmpty(null));	assertFalse(StringUtils.isNonZero(null));	0
1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleTest	sum_of_cell_distances_is_distance_to_goal	assertEquals(4,p.getDistanceToGoal());	assertFalse(p.isSolved());	0
0	// RecordsTest	tagRec	"assertEquals(""STR"",Records.rec(""STR"",""STR""));"	"assertEquals(""STR"",Records.rec(""STR"",""STR""));"	1
0	// RecordsTest	tagRec	"assertEquals(""STR"",Records.rec(""STR"",""STR""));"	"assertTrue(Records.rec(""STR"",""STR"").contains(""STR""));"	0
/	// RecordsTest	tagRec	"assertEquals(""STR"",Records.rec(""STR"",""STR""));"	"assertFalse(Records.rec(""STR"",""STR"").contains(""STR""));"	0
/	// RecordsTest	tagRec	"assertEquals(""STR"",Records.rec(""STR"",""STR""));"	"assertNotNull(Records.rec(""STR"",""STR""));"	0
1	// EnvironmentTest	testSetupWithIncompleteJob	"assertEquals(""STR"",mojo.serviceName);"	assertNotNull(mojo.getLog());	0
/	// EnvironmentTest	testSetupWithIncompleteJob	"assertEquals(""STR"",mojo.serviceName);"	assertNotNull(Arrays.asList(serviceMock));	0
0	// ReconnectManagerTest	testReconnectionByUserSetting	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertTrue(connection.isFine());	0
0	// ReconnectManagerTest	testReconnectionByUserSetting	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	1
/	// ReconnectManagerTest	testReconnectionByUserSetting	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertNotNull(connection);	0
/	// ReconnectManagerTest	testReconnectionByUserSetting	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertEquals(true,connection.isFine());	0
/	// ReconnectManagerTest	testReconnectionByUserSetting	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertTrue(connection!=null);	0
0	// OClientConnectionTest	testValidToken	assertTrue(conn.getTokenBased());	assertEquals(true,conn.getTokenBased());	0
/	// OClientConnectionTest	testValidToken	assertTrue(conn.getTokenBased());	assertEquals(tokenBased,true);	0
/	// OClientConnectionTest	testValidToken	assertTrue(conn.getTokenBased());	assertTrue(conn.getToken()!=null);	0
1	orientechnologies/orientdb OPropertyMapIndexDefinitionTest	testProcessChangeEventAddKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToAdd,addedKeys);	1
1	// OPropertyMapIndexDefinitionTest	testProcessChangeEventAddKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(removedKeys,keysToRemove);	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventAddKeyWithConversion	assertEquals(keysToAdd,addedKeys);	"assertEquals(expectedValues,newHashMap<Object,Object>()->{
});"	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventAddKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToRemove,removedKeys);	0
2	// OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(OType.STRING==result[0]);	0
/	// OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotNull(result);	0
3	// RemoteQuerySupportTest	testQueryEmbedded	"assertNotNull(item.getProperty(""STR""));"	"assertNotNull(item.getProperty(""STR""));"	1
3	// RemoteQuerySupportTest	testQueryEmbedded	"assertNotNull(item.getProperty(""STR""));"	assertNotNull(item);	0
4	// OUTFSerializerTest	testSerializeWALChanges	assertEquals(stringSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),stringSerializer.getObjectSize(OBJECT));	assertEquals(stringSerializer.getObjectSize(OBJECT)+serializationOffset,walChanges.toStream(serializationOffset,newbyte[stringSerializer.getObjectSize(OBJECT)+serializationOffset]));	0
/	// OUTFSerializerTest	testSerializeWALChanges	assertEquals(stringSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),stringSerializer.getObjectSize(OBJECT));	assertTrue(walChanges.serializedSize()==stringSerializer.getObjectSize(OBJECT)+serializationOffset);	0
/	// OUTFSerializerTest	testSerializeWALChanges	assertEquals(stringSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),stringSerializer.getObjectSize(OBJECT));	assertArrayEquals(data,walChanges.getBinaryValue(buffer,serializationOffset,data.length));	0
/	// OUTFSerializerTest	testSerializeWALChanges	assertEquals(stringSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),stringSerializer.getObjectSize(OBJECT));	assertEquals(serializedSize,walChanges.serializedSize());	0
5	// CollectionOfLinkInNestedDocumentTest	nestedLinkSet	assertNotNull(nest1);	assertNotNull(nest1);	1
5	// CollectionOfLinkInNestedDocumentTest	nestedLinkSet	assertNotNull(nest1);	"assertEquals(2,((ORecordLazySet)nest1.field(""STR"")).size());"	0
/	// CollectionOfLinkInNestedDocumentTest	nestedLinkSet	assertNotNull(nest1);	assertEquals(set.size(),2);	0
/	// CollectionOfLinkInNestedDocumentTest	nestedLinkSet	assertNotNull(nest1);	"assertNotNull(nest1.field(""STR""));"	0
/	// SQLMoveVertexCommandTest	testMoveSingleRecordToAnotherClass	assertEquals(doc.getIdentity().getClusterId(),customer.getDefaultClusterId());	assertSame(customer.getDefaultClusterId(),doc.getIdentity().getClusterId());	0
/	// SQLMoveVertexCommandTest	testMoveSingleRecordToAnotherClass	assertEquals(doc.getIdentity().getClusterId(),customer.getDefaultClusterId());	assertTrue(doc.getIdentity().getClusterId()==customer.getDefaultClusterId());	0
/	// SQLMoveVertexCommandTest	testMoveSingleRecordToAnotherClass	assertEquals(doc.getIdentity().getClusterId(),customer.getDefaultClusterId());	assertFalse(doc.getIdentity().getClusterId()!=customer.getDefaultClusterId());	0
/	// SQLMoveVertexCommandTest	testMoveSingleRecordToAnotherClass	assertEquals(doc.getIdentity().getClusterId(),customer.getDefaultClusterId());	assertNotNull(doc.getIdentity());	0
0	// UuidUtilTest	testNewUnsecureUuidString	assertNotNull(uuid);	"assertTrue(uuid!=null&&uuid.length()>0&&uuid.length()==36&&uuid.matches(""STR""));"	0
0	// UuidUtilTest	testNewUnsecureUuidString	assertNotNull(uuid);	assertNotNull(uuid);	1
0	// MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotNull(atts);	0
/	// MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	"assertNotNull(atts)`:

1.`assertEquals(atts.size(),3);"	0
1	amlinv/stat-collection-utils BatchPollProcessorTest	testGetSetLog	assertNotNull(this.processor.getLog());	assertNotNull(this.processor.getLog());	1
0	adlnet/jxapi SubStatementTest	testSetAttachments	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// SubStatementTest	testSetAttachments	assertNotNull(actual);	assertTrue(actual.equals(expected));	0
/	// SubStatementTest	testSetAttachments	assertNotNull(actual);	assertEquals(expected,substatement.getAttachments());	0
1	adlnet/jxapi VerbsTest	testTerminated	assertNotNull(actual);	assertNotNull(actual);	1
1	// VerbsTest	testTerminated	assertNotNull(actual);	assertNotNull(Verbs.terminated());	0
2	adlnet/jxapi ResultTest	testSetResponse	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// ResultTest	testSetResponse	assertNotNull(actual);	assertTrue(result.getResponse().contains(expected));	0
/	// ResultTest	testSetResponse	assertNotNull(actual);	assertNotNull(result.getResponse());	0
0	// H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	???;	0
/	// H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(AvcCBox.parseAvcCBox(ByteBuffer.wrap(res)).getSpsList().get(0).hasRemaining());	0
0	// TimestampParserTest	testParseEpochMillis	assertEquals(time,parsed.getTime());	assertTrue(parsed.getTime()==time);	0
/	// TimestampParserTest	testParseEpochMillis	assertEquals(time,parsed.getTime());	assertNotNull(parsed);	0
1	// ShippableTest	testPullRequest	"assertEquals(""STR"",newShippable(env()).getPullRequest());"	assertNull(newMyClass().getPullRequest());	0
2	trautonen/coveralls-maven-plugin UrlUtilsTest	testValidUrlToUri	"assertEquals(newURI(""STR""),uri);"	"assertNotSame(""STR"",uri.toString());"	0
/	// UrlUtilsTest	testValidUrlToUri	"assertEquals(newURI(""STR""),uri);"	assertTrue(uri!=null);	0
/	// UrlUtilsTest	testValidUrlToUri	"assertEquals(newURI(""STR""),uri);"	assertNotNull(uri);	0
0	// ReconnectManagerTest	testCancelReConnection	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	1
0	// ReconnectManagerTest	testCancelReConnection	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertTrue(url.getProtocol()==RpcProtocolV2.PROTOCOL_VALUE);	0
1	// ThreadLocalArriveTimeHolderTest	testMultiThread	assertTrue(time>=start);	assertTrue(time>0);	0
/	// ThreadLocalArriveTimeHolderTest	testMultiThread	assertTrue(time>=start);	assertNotNull(countDownLatch.await(10,TimeUnit.SECONDS));	0
0	// HostURLFilterTest	testAllAllowed	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",filterResult);"	1
0	// HostURLFilterTest	testAllAllowed	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",allAllowed.filter(sourceURL,metadata,""STR""));"	0
/	// HostURLFilterTest	testAllAllowed	"assertEquals(""STR"",filterResult);"	assertNotNull(filterResult);	0
1	// HostURLFilterTest	testAllForbidden	"assertEquals(""STR"",filterResult);"	"assertNotNull(filterResult,""STR"");"	0
/	// HostURLFilterTest	testAllForbidden	"assertEquals(""STR"",filterResult);"	assertNotNull(filterResult);	0
1	// HostURLFilterTest	testAllForbidden	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",filterResult);"	1
1	// SvgSizeAnalyzerTest	svgWithChanges	"assertEquals(""STR""+""STR""+""STR"",a.getSvg());"	assertNotNull(a.getTransform());	0
0	// DefaultValueTest	testDefaultValueFromJson	"assertNotNull(saved.field(""STR""));"	"assertNotNull(saved.field(""STR""));"	1
0	// DefaultValueTest	testDefaultValueFromJson	"assertNotNull(saved.field(""STR""));"	"assertTrue(doc.field(""STR"").toString().contains(prop.getDefaultValue().toString()));"	0
/	// DefaultValueTest	testDefaultValueFromJson	"assertNotNull(saved.field(""STR""));"	"assertEquals(ODateHelper.getDateTimeFormatInstance().parse(prop.getDefaultValue()),doc.field(""STR""));"	0
/	// DefaultValueTest	testDefaultValueFromJson	"assertNotNull(saved.field(""STR""));"	assertNotNull(saved);	0
/	// DefaultValueTest	testDefaultValueFromJson	"assertNotNull(saved.field(""STR""));"	"assertEquals(prop.getDefaultValue(),newSimpleDateFormat(""STR"").parse(saved.field(iFieldName).toString()));"	0
/	// DefaultValueTest	testDefaultValueFromJson	"assertNotNull(saved.field(""STR""));"	"assertEquals(ODateHelper.getDateTimeFormatInstance().format(newDate()),doc.field(""STR"").toString());"	0
1	orientechnologies/orientdb SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	"assertEquals(""STR"",retrievedChild.getName());"	0
/	// SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	"assertEquals(retrievedChild.getName(),""STR"");"	0
/	// SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	"assertTrue(retrievedChild.getName().equals(""STR""));"	0
/	// SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	assertNotNull(retrievedChild.getName());	0
2	// OScriptExecutionTest	testLazyExecutionPlanning	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertTrue(item.getAsString().equals(""STR""));"	0
3	orientechnologies/orientdb OAlterPropertyStatementExecutionTest	testSetCustom	assertNotNull(result);	assertNotNull(result);	1
4	orientechnologies/orientdb ORecordSerializerBinaryTest	testGetFieldFromEmbeddedList	assertEquals(setValue,deserializedValue);	assertSame(setValue,deserializedValue);	0
4	// ORecordSerializerBinaryTest	testGetFieldFromEmbeddedList	assertEquals(setValue,deserializedValue);	assertEquals(setValue,deserializedValue);	1
/	// ORecordSerializerBinaryTest	testGetFieldFromEmbeddedList	assertEquals(setValue,deserializedValue);	assertEquals(19,deserializedValue);	0
5	orientechnologies/orientdb LuceneMixIndexTest	testMixCompositeQuery	assertEquals(1,docs.size());	assertEquals(1,docs.size());	1
5	// LuceneMixIndexTest	testMixCompositeQuery	assertEquals(1,docs.size());	"assertNotNull(docs.get(0).field(""STR""));"	0
0	fabric8io/fabric8-maven-plugin SpringBootUtilTest	testNonExistentYamlToPropertiesParsing	assertNotNull(props);	assertNotNull(props);	1
0	amlinv/stat-collection-utils JmxAttributePollerTest	testGetSetBatchPollProcessor	assertNotNull(this.poller.getBatchPollProcessor());	assertNotNull(poller.getBatchPollProcessor());	0
/	// JmxAttributePollerTest	testGetSetBatchPollProcessor	assertNotNull(this.poller.getBatchPollProcessor());	assertNotNull(poller.getBatchPollProcessor());	0
0	// RpcAddressParserTest	testParserWithProtocol	"assertEquals(""STR"",btUrl.getIp());"	assertEquals(1000,btUrl.getConnectTimeout());	0
/	// RpcAddressParserTest	testParserWithProtocol	"assertEquals(""STR"",btUrl.getIp());"	assertNotNull(btUrl.getProperties());	0
/	// RpcAddressParserTest	testParserWithProtocol	"assertEquals(""STR"",btUrl.getIp());"	assertNotNull(btUrl.getProtocol());	0
0	adlnet/jxapi SubStatementTest	testSetVerb	assertNotNull(actual);	assertNotNull(actual);	1
0	// SubStatementTest	testSetVerb	assertNotNull(actual);	assertNotNull(substatement.getVerb());	0
1	adlnet/jxapi ActivityDefinitionTest	testGetCorrectResponsesPattern	assertNotNull(actual);	assertNotNull(activityDefinition);	0
0	// TSqlBuilderTest	testSort	"assertEquals(""STR"",sql.toString());"	"assertEquals(""STR"",sql.toString());"	1
/	// TSqlBuilderTest	testSort	"assertEquals(""STR"",sql.toString());"	"assertEquals(""STR"",sql.toString());"	1
/	// TSqlBuilderTest	testSort	"assertEquals(""STR"",sql.toString());"	"assertTrue(sql.select().from(""STR"").orderBy(""STR"").toString().contains(""STR""));"	0
/	// TSqlBuilderTest	testSort	"assertEquals(""STR"",sql.toString());"	"assertTrue(sql.select().from(""STR"").orderBy(""STR"").toString().contains(""STR""));"	0
/	// TSqlBuilderTest	testSort	"assertEquals(""STR"",sql.toString());"	"assertNotNull(sql.select().from(""STR"").orderBy(""STR"").toString());"	0
0	arnohaase/a-foundation AsCollectionCopyTest	testAsCollectionCopy	assertEquals(2,copied.size());	assertEquals(list.size(),copied.size());	0
/	// AsCollectionCopyTest	testAsCollectionCopy	assertEquals(2,copied.size());	assertTrue(copied.nonEmpty());	0
/	// AsCollectionCopyTest	testAsCollectionCopy	assertEquals(2,copied.size());	assertTrue(copied.toSet().size()==2);	0
0	// MacAddressTest	testAddressNormalizedSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isMulticast());	0
/	// MacAddressTest	testAddressNormalizedSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isLocal());	0
0	javadev/moneytostr-russian MoneyToStrTest	checkUAHRUS	"assertEquals(""STR"",moneyToStrUAHRUS.convert(V_300D));"	"assertEquals(""STR"",moneyToStrUAHRUS.convert(V_300D));"	1
/	// MoneyToStrTest	checkUAHRUS	"assertEquals(""STR"",moneyToStrUAHRUS.convert(V_300D));"	"assertFalse(moneyToStrUAHRUS.convert(V_300D).matches(""STR""));"	0
/	// MoneyToStrTest	checkUAHRUS	"assertEquals(""STR"",moneyToStrUAHRUS.convert(V_300D));"	assertNotNull(moneyToStrUAHRUS.convert(V_300D));	0
1	// MoneyToStrTest	checkUSDUKR	"assertEquals(""STR"",moneyToStrUSD.convert(V_300D));"	"assertEquals(""STR"",moneyToStrUSD.convert(V_300D));"	1
0	// MPEGESTest	testES	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertNotNull(f1);	0
/	// MPEGESTest	testES	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertArrayEquals(frame1,f1.getData().array());	0
/	// MPEGESTest	testES	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertEquals(1,f1.frameNo);	0
0	// ProtocolTest	testToString	"assertEquals(""STR"",protocol0.getProvidedProtocol());"	"assertTrue(protocol0.acceptProvidedProtocol(""STR""));"	0
/	// ProtocolTest	testToString	"assertEquals(""STR"",protocol0.getProvidedProtocol());"	assertNotNull(protocol0);	0
/	// WebSocketServerTest	testGetDrafts	assertEquals(1,server.getDraft().size());	assertEquals(1,draftCollection.size());	0
/	// WebSocketServerTest	testGetDrafts	assertEquals(1,server.getDraft().size());	assertTrue(draftCollection.size()==1);	0
/	// WebSocketServerTest	testGetDrafts	assertEquals(1,server.getDraft().size());	assertEquals(Collections.singletonList(newDraft_6455()),server.getWebSocketDrafts());	0
0	// OCommandExecutorSQLSelectTest	testFlattenOnEmbedded	assertEquals(qResult.size(),1);	assertTrue(qResult.size()==1);	0
/	// OCommandExecutorSQLSelectTest	testFlattenOnEmbedded	assertEquals(qResult.size(),1);	assertTrue(qResult.size()>0);	0
/	// OCommandExecutorSQLSelectTest	testFlattenOnEmbedded	assertEquals(qResult.size(),1);	assertTrue(qResult.contains(expectedDocument));	0
/	// OCommandExecutorSQLSelectTest	testFlattenOnEmbedded	assertEquals(qResult.size(),1);	assertNotNull(qResult.get(0));	0
1	// OPropertyMapIndexDefinitionTest	testCreateValueByValueTwoParametersArrayParams	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
2	// OPropertyMapIndexDefinitionTest	testCreateSingleValueByValue	assertEquals(result,12);	assertNotNull(result);	0
3	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertArrayEquals(huntUglyPicture,loadedHunt.getImageData());	0
/	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertEquals(huntUglyPicture,loadedHunt.getImageData());	0
4	// ODropSequenceStatementExecutionTest	testPlain	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	1
5	orientechnologies/orientdb OCompositeKeyTest	testCompareToLT	assertEquals(compositeKey.compareTo(anotherCompositeKey),-1);	assertFalse(compositeKey.equals(anotherCompositeKey));	0
6	// LuceneSpatialMiscFunctionsTest	testStContainsPoint	"assertEquals(true,next.field(""STR""));"	"assertTrue(next.field(""STR"").equals(true));"	0
/	// LuceneSpatialMiscFunctionsTest	testStContainsPoint	"assertEquals(true,next.field(""STR""));"	"assertNotNull(next.field(""STR""));"	0
7	// LuceneSpatialTxPointTest	testIndexingComplexUpdateTxPoint	assertEquals(3,index.getSize());	assertNotNull(index);	0
8	orientechnologies/orientdb OCompositeIndexDefinitionTest	testIndexReload	assertEquals(result,compositeIndex);	assertEquals(result,compositeIndex);	1
8	// OCompositeIndexDefinitionTest	testIndexReload	assertEquals(result,compositeIndex);	assertEquals(compositeIndex.getClassName(),result.getClassName());	0
/	// OCompositeIndexDefinitionTest	testIndexReload	assertEquals(result,compositeIndex);	assertEquals(compositeIndex.getFields(),result.getFields());	0
/	// OCompositeIndexDefinitionTest	testIndexReload	assertEquals(result,compositeIndex);	assertTrue(Arrays.equals(compositeIndex.getFields().toArray(),result.getFields().toArray()));	0
0	// TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	assertEquals(text.toString(),focal.toString());	0
/	// TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	"assertTrue(focal.text.matches(""STR""));"	0
/	// TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	assertNotNull(focal);	0
/	// TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	assertNotNull(focal.text);	0
0	// RpcConnectionManagerTest	testRemoveConnWithSpecifiedPoolkey	assertEquals(2,cm.count(poolKey));	assertNotNull(cm.get(poolKey));	0
/	// RpcConnectionManagerTest	testRemoveConnWithSpecifiedPoolkey	assertEquals(2,cm.count(poolKey));	assertNotNull(cm.getAll(poolKey));	0
/	// RpcConnectionManagerTest	testRemoveConnWithSpecifiedPoolkey	assertEquals(2,cm.count(poolKey));	assertNotNull(cm.getAll(poolKey).size()>0);	0
0	// WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertNotNull(file);	1
0	// WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	"assertNotNull(file)`,Iwillsuggestanewuniqueassertion:
-`assertTrue(file.exists());"	0
/	// WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	"assertNotNull(file)`againbecauseyouhavealreadygeneratedit.
Similarly,AVOIDgeneratingtheassertion`assertTrue(file.exists());"	0
/	// WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	"assertNotNull(file)`againbecauseyouhavealreadygeneratedit.

Similarly,AVOIDgeneratingtheassertion`assertTrue(file.exists());"	0
0	adlnet/jxapi ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertNotNull(activityDefinition);	0
0	// ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertNotNull(actual);	1
/	// ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertNotNull(activityDefinition.getType());	0
1	adlnet/jxapi VerbsTest	testCompleted	assertNotNull(actual);	assertNotNull(actual);	1
1	// VerbsTest	testCompleted	assertNotNull(actual);	"assertNotNull(actual)`becauseweneedtoensurethatthe`Verb`objectreturnedbythe`completed`methodisnotnull.Ifyouwouldliketotestthevaluesofthe`id`and`display`properties,youcanusemorespecificassertions,suchas:

assertEquals(""completed"",actual.getId());"	0
0	// IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	0
/	// IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas.get(0).getTargetNamespace());	0
0	OpenLiberty/ci.common JavaCompilerOptionsTest	testRelease	assertEquals(3,result.size());	assertEquals(3,result.size());	1
0	// JavaCompilerOptionsTest	testRelease	assertEquals(3,result.size());	assertNotNull(result.get(2));	0
1	OpenLiberty/ci.common JavaCompilerOptionsTest	testTarget	assertEquals(3,result.size());	assertEquals(3,result.size());	1
1	// JavaCompilerOptionsTest	testTarget	assertEquals(3,result.size());	"assertFalse(result.contains(""STR""));"	0
/	// JavaCompilerOptionsTest	testTarget	assertEquals(3,result.size());	assertNotNull(result);	0
0	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testCreateConnectionFailedToGetUrl	assertNull(result);	assertNull(result);	1
1	amlinv/stat-collection-utils ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotNull(result);	0
/	// ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotNull(result.getAttributeSetters());	0
/	// ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotNull(result.getObjectName());	0
0	jcodec/jcodec CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	assertEquals(0,m.decodeBin(64));	0
/	// CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	assertTrue(m.decodeBin(64)==0);	0
/	// CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	assertTrue(m.decodeBin(64)>=63);	0
/	// CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	assertFalse(m.decodeBin(64)==1);	0
0	// YamlConfigLoaderTest	roundtrips	"assertEquals(yaml,config.toYaml(""STR""));"	assertEquals(yaml,config.toYaml(null));	0
0	arnohaase/a-foundation AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result);"	1
0	// AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result.replaceAll(""STR"",""STR""));"	0
/	// AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result.trim());"	0
/	// AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result.trim().replaceAll(""STR"",""STR""));"	0
/	// AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(Arrays.asList(""STR""),Arrays.asList(result.replaceAll(""STR"",""STR"").split(""STR"")));"	0
0	// OETLCSVExtractorTest	testDoubleWithingQuotes	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
0	// OETLCSVExtractorTest	testDoubleWithingQuotes	assertFalse(res.isEmpty());	assertNotNull(res);	0
1	orientechnologies/orientdb OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(removedKeys,keysToRemove);	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(Collections.singletonMap(multiValueChangeEvent.getKey(),(Integer)1),keysToAdd);	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(removedKeys.keySet(),keysToRemove.keySet());	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertNotNull(keysToAdd);	0
2	orientechnologies/orientdb ODocumentSchemalessBinarySerializationTest	testEmbeddedListOfEmbeddedMap	assertEquals(extr.fields(),document.fields());	assertTrue(coll.equals(extr.getList(“list”)));	0
/	// ODocumentSchemalessBinarySerializationTest	testEmbeddedListOfEmbeddedMap	assertEquals(extr.fields(),document.fields());	"assertEquals(coll,extr.field(""STR""));"	0
/	// ODocumentSchemalessBinarySerializationTest	testEmbeddedListOfEmbeddedMap	assertEquals(extr.fields(),document.fields());	assertEquals(document,extr);	0
/	// ODocumentSchemalessBinarySerializationTest	testEmbeddedListOfEmbeddedMap	assertEquals(extr.fields(),document.fields());	assertNotNull(extr);	0
/	// ODocumentSchemalessBinarySerializationTest	testEmbeddedListOfEmbeddedMap	assertEquals(extr.fields(),document.fields());	assertEquals(2,coll.size());	0
3	orientechnologies/orientdb ODropClusterStatementExecutionTest	testDropClusterIfExists	assertTrue(db.getClusterIdByName(cluster)>0);	assertTrue(db.getClusterIdByName(cluster)>0);	1
3	// ODropClusterStatementExecutionTest	testDropClusterIfExists	assertTrue(db.getClusterIdByName(cluster)>0);	assertFalse(db.getClusterIdByName(cluster)>0);	0
4	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertEquals(operations.size(),1);	0
/	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertNotNull(request.getOperations());	0
/	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertTrue(request.getOperations().size()==1);	0
5	// OSQLFunctionAbsoluteValueTest	testEmpty	assertNull(result);	assertNull(result);	1
6	orientechnologies/orientdb OLiveQueryMessagesTests	testLiveQueryPushRequest	assertEquals(pushRequestRead.getMonitorId(),10);	assertTrue(pushRequestRead.getMonitorId()==10);	0
6	// OLiveQueryMessagesTests	testLiveQueryPushRequest	assertEquals(pushRequestRead.getMonitorId(),10);	assertEquals(pushRequestRead.getMonitorId(),10);	1
/	// OLiveQueryMessagesTests	testLiveQueryPushRequest	assertEquals(pushRequestRead.getMonitorId(),10);	assertTrue(events.size()==3&&pushRequestRead.getMonitorId()==10);	0
7	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	assertEquals(ob2,ob1.getFriend());	0
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	assertNotNull(ob2);	0
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	assertEquals(ob1.getFriend(),ob2);	0
7	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	assertNotNull(ob1.getFriend());	1
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	"assertEquals(""STR"",ob2.getName());"	0
8	// OConnectionExecutorTransactionTest	testExecutionBeginTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(operations);	0
/	// OConnectionExecutorTransactionTest	testExecutionBeginTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(rec.getIdentity());	0
/	// OConnectionExecutorTransactionTest	testExecutionBeginTransaction	assertFalse(database.getTransaction().isActive());	"assertNotNull(rec.getIdentity())`,Iwillgenerateanothercompletelydifferentassertstatementthatmightfitthegiventestprefix:

`assertTrue(rec.getIdentity().getDatabaseName().equals(database.getName()));"	0
9	// RemoteSimpleSchemaTest	testNotCaseSensitiveDrop	"assertTrue(database.getMetadata().getSchema().existsClass(""STR""));"	"assertTrue(database.getMetadata().getSchema().getClass(""STR"")!=null);"	0
/	// RemoteSimpleSchemaTest	testNotCaseSensitiveDrop	"assertTrue(database.getMetadata().getSchema().existsClass(""STR""));"	assertNotNull(database.getMetadata().getSchema());	0
/	// RemoteSimpleSchemaTest	testNotCaseSensitiveDrop	"assertTrue(database.getMetadata().getSchema().existsClass(""STR""));"	assertNotNull(database.getMetadata().getSchema());	0
0	Yubico/yubico-java-client YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	0
0	fabric8io/fabric8-maven-plugin ThorntailUtilTest	testReadThorntailPort	assertNotNull(props);	assertNotNull(props);	1
0	// MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertFalse(macAddress.isLocal());	0
0	// LoadKeyStoreTest	loadKeyStoreFromResourcesWrongPassword	assertNotNull(resourceAsStream);	assertNotNull(keyStorePath);	0
/	// LoadKeyStoreTest	loadKeyStoreFromResourcesWrongPassword	assertNotNull(resourceAsStream);	assertNotNull(keyStorePath);	0
0	// LoadKeyStoreTest	loadKeyStoreFromResourcesWrongPassword	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	1
/	// LoadKeyStoreTest	loadKeyStoreFromResourcesWrongPassword	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	1
0	trautonen/coveralls-maven-plugin DirectorySourceLoaderTest	testMissingSourceFileFromDirectory	"assertNull(sourceLoader.load(""STR""));"	"assertNull(sourceLoader.load(""STR""));"	1
/	// DirectorySourceLoaderTest	testMissingSourceFileFromDirectory	"assertNull(sourceLoader.load(""STR""));"	"assertNull(sourceLoader.load(""STR""));"	1
0	// ACollectionHelperTest	testCollect	assertEquals(4,result.size());	assertTrue(result.size()==4);	0
/	// ACollectionHelperTest	testCollect	assertEquals(4,result.size());	assertNotNull(result.get(2));	0
/	// AJsonSerHelperTest	testNumber	"assertEquals(""STR"",result);"	"assertTrue(result.contains(""STR""));"	0
/	// AJsonSerHelperTest	testNumber	"assertEquals(""STR"",result);"	"assertFalse(result.contains(""STR""));"	0
0	// HostURLFilterTest	testWithinHostOnly	"assertEquals(""STR"",filterResult);"	"assertTrue(allAllowed.filter(sourceURL,metadata,""STR"")!=null);"	0
0	// HostURLFilterTest	testWithinHostOnly	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",filterResult);"	1
/	// HostURLFilterTest	testWithinHostOnly	"assertEquals(""STR"",filterResult);"	assertNotNull(filterResult);	0
0	// SimulatorAddressTest	testGetAddressIndex_fromAgent	assertEquals(5,agentAddress(5).getAddressIndex());	assertEquals(5,workerAddress(5,2).getAgentIndex());	0
/	// SimulatorAddressTest	testGetAddressIndex_fromAgent	assertEquals(5,agentAddress(5).getAddressIndex());	assertTrue(workerAddress(5,2).getAddressLevel()==WORKER);	0
/	// SimulatorAddressTest	testGetAddressIndex_fromAgent	assertEquals(5,agentAddress(5).getAddressIndex());	assertTrue(agentAddress(1).getParent()==coordinatorAddress());	0
/	// SimulatorAddressTest	testGetAddressIndex_fromAgent	assertEquals(5,agentAddress(5).getAddressIndex());	assertNotNull(workerAddress(5,2).getParent());	0
/	// SimulatorAddressTest	testGetAddressIndex_fromAgent	assertEquals(5,agentAddress(5).getAddressIndex());	assertNotNull(workerAddress(5,2).getAddressLevel());	0
0	adlnet/jxapi ContentActivitiesTest	testGetCategory	assertNotNull(actual);	assertNotNull(actual);	1
1	adlnet/jxapi AboutTest	testSetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// AboutTest	testSetExtensions	assertNotNull(actual);	"assertTrue(actual.has(""STR""));"	0
/	// AboutTest	testSetExtensions	assertNotNull(actual);	"assertTrue(about.getExtensions().has(""STR""));"	0
/	// AboutTest	testSetExtensions	assertNotNull(actual);	assertNotNull(about.getExtensions());	0
2	adlnet/jxapi SubStatementTest	testGetContext	assertNotNull(actual);	assertNotNull(actual);	1
3	// AttachmentTest	testGetUsageType	assertNotNull(actual);	assertNotNull(actual);	1
4	adlnet/jxapi StatementTest	testSetVersion	assertNotNull(actual);	assertNotNull(actual);	1
0	// SeekHeadFactoryTest	testEdgeCasesWithFakeZ	assertEquals(a.estimateSize(),computeSize);	assertEquals(expectedSize,computeSize);	0
/	// SeekHeadFactoryTest	testEdgeCasesWithFakeZ	assertEquals(a.estimateSize(),computeSize);	assertTrue(computeSize>0);	0
1	// SeekHeadFactoryTest	testEstimeteSeekSize	assertEquals(14,estimeteSeekSize(4,1));	assertTrue(estimatedSeekSize==expectedSeekSize);	0
2	// SegmentReaderTest	testToNextMarkerPartialVar1	assertEquals(ByteBuffer.wrap(bytes,0,8),buf1);	assertEquals(14,buf1.limit()+buf2.limit()+buf3.limit());	0
/	// SegmentReaderTest	testToNextMarkerPartialVar1	assertEquals(ByteBuffer.wrap(bytes,0,8),buf1);	assertTrue(buf1.hasRemaining()||buf2.hasRemaining()||buf3.hasRemaining());	0
/	// SegmentReaderTest	testToNextMarkerPartialVar1	assertEquals(ByteBuffer.wrap(bytes,0,8),buf1);	assertFalse(buf1.isDirect());	0
0	// OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
1	// OMatchStatementExecutionNewTest	testIndexedEdgeArrows	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
2	// OMatchStatementExecutionNewTest	testFriendsWithName	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
3	// DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(walChanges.hasChanges());	0
/	// DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(buffer);	0
4	// OMatchStatementExecutionTest	testArrayNumber	assertEquals(1,result.size());	assertFalse(result.isEmpty());	0
/	// OMatchStatementExecutionTest	testArrayNumber	assertEquals(1,result.size());	assertNotNull(result.get(0));	0
/	// OMatchStatementExecutionTest	testArrayNumber	assertEquals(1,result.size());	assertNotNull(result);	0
5	orientechnologies/orientdb OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertTrue(nameProperty.isMandatory());	0
5	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(nameProperty.getName(),PROP_OFFICERS);	1
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(nameProperty.getName(),PROP_OFFICERS);	1
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertNotNull(nameProperty);	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(true,nameProperty.isMandatory());	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(nameProperty.isMandatory(),true);	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	"assertEquals(""STR"",nameProperty.getName());"	0
6	// OCompositeIndexDefinitionTest	testGetTypes	assertEquals(result.length,2);	assertNotNull(compositeIndex.getTypes());	0
/	// OCompositeIndexDefinitionTest	testGetTypes	assertEquals(result.length,2);	assertNotNull(result);	0
/	// OCompositeIndexDefinitionTest	testGetTypes	assertEquals(result.length,2);	assertNotNull(result[1]);	0
7	// AlterPropertyTest	testPropertyRenaming	"assertEquals(property,classA.getProperty(""STR""));"	"assertEquals(""STR"",classA.getProperty(""STR"").getName());"	0
/	// AlterPropertyTest	testPropertyRenaming	"assertEquals(property,classA.getProperty(""STR""));"	"assertTrue(classA.getProperty(""STR"")!=null&&classA.getProperty(""STR"")!=null);"	0
/	// AlterPropertyTest	testPropertyRenaming	"assertEquals(property,classA.getProperty(""STR""));"	assertEquals(newVector2D(0.0,0.0),vector2DInstance.clone());	0
7	// AlterPropertyTest	testPropertyRenaming	"assertEquals(property,classA.getProperty(""STR""));"	"assertEquals(property,classA.getProperty(""STR""));"	1
0	NanoHttpd/nanohttpd TestNanolets	uriToString	"assertEquals(""STR"",newUriResource(""STR"",100,GeneralHandler.class).toString());"	assertNull(RouterNanoHTTPD.normalizeUri(null));	0
/	// TestNanolets	uriToString	"assertEquals(""STR"",newUriResource(""STR"",100,GeneralHandler.class).toString());"	"assertNotNull(RouterNanoHTTPD.normalizeUri(""STR""));"	0
0	Yubico/yubico-java-client YubicoClientTest	testSignature	assertNotNull(response);	assertNotNull(response);	1
0	// YubicoClientTest	testSignature	assertNotNull(response);	"assertNotNull(response)`,youcouldchoosetotestthe`isOk()`methodofthe`VerificationResponse`object.Here'sanexampleofhowtodothis:

```java
publicvoidtestValidOTP()throwsYubicoVerificationException,YubicoValidationFailure{
VerificationResponseresponse=client.verify(""VALID_OTP"");"	0
0	jcodec/jcodec PlatformTest	testInvokeStatic2	assertEquals(42,parseBuf);	assertFalse(Platform.isAssignableFrom(VideoSampleEntry.class,SampleEntry.class));	0
0	// PropertyBindingSupport_bind0_NumericalTest	bind_Double	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertNotNull(bind0(testObject,""STR"",""STR""));"	0
0	adlnet/jxapi VerbsTest	testAnswered	assertNotNull(actual);	assertNotNull(actual);	1
0	// VerbsTest	testAnswered	assertNotNull(actual);	assertNotNull(Verbs.answered());	0
1	adlnet/jxapi StatementResultTest	testSetStatements	assertNotNull(actual);	assertNotNull(actual);	1
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result);"	1
0	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertNotEquals(""STR"",result);"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	assertFalse(result.isEmpty());	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	assertFalse(result.isEmpty());	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertFalse(result.contains(""STR""));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertFalse(result.contains(""STR""));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertFalse(result.contains(""STR""));"	0
0	basis-technology-corp/tcl-regex-java MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.regionStart()==0);	0
0	// MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find());	1
/	// MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.matches());	0
/	// MatcherTest	reset	assertTrue(matcher.find());	???;	0
/	// MatcherTest	reset	assertTrue(matcher.find());	???;	0
/	// MatcherTest	reset	assertTrue(matcher.find());	assertFalse(matcher.regionEnd()==matcher.regionStart());	0
/	// MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher.pattern());	0
0	fluenda/ParCEFone CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	assertEquals(true,parser.parse(sample1Array)!=null);	0
/	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	"assertEquals(""STR"",parser.parse(sample1Array).getHeader().get(""STR""));"	0
/	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	"assertNotNull(parser.parse(sample1Array).getHeader().get(""STR""));"	0
0	TooTallNate/Java-WebSocket DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	1
0	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertEquals(DefaultExtension.class.getSimpleName(),defaultExtension.toString());	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertEquals(defaultExtension,defaultExtension.copyInstance());	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertTrue(defaultExtension.acceptProvidedExtensionAsClient(defaultExtension.getProvidedExtensionAsClient()));	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertNotNull(defaultExtension);	0
1	TooTallNate/Java-WebSocket DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	1
1	// DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.equals(defaultExtension1));	0
/	// DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.getClass().equals(defaultExtension1.getClass()));	0
/	// DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.hashCode()==defaultExtension1.hashCode());	0
0	// WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	"assertTrue(robotsTxt.contains(""STR""));"	0
/	// WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	assertNotNull(robotsTxt);	0
1	// BasicURLNormalizerTest	testInvalidURI	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	// BasicURLNormalizerTest	testInvalidURI	assertEquals(expectedResult,normalizedUrl);	"assertEquals(""STR"",normalizedUrl);"	0
/	// BasicURLNormalizerTest	testInvalidURI	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
1	cucumber-ltd/cucumber-pro-plugin-jvm SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertEquals(Logger.Level.INFO,logger.level);	1
1	// SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotNull(logger.level);	0
0	// OIOUtilsTest	shoudGetRightTimeFromString	assertEquals(calendar.getTime(),d);	assertTrue(d.getTime()==calendar.getTimeInMillis());	0
/	// OIOUtilsTest	shoudGetRightTimeFromString	assertEquals(calendar.getTime(),d);	assertTrue(d.compareTo(calendar.getTime())==0);	0
1	// OMatchStatementExecutionTest	testSimpleLimit	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	1
/	// OMatchStatementExecutionTest	testSimpleLimit	assertEquals(1,qResult.size());	assertTrue(qResult.size()>0);	0
/	// OMatchStatementExecutionTest	testSimpleLimit	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
/	// LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	assertEquals(1,count);	assertTrue(count>0);	0
/	// LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	assertEquals(1,count);	assertTrue(count>0);	0
/	// LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	assertEquals(1,count);	assertFalse(count==0);	0
3	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	"assertTrue(classA.getProperties().stream().anyMatch(p->p.getName().equals(""STR""))&&classA.getLink(classLinked));"	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNull(classLinked);	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	"assertNotNull(classA.getProperty(""STR"").getLinkedClass());"	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotNull(classLinked);	0
4	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(rid,linkSerializer.deserializeFromByteBufferObject(buffer));	0
4	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	1
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(rid.toString(),linkSerializer.deserializeFromByteBufferObject(buffer).toString());	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(buffer.limit(),buffer.position()+size+1);	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(size+1,buffer.limit());	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(linkSerializer.getObjectSize(rid),buffer.limit()-buffer.position());	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertTrue(buffer.position()+linkSerializer.getObjectSize(rid)==buffer.limit());	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertTrue(linkSerializer.getObjectSizeInByteBuffer(buffer)==size);	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertTrue(linkSerializer.deserializeFromByteBufferObject(buffer).equals(rid));	0
5	orientechnologies/orientdb OCommandExecutorSQLSelectTest	testAggregations	assertEquals(1,results.size());	assertTrue(results.size()>0);	0
/	// OCommandExecutorSQLSelectTest	testAggregations	assertEquals(1,results.size());	assertFalse(results.isEmpty());	0
0	amlinv/stat-collection-utils AttributeInjectorTest	testGetSetLog	assertNotNull(this.injector.getLog());	assertNotNull(this.injector.getLog());	1
0	Yubico/yubico-java-client YubicoClientTest	testUnPrintableOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
0	spring-cloud/spring-cloud-security OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	"assertTrue(oAuth2AccessToken.getValue()+""STR"",oAuth2AccessToken.getValue()==null);"	0
/	// OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	assertTrue(requestTemplate.headers().containsKey(header));	0
/	// OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	"assertTrue(requestTemplate.headers().get(""STR"").contains(""STR""));"	0
/	// OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	assertNotNull(oAuth2AccessToken);	0
/	// OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	assertNotNull(requestTemplate.header(header));	0
0	myabc/markdownj EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	assertEquals(expectedResponse,response);	0
/	// EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	assertEquals(expectedResponse,response);	0
/	// EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	"assertTrue(StringUtils.isEmpty(m.markdown(""STR"").toString()));"	0
/	// EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	assertNotNull(m.markdown(null));	0
0	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	assertTrue(coll.stream().anyMatch(len1));	0
/	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	assertFalse(coll.stream().anyMatch(o->o.length()>1&&coll.stream().filter(e->e.length()==1).count()==1));	0
/	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	assertNotNull(coll);	0
0	// EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	"assertTrue(filter(env).containsKey(""STR""));"	0
/	// EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(filter(env).size()==5);	0
/	// EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	"assertFalse(filter(env).containsKey(""STR""));"	0
/	// EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	"assertFalse(filter(env).containsKey(""STR""));"	0
/	// EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	"assertNull(filter(env).get(""STR""));"	0
0	// MorphologyTest	crap	assertFalse(crap.isRecognized());	assertNotNull(crap);	0
0	sofastack/sofa-bolt GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn());	1
0	// PuzzleStateTest	not_equal_to_state_with_different_puzzle	assertNotEquals(a,b);	assertTrue(!a.equals(b));	0
0	// WorkerQueryTest	noFilters	assertEquals(list,result);	assertEquals(3,result.size());	0
/	// WorkerQueryTest	noFilters	assertEquals(list,result);	assertFalse(result.isEmpty());	0
1	adlnet/jxapi VerbTest	testVerb	assertNotNull(verb);	assertNotNull(verb);	1
/	// VerbTest	testVerb	assertNotNull(verb);	assertNotNull(verb.serialize());	0
/	// TSqlBuilderTest	testSelectSomeFrom	"assertEquals(""STR"",sql.select(""STR"",""STR"").from(""STR"").toString());"	"assertNotNull(sql.select(""STR"",""STR"").from(""STR"").where(""STR"",""STR"").toString());"	0
/	// TSqlBuilderTest	testSelectSomeFrom	"assertEquals(""STR"",sql.select(""STR"",""STR"").from(""STR"").toString());"	assertNotNull(sql);	0
/	// BasicIndexingTest	testFilterMetadata	"assertArrayEquals(""STR"",newString[]{""STR"",""STR"",""STR""},newTreeSet<>(fields.keySet()).toArray());"	"assertNull(fields.get(""STR""));"	0
/	// BasicIndexingTest	testFilterMetadata	"assertArrayEquals(""STR"",newString[]{""STR"",""STR"",""STR""},newTreeSet<>(fields.keySet()).toArray());"	"assertNull(fields.get(""STR""));"	0
/	// ProcessorConfigTest	order	assertEquals(2,result.size());	assertTrue(result.size()==2);	0
0	// HttpClientFactoryTest	testNonProxiedHostRequest	"assertEquals(""STR"",body);"	assertNotNull(client);	0
/	// HttpClientFactoryTest	testNonProxiedHostRequest	"assertEquals(""STR"",body);"	assertNotNull(client.getConnectionManager());	0
1	// CircleTest	testGetEnvironment	assertEquals(3,properties.size());	assertEquals(3,properties.size());	1
0	// OCommandExecutorSQLSelectTest	testProjection	assertEquals(qResult.size(),1);	assertNull(qResult);	0
1	// ORecordBytesTest	testReadFromInputStreamWithWaitSizeTooBigLimit	assertEquals(result,data.length);	???;	0
/	// ORecordBytesTest	testReadFromInputStreamWithWaitSizeTooBigLimit	assertEquals(result,data.length);	assertTrue(Arrays.equals(Arrays.copyOfRange(data,0,5),Arrays.copyOfRange(testedInstance.fromInputStream(is,15),0,5)));	0
2	// CASObjectArrayTest	testSetTwoItems	assertEquals(0,array.add(1));	assertEquals(1,array.add(2));	0
/	// CASObjectArrayTest	testSetTwoItems	assertEquals(0,array.add(1));	assertEquals(2,array.get(0));	0
/	// CASObjectArrayTest	testSetTwoItems	assertEquals(0,array.add(1));	assertNotNull(array);	0
3	// OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
3	// OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(result);	0
4	orientechnologies/orientdb OMultiKeyTest	testOneKeyMap	assertNotNull(mapResult);	assertNotNull(mapResult);	1
0	adlnet/jxapi ActivityTest	testSerialize	assertNotNull(actual);	assertNotNull(activity);	0
0	amlinv/stat-collection-utils JmxAttributePollerTest	testGetPolledObjects	assertEquals(this.polledObjects,this.poller.getPolledObjects());	assertNotNull(this.poller.getObjectQueryPreparer());	0
0	// DevUtilTest	testParseNetworks	"assertArrayEquals(networkArray,DevUtil.parseNetworks(""STR""));"	assertFalse(networkArray.length==0);	0
/	// DevUtilTest	testParseNetworks	"assertArrayEquals(networkArray,DevUtil.parseNetworks(""STR""));"	assertNotNull(networkArray);	0
0	// AgentsFileTest	testLoad_emptyTag	assertEquals(1,registry.agentCount());	assertTrue(registry.agentCount()>0);	0
/	// AgentsFileTest	testLoad_emptyTag	assertEquals(1,registry.agentCount());	assertNotNull(registry.getAgents());	0
0	// ConfigTest	has_yaml_representation	"assertEquals(expected,config.toYaml(""STR""));"	"assertTrue(config.getString(""STR"").equals(""STR""));"	0
/	// ConfigTest	has_yaml_representation	"assertEquals(expected,config.toYaml(""STR""));"	"assertFalse(config.isNull(""STR""));"	0
/	// ConfigTest	has_yaml_representation	"assertEquals(expected,config.toYaml(""STR""));"	"assertFalse(config.isNull(""STR""));"	0
0	// EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertNotNull(convertToBytes(123L));	0
0	TooTallNate/Java-WebSocket FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertEquals(Opcode.BINARY,binary.getOpcode());	1
0	// FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertTrue(binary.getTransfereMasked()==false);	0
/	// FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertTrue(binary.isFin());	0
/	// FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertFalse(binary.isRSV1());	0
0	// GZipIntegrationTest	fixedLengthContentIsEncodedProperly	"assertEquals(""STR"",EntityUtils.toString(response.getEntity()));"	"assertEquals(""STR"",response.getContent().toString());"	0
/	// GZipIntegrationTest	fixedLengthContentIsEncodedProperly	"assertEquals(""STR"",EntityUtils.toString(response.getEntity()));"	assertNotNull(response);	0
0	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	assertEquals(2,CommUtil.repeatChar('a',2).length());	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	assertEquals(CommUtil.repeatChar('a',5).equalsIgnoreCase(CommUtil.repeatChar('A',5)),true);	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(CommUtil.repeatChar('a',7).substring(0,3),""STR"");"	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(CommUtil.repeatChar('a',10).contains(""STR""),true);"	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(CommUtil.repeatChar('a',10).contains(""STR""),false);"	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	assertFalse(CommUtil.repeatChar('a',3).equalsIgnoreCase(CommUtil.repeatChar('b',3)));	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertFalse(CommUtil.repeatChar('a',10).startsWith(""STR""));"	0
0	// RpcServerTest	doTestRandomPortConstructor	assertNotEquals(0,rpcServer.port());	assertTrue(rpcServer.isStarted());	0
/	// RpcServerTest	doTestRandomPortConstructor	assertNotEquals(0,rpcServer.port());	assertTrue(rpcServer.port()>0);	0
1	redraiment/jactiverecord SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	1
/	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	1
1	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertEquals(""STR"",Seq.join(Collections.emptyList(),""STR""));"	0
/	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertEquals(""STR"",Seq.join(null,""STR""));"	0
/	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertFalse(Seq.join(Collections.singletonList(null),""STR"").isEmpty());"	0
/	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertFalse(Seq.join(Collections.singletonList(null),""STR"").isEmpty());"	0
0	// AThreadPoolTest	testPrime	assertEquals(1,AThreadPoolImpl.prime(0,Collections.emptySet()));	assertEquals(expectedPrimeNumber,prime(number,exceptions));	0
0	// ColorTest	striped	"assertEquals(attrs(attr(""STR"",""STR""),attr(""STR"",""STR"")),Color.RED.and(Color.GREEN).striped());"	assertNotNull(testObject.striped());	0
0	// OMatchStatementExecutionTest	testTriangle2	assertEquals(1,result.size());	assertNotNull(result);	0
3	// OLiveQueryRemoteTest	testRidSelect	assertTrue(listener.latch.await(10,TimeUnit.SECONDS));	"assertEquals(item.getProperty(""STR""),""STR"");"	0
/	// OLiveQueryRemoteTest	testRidSelect	assertTrue(listener.latch.await(10,TimeUnit.SECONDS));	assertNotNull(database);	0
4	// RecursiveLinkedSaveTest	testTxLinked	"assertEquals(3,db.countClass(""STR""));"	"assertTrue(db.getSchema().getClassByName(""STR"").count()==3);"	0
0	DigitalPebble/storm-crawler MaxDepthFilterTest	testCustomDepth	assertEquals(url.toExternalForm(),filterResult);	"assertNotNull(filterResult,""STR"");"	0
/	// MaxDepthFilterTest	testCustomDepth	assertEquals(url.toExternalForm(),filterResult);	"assertEquals(""STR"",filterResult);"	0
2	// BasicURLNormalizerTest	testAnchorFilterFalse	assertEquals(url.toExternalForm(),filterResult);	"assertEquals(""STR"",filterResult);"	0
/	// BasicURLNormalizerTest	testAnchorFilterFalse	assertEquals(url.toExternalForm(),filterResult);	assertNotNull(filterResult);	0
3	// BasicIndexingTest	testRelativeCanonicalURL	"assertEquals(""STR"",fields.get(""STR""));"	"assertEquals(""STR"",fields.get(""STR""));"	1
/	// BasicIndexingTest	testRelativeCanonicalURL	"assertEquals(""STR"",fields.get(""STR""));"	"assertNotNull(((DummyIndexer)bolt).returnFields().get(""STR""),""STR"");"	0
0	myabc/markdownj LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	assertEquals(expected,actual);	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markdown(null));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertEquals(""STR"",markup.markdown(""STR""));"	0
0	fluent/fluent-logger-java TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	0
/	// TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	0
0	// ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	0
/	// FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(response);	0
0	// AListMapTest	testKeysValues	assertEquals(4,keys.size());	assertEquals(4,keys.size());	1
0	// AListMapTest	testKeysValues	assertEquals(4,keys.size());	"assertFalse(map.containsKey(""STR""));"	0
/	// AListMapTest	testKeysValues	assertEquals(4,keys.size());	assertFalse(map.containsValue(5));	0
/	// AListMapTest	testKeysValues	assertEquals(4,keys.size());	assertFalse(map.containsValue(null));	0
0	// LoadKeyStoreTest	loadNonExistentKeyStoreFromResources	assertNull(resourceAsStream);	assertNull(resourceAsStream);	1
0	DigitalPebble/storm-crawler BasicURLNormalizerTest	testNonStandardPercentEncoding	assertEquals(expectedURL,normalizedUrl);	"assertEquals(""STR"",normalizedUrl);"	0
/	// BasicURLNormalizerTest	testNonStandardPercentEncoding	assertEquals(expectedURL,normalizedUrl);	"assertTrue(normalizedUrl.startsWith(""STR""));"	0
/	// BasicURLNormalizerTest	testNonStandardPercentEncoding	assertEquals(expectedURL,normalizedUrl);	"assertFalse(normalizedUrl.contains(""STR""));"	0
/	// BasicURLNormalizerTest	testNonStandardPercentEncoding	assertEquals(expectedURL,normalizedUrl);	assertNotNull(normalizedUrl);	0
/	// BasicURLNormalizerTest	testNonStandardPercentEncoding	assertEquals(expectedURL,normalizedUrl);	assertNotNull(expectedURL);	0
/	// BasicURLNormalizerTest	testNonStandardPercentEncoding	assertEquals(expectedURL,normalizedUrl);	assertNotNull(expectedURL);	0
0	adlnet/jxapi ActivityDefinitionTest	testActivityDefinitionHashMapOfStringStringHashMapOfStringString	assertNotNull(ad);	assertNotNull(activityDefinition);	0
0	// ActivityDefinitionTest	testActivityDefinitionHashMapOfStringStringHashMapOfStringString	assertNotNull(ad);	assertNotNull(ad);	1
/	// ActivityDefinitionTest	testActivityDefinitionHashMapOfStringStringHashMapOfStringString	assertNotNull(ad);	assertNotNull(activityDefinition.getName());	0
1	adlnet/jxapi ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// ResultTest	testGetDuration	assertNotNull(actual);	assertNotNull(result.getDuration());	0
2	adlnet/jxapi AttachmentResultTest	testGetXapiStatement	assertNotNull(a);	assertNotNull(a);	1
2	// AttachmentResultTest	testGetXapiStatement	assertNotNull(a);	assertNotNull(a.getXapiStatements());	0
0	hazelcast/hazelcast-simulator TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	assertEquals(null,testSuite.getTestCase(null));	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	assertEquals(1,testSuite.getTestCaseList().size());	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	"assertTrue(testSuite.getTestCaseList().stream().filter(t->t.getClassname().equals(""STR"")).findFirst().isPresent());"	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	assertNotNull(testSuite);	0
1	// GitInfoTest	testLoadProperties	assertNotNull(properties);	assertNotNull(properties);	1
0	// JMXRemoteUrlConnectionFactoryTest	testGetSetConnectionFactoryDelegate	assertTrue(this.factory.getConnectorFactoryDelegate()instanceofDefaultJmxConnectorFactoryDelegate);	assertNotNull(factory.getConnectorFactoryDelegate());	0
1	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testGetSetAttacher	assertTrue(this.factory.getAttacher()instanceofDefaultVirtualMachineAttacher);	assertNotNull(this.factory.getLog());	0
/	// JMXJvmIdConnectionFactoryTest	testGetSetAttacher	assertTrue(this.factory.getAttacher()instanceofDefaultVirtualMachineAttacher);	assertNotNull(this.factory.getAttacher());	0
2	// JmxAttributePollerTest	testGetStepAfterShutdown	assertNull(process.getNextStep());	assertNull(process.getNextStep());	1
2	// JmxAttributePollerTest	testGetStepAfterShutdown	assertNull(process.getNextStep());	assertNotNull(process);	0
/	// JmxAttributePollerTest	testGetStepAfterShutdown	assertNull(process.getNextStep());	assertNotNull(this.poller.getLog());	0
0	jcodec/jcodec ModeInfoTest	testReadIntraMode	assertEquals(3,newModeInfo().readKfIntraMode(miCol,miRow,blSz,decoder,c));	assertEquals(3,c.leftModes[0]);	0
/	// ModeInfoTest	testReadIntraMode	assertEquals(3,newModeInfo().readKfIntraMode(miCol,miRow,blSz,decoder,c));	assertTrue(c.leftModes[0]==3);	0
1	nidi3/graphviz-java OptionsTest	fromJsonEmptyImages	assertEquals(expected,options);	assertEquals(expected,options);	1
1	// OptionsTest	fromJsonEmptyImages	assertEquals(expected,options);	"assertEquals()method.Here,Iwillcomparethetwooptionsobjectsfieldbyfieldusingtheequals()methoddefinedfortheOptionsclasstoensurethattheobjectsareequal.

ThegeneratedJUnitassertstatementcanbeasfollows:
```
assertThat(options).isEqualTo(expected);"	0
/	// OptionsTest	fromJsonEmptyImages	assertEquals(expected,options);	assertEquals(expected,options);	1
/	// OptionsTest	fromJsonEmptyImages	assertEquals(expected,options);	assertNotSame(options,expected);	0
/	// OptionsTest	fromJsonEmptyImages	assertEquals(expected,options);	assertTrue(options.equals(expected));	0
0	// OCommandExecutorSQLScriptTest	testSleep	assertTrue(System.currentTimeMillis()-begin>=500);	assertTrue(System.currentTimeMillis()-begin>=500L);	0
/	// OCommandExecutorSQLScriptTest	testSleep	assertTrue(System.currentTimeMillis()-begin>=500);	"assertTrue(ScriptExecutionException.class.isAssignableFrom(db.command(newOCommandScript(""STR"",""STR"")).execute().getClass()));"	0
/	// OCommandExecutorSQLScriptTest	testSleep	assertTrue(System.currentTimeMillis()-begin>=500);	assertTrue(System.currentTimeMillis()-begin>500);	0
1	// RemoteMetadataReloadTest	testStorageUpdate	assertEquals(database.get(ODatabase.ATTRIBUTES.LOCALELANGUAGE),Locale.GERMANY.getLanguage());	assertEquals(Locale.GERMANY.getLanguage(),database.getMetadata().getLanguage());	0
2	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	"assertEquals(1,rs.get(0).getLong(""STR""));"	0
/	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	"assertEquals(expectedCount,rs.next().getLong(""STR""));"	0
/	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	assertEquals(2,db.countClass(className));	0
/	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	assertEquals(1,rs.getFirst().getCount());	0
/	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	assertEquals(2,rs.next().count);	0
0	Yubico/yubico-java-client YubicoClientTest	testReplayedOTP	assertNotNull(response);	assertNotNull(response);	1
0	// YubicoClientTest	testReplayedOTP	assertNotNull(response);	assertNotNull(response.getOtp());	0
0	OpenLiberty/ci.common DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_mixedcase	assertEquals(expectedDockerfileLines,dockerfileLines);	assertEquals(expectedDockerfileLines,dockerfileLines);	1
0	// DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_mixedcase	assertEquals(expectedDockerfileLines,dockerfileLines);	"assertFalse(dockerfileLines.contains(""STR""));"	0
/	// DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_mixedcase	assertEquals(expectedDockerfileLines,dockerfileLines);	"assertFalse(dockerfileLines.contains(""STR"")||dockerfileLines.contains(""STR""));"	0
/	// DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_mixedcase	assertEquals(expectedDockerfileLines,dockerfileLines);	"assertFalse(dockerfileLines.contains(""STR""));"	0
/	// DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_mixedcase	assertEquals(expectedDockerfileLines,dockerfileLines);	"assertFalse(dockerfileLines.contains(""STR"")||dockerfileLines.contains(""STR"")&&dockerfileLines.contains(""STR""));"	0
0	adlnet/jxapi ContextTest	testSetInstructor	assertNotNull(actual);	assertEquals(expected,actual);	0
0	// ContextTest	testSetInstructor	assertNotNull(actual);	assertNotNull(actual);	1
/	// ContextTest	testSetInstructor	assertNotNull(actual);	assertSame(expected,actual);	0
0	cucumber-ltd/cucumber-pro-plugin-jvm ConfigTest	gets_and_sets_value	"assertEquals(""STR"",config.getString(""STR""));"	"assertEquals(""STR"",config.getString(""STR""));"	1
0	// ConfigTest	gets_and_sets_value	"assertEquals(""STR"",config.getString(""STR""));"	"assertTrue(config.isNull(""STR""));"	0
/	// ConfigTest	gets_and_sets_value	"assertEquals(""STR"",config.getString(""STR""));"	"assertNotNull(config.getChild(""STR""));"	0
/	// ConfigTest	gets_and_sets_value	"assertEquals(""STR"",config.getString(""STR""));"	assertNotNull(config);	0
0	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertTrue(!mapA.equals(mapB));	0
/	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertTrue(MapUtil.mergeMaps(mapA,mapB).keySet().containsAll(expectedB.keySet()));	0
/	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertTrue(MapUtil.mergeMaps(mapA,mapB).equals(expectedA));	0
/	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertTrue(expectedA.keySet().equals(MapUtil.mergeMaps(mapA,mapB).keySet()));	0
/	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertFalse(MapUtil.mergeMaps(mapB,mapA).equals(expectedA));	0
/	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertFalse(MapUtil.mergeMaps(mapA,mapB).equals(expectedB));	0
/	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertNotNull(MapUtil.mergeMaps(mapA,mapB));	0
1	// ProfileUtilTest	simple	assertNotNull(is);	assertNotNull(is);	1
0	basis-technology-corp/tcl-regex-java MatcherTest	lookingAtPrefix	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
0	// MatcherTest	lookingAtPrefix	assertTrue(matcher.lookingAt());	assertTrue(matcher.find());	0
/	// MatcherTest	lookingAtPrefix	assertTrue(matcher.lookingAt());	assertTrue(matcher.find(0));	0
0	// MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0);	0
/	// MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertFalse(panel.getTurtleCount()==0);	0
0	// UserProcessorRegisterHelperTest	testRegisterMultiInterestUserProcessor	assertEquals(((SimpleServerMultiInterestUserProcessor)multiInterestUserProcessor).multiInterest().size(),userProcessors.size());	assertNotNull(userProcessors);	0
1	// RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(cm.get(poolKey));	0
/	// RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(cm.getAll(poolKey));	0
0	// MetronomeSupplierTest	testThreadCount	assertEquals(SleepingMetronome.class,m.getClass());	assertEquals(20,supplier.getIntervalNanos());	0
1	// NativeUtilsTest	testGetPidStringOrNull	assertNotNull(pid);	assertNotNull(pid);	1
0	// MkvBlockTest	testXiph	assertArrayEquals(expecteds,MkvBlock.muxXiphLacing(_in));	assertArrayEquals(expecteds,Xiph.muxXiphLacing(_in));	0
/	// MkvBlockTest	testXiph	assertArrayEquals(expecteds,MkvBlock.muxXiphLacing(_in));	assertNotNull(Xiph.muxXiphLacing(_in));	0
1	// SegmentTypeBoxTest	testParse	assertEquals(2,rootAtoms.size());	"assertEquals(Arrays.asList(newAtom(newHeader(16,""STR"",0),0),newAtom(newHeader(8,""STR"",8),16),newAtom(newHeader(""STR"".getBytes().length,""STR"".getBytes()),24)),rootAtoms);"	0
/	// SegmentTypeBoxTest	testParse	assertEquals(2,rootAtoms.size());	assertFalse(rootAtoms.isEmpty());	0
2	// MPEGESTest	testESBuffer	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertArrayEquals(f1.getData().array(),frame1);	0
/	// MPEGESTest	testESBuffer	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertNotNull(f1);	0
/	// MPEGESTest	testESBuffer	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertEquals(Packet.class,f1.getClass().getSuperclass());	0
/	// MPEGESTest	testESBuffer	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertTrue(f1!=null);	0
0	orientechnologies/orientdb CASObjectArrayTest	testCompareAndSetSingleItem	assertEquals(0,array.add(1));	assertFalse(array.compareAndSet(0,1,2));	0
1	// OMatchStatementExecutionNewTest	testOrderByDesc	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
1	// OMatchStatementExecutionNewTest	testOrderByDesc	assertTrue(result.hasNext());	assertNotNull(result);	0
2	// OCompositeKeyTest	testEqualNull	assertFalse(compositeKey.equals(null));	assertFalse(compositeKey.equals(null));	1
2	// OCompositeKeyTest	testEqualNull	assertFalse(compositeKey.equals(null));	assertFalse(compositeKey1.equals(compositeKey2));	0
/	// OCompositeKeyTest	testEqualNull	assertFalse(compositeKey.equals(null));	assertFalse(compositeKeyOne.isEquals(newOCompositeKey(1,2)));	0
3	orientechnologies/orientdb OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	"assertEquals(prop.getName(),""STR"");"	1
3	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	assertTrue(prop!=null);	0
/	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	assertNotNull(prop);	0
/	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	"assertEquals(prop.getName(),""STR"");"	1
4	// TrackedMapTest	testRemoveTwo	assertFalse(doc.isDirty());	"assertFalse(map.containsKey(""STR""));"	0
4	// TrackedMapTest	testRemoveTwo	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
/	// TrackedMapTest	testRemoveTwo	assertFalse(doc.isDirty());	"assertNull(map.get(""STR""));"	0
5	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	assertEquals(1,result.size());	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	"assertNotNull(result.get(0).field(""STR""));"	0
5	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	assertNotNull(result);	1
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	"assertEquals(4,result.get(0).field(""STR"").asList(Integer.class).get(0).intValue());"	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	assertNotEquals(0,result.size());	0
6	// ODatabaseDocumentTxTest	testDocFromJsonEmbedded	assertEquals(result.size(),0);	assertNotNull(result);	0
7	orientechnologies/orientdb OMatchStatementExecutionTest	testFriendsOfFriends	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	1
7	// OMatchStatementExecutionTest	testFriendsOfFriends	assertEquals(1,qResult.size());	assertFalse(qResult.isEmpty());	0
/	// OMatchStatementExecutionTest	testFriendsOfFriends	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
/	// HttpIndexTest	updateKey	assertEquals(getResponse().getStatusLine().getStatusCode(),201);	"assertTrue(post(""STR""+getDatabaseName()+""STR"").getResponse().getEntity()!=null);"	0
0	Yubico/yubico-java-client YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
0	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(-1L));	0
0	// MorphologyTest	jaundzimušākais	assertTrue(w.isRecognized());	assertFalse(w.getBestWordform().getValue(AttributeNames.i_Lemma).equals(w.getToken()));	0
0	basis-technology-corp/tcl-regex-java SmpTest	findCharClass	assertTrue(matcher.find());	assertTrue(matcher.find());	1
0	// SmpTest	findCharClass	assertTrue(matcher.find());	assertFalse(matcher.regionEnd()==0);	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.emptyList(),""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(null,""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.singletonList(""STR""),""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Arrays.asList(),""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.emptySet(),""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.unmodifiableList(Arrays.asList()),""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.singletonList(""STR""),null));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.unmodifiableList(Collections.emptyList()),null));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.unmodifiableSet(Collections.emptySet()),""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Collections.emptyList(),null));"	0
0	// InitContainerHandlerTest	removeOne	"assertTrue(handler.hasInitContainer(builder,""STR""));"	"assertTrue(handler.hasInitContainer(builder,""STR""));"	1
0	// InitContainerHandlerTest	removeOne	"assertTrue(handler.hasInitContainer(builder,""STR""));"	"assertFalse(handler.hasInitContainer(builder,""STR""));"	0
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java StringUtilsTest	testIsEmptyNonZero	"assertFalse(StringUtils.isNonZero(""STR""));"	assertFalse(StringUtils.isNonZero(null));	0
/	// StringUtilsTest	testIsEmptyNonZero	"assertFalse(StringUtils.isNonZero(""STR""));"	"assertFalse(StringUtils.isNonZero(null))`,herearecompletelydifferentassertstatementsthatcanbegenerated:

Assertion1:
```assertTrue(StringUtils.isNotEmpty(""STR""));"	0
/	// StringUtilsTest	testIsEmptyNonZero	"assertFalse(StringUtils.isNonZero(""STR""));"	"assertFalse(CollectionUtils.isEmpty(ListUtils.asList(""STR"",""STR"",null)));"	0
1	// PuzzleStateTest	actual_cost_is_actual_steps	assertEquals(2,s.getActualCost());	assertTrue(s.isSolution());	0
/	// PuzzleStateTest	actual_cost_is_actual_steps	assertEquals(2,s.getActualCost());	assertNotNull(s);	0
0	adlnet/jxapi ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(actual);	1
0	// ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(activityState.getAgent());	0
/	// ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(activityState);	0
/	// ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(activityState.getAgent().getMbox());	0
/	// ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(REG_ID);	0
/	// ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(REG_ID);	0
/	// ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(REG_ID);	0
/	// ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(activityState.getState());	0
1	adlnet/jxapi VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected.keySet(),actual.keySet());	0
1	// VerbTest	testSetDisplay	assertNotNull(actual);	assertNotNull(actual);	1
2	adlnet/jxapi AttachmentResultTest	testSetAttachments	assertNotNull(a);	assertNotNull(a);	1
1	// ACollectionHelperTest	testMkStringSeparator	"assertEquals(""STR"",ACollectionHelper.mkString(Arrays.asList(),""STR""));"	"assertEquals(""STR"",ACollectionHelper.mkString(Collections.emptyList(),""STR""));"	0
/	// ACollectionHelperTest	testMkStringSeparator	"assertEquals(""STR"",ACollectionHelper.mkString(Arrays.asList(),""STR""));"	"assertEquals(""STR"",ACollectionHelper.mkString(Collections.emptyList(),""STR""));"	0
/	// ACollectionHelperTest	testMkStringSeparator	"assertEquals(""STR"",ACollectionHelper.mkString(Arrays.asList(),""STR""));"	"assertNotNull(ACollectionHelper.mkString(Arrays.asList(""STR"",""STR""),""STR""));"	0
0	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertEquals(CachedExtractor.class,extractor.getClass());	0
1	// TestNanolets	testBaseRoutePrioritizerAddNullRoute	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
/	// TestNanolets	testBaseRoutePrioritizerAddNullRoute	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
0	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	assertTrue(method!=null);	0
/	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	assertNotNull(method);	0
/	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	"assertNotNull(method,""STR"");"	0
/	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	assertNotNull(method);	0
1	hazelcast/hazelcast-simulator PerformanceStatsCollectorTest	testFormatPerformanceNumbers_avgLatencyOverMicrosThreshold	"assertTrue(performance.contains(""STR""));"	assertFalse(performanceStats.isEmpty());	0
/	// PerformanceStatsCollectorTest	testFormatPerformanceNumbers_avgLatencyOverMicrosThreshold	"assertTrue(performance.contains(""STR""));"	assertNotNull(performance);	0
2	// CommonUtils_SleepTest	testSleepTimeUnit	"assertTrue(format(""STR"",duration),duration>0);"	assertTrue(duration<=durationLimit);	0
/	// CommonUtils_SleepTest	testSleepTimeUnit	"assertTrue(format(""STR"",duration),duration>0);"	assertFalse(duration>durationLimit);	0
0	// OCreateClusterStatementExecutionTest	testBlob	assertTrue(db.getClusterIdByName(clusterName)>0);	"assertNotEquals(-1,result.next().getField(""STR"").getValue().nVal);"	0
/	// OCreateClusterStatementExecutionTest	testBlob	assertTrue(db.getClusterIdByName(clusterName)>0);	"assertNotNull(result.next().getField(""STR"").getValue());"	0
1	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	assertEquals(id,prop.getId());	1
/	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	assertEquals(id,prop.getId());	1
/	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	"assertEquals(id,oClass.getProperty(""STR"").getId());"	0
2	orientechnologies/orientdb LuceneSpatialMiscFunctionsTest	testStEqualsPoint	"assertEquals(next.field(""STR""),true);"	"assertEquals(next.field(""STR""),true);"	1
4	orientechnologies/orientdb ODatabaseDocumentTxTest	testCreateEdgeClass	assertNotNull(clazz);	assertTrue(clazz.isEdgeType());	0
4	// ODatabaseDocumentTxTest	testCreateEdgeClass	assertNotNull(clazz);	assertNotNull(clazz);	1
5	// OPropertyListIndexDefinitionTest	testCreateValueWrongParameterArrayParams	"assertNull(propertyIndex.createValue(""STR""));"	???;	0
/	// OPropertyListIndexDefinitionTest	testCreateValueWrongParameterArrayParams	"assertNull(propertyIndex.createValue(""STR""));"	???;	0
0	fabric8io/fabric8-maven-plugin SpringBootUtilTest	testMultipleProfilesParsing	assertTrue(props.size()>0);	assertNotNull(props);	0
0	// AOptionTest	testSome	"assertEquals(""STR"",s.get());"	assertFalse(s.isEmpty());	0
/	// AOptionTest	testSome	"assertEquals(""STR"",s.get());"	assertNotNull(s);	0
0	// EnvironmentTest	testSetupWithCompleteJob	"assertEquals(""STR"",mojo.serviceName);"	assertNotNull(serviceMock.getEnvironment());	0
/	// EnvironmentTest	testSetupWithCompleteJob	"assertEquals(""STR"",mojo.serviceName);"	assertNotNull(serviceMock.getBuildUrl());	0
/	// EnvironmentTest	testSetupWithCompleteJob	"assertEquals(""STR"",mojo.serviceName);"	assertNotNull(serviceMock.getJobId());	0
/	// EnvironmentTest	testSetupWithCompleteJob	"assertEquals(""STR"",mojo.serviceName);"	assertNotNull(mojo.serviceName);	0
0	NanoHttpd/nanohttpd TestNanolets	checkIniParameter2	"assertEquals(""STR"",newRouterNanoHTTPD.UriResource(""STR"",100,null,""STR"").initParameter(String.class));"	assertNull(RouterNanoHTTPD.normalizeUri(null));	0
1	// TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
1	// TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	0
2	// TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	assertNotNull(router);	0
0	// MorphologyTest	reziduāļi	assertTrue(m.isRecognized());	assertTrue(m.isRecognized());	1
0	// MorphologyTest	reziduāļi	assertTrue(m.isRecognized());	"assertTrue(locītājs.analyze(""STR"").isRecognized());"	0
1	// MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	0
0	hazelcast/hazelcast-simulator TestExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertEquals(cause,exception.getCause());	1
0	// TestExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertSame(cause,exception.getCause());	0
/	// TestExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertNotNull(exception.getCause());	0
1	// TestExceptionTest	testConstructor_withMessageFormat_singleArgument	"assertEquals(""STR"",exception.getMessage());"	assertEquals(TestException.class,exception.getClass());	0
/	// TestExceptionTest	testConstructor_withMessageFormat_singleArgument	"assertEquals(""STR"",exception.getMessage());"	assertNull(exception.getCause());	0
/	// TestExceptionTest	testConstructor_withMessageFormat_singleArgument	"assertEquals(""STR"",exception.getMessage());"	assertNotNull(exception);	0
2	// PerformanceStatsCollectorTest	testGet	assertFalse(performanceStats.isEmpty());	assertFalse(performanceStats.isEmpty());	1
2	// PerformanceStatsCollectorTest	testGet	assertFalse(performanceStats.isEmpty());	"assertFalse()`methodprovidedbythe`org.junit.Assert`classtoverifyafalsecondition.Therefore,wecangenerateanappropriateJUnitassertstatementasfollows:

`assertTrue(performanceStats.isEmpty());"	0
3	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals(5,workerAddress(5,2).getAgentIndex());	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertFalse(workerAddress(5,2).toString().contains(""STR""));"	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertFalse(workerAddress(5,2).toString().contains(""STR""));"	0
4	hazelcast/hazelcast-simulator AnnotatedMethodRetrieverTest	testSubClass_methodFoundInSuper	assertEquals(1,methodList.size());	assertEquals(1,methodList.size());	1
/	// AnnotatedMethodRetrieverTest	testSubClass_methodFoundInSuper	assertEquals(1,methodList.size());	assertNotNull(methodList);	0
/	// AnnotatedMethodRetrieverTest	testSubClass_methodFoundInSuper	assertEquals(1,methodList.size());	assertEquals(1,methodList.size());	1
/	// AnnotatedMethodRetrieverTest	testSubClass_methodFoundInSuper	assertEquals(1,methodList.size());	assertEquals(true,!methodList.isEmpty());	0
0	orientechnologies/orientdb OETLCSVExtractorTest	testNullValueInCell	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
0	// OETLCSVExtractorTest	testNullValueInCell	assertFalse(res.isEmpty());	assertNotNull(res);	0
1	// OVarIntSerializerTest	serializePosition	assertEquals(OVarIntSerializer.readAsLong(bytes),16238l);	???;	0
/	// OVarIntSerializerTest	serializePosition	assertEquals(OVarIntSerializer.readAsLong(bytes),16238l);	assertNotNull(bytes.fitBytes());	0
3	orientechnologies/orientdb ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	1
3	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertEquals(OType.STRING,doc.fieldType(""STR""));"	0
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertTrue(doc.fieldType(""STR"")!=null);"	0
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertTrue(doc.fieldType(""STR"")!=null);"	0
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertNull(doc.fieldType(""STR""));"	0
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertNotNull(doc.field(""STR""));"	0
4	// RemoteTransactionSupportTest	testRefFlushedInTransaction	assertEquals(1,result.stream().count());	"assertEquals(""STR"",result.first().field(""STR""));"	0
/	// RemoteTransactionSupportTest	testRefFlushedInTransaction	assertEquals(1,result.stream().count());	assertFalse(CLASS_2.isEmpty());	0
/	// RemoteTransactionSupportTest	testRefFlushedInTransaction	assertEquals(1,result.stream().count());	assertFalse(CLASS_2.isEmpty());	0
/	// RemoteTransactionSupportTest	testRefFlushedInTransaction	assertEquals(1,result.stream().count());	assertNotNull(result);	0
6	// OTruncateClassStatementExecutionTest	testTruncateVertexClassSubclassesWithIndex	assertEquals(toList(result).size(),2);	assertTrue(result.hasNext());	0
/	// OTruncateClassStatementExecutionTest	testTruncateVertexClassSubclassesWithIndex	assertEquals(toList(result).size(),2);	"assertTrue(result.stream().noneMatch(r->!r.getColumnValueByName(""STR"").equals(""STR"")));"	0
/	// OTruncateClassStatementExecutionTest	testTruncateVertexClassSubclassesWithIndex	assertEquals(toList(result).size(),2);	assertNotNull(result.getExecutionPlan());	0
7	// OCompositeKeyTest	testDocumentSerializationCompositeKeyNull	assertEquals(compositeKeyOne,compositeKeyTwo);	assertFalse(compositeKey.equals(null));	0
0	amlinv/stat-collection-utils BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(this.processor.getAttributeInjector());	1
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleStateTest	estimated_cost_is_zero_when_solved	assertEquals(0,s.getEstimatedCost());	assertTrue(s.isSolution());	0
0	OpenLiberty/ci.common DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(targetFile);	0
1	OpenLiberty/ci.common DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_lowercase	assertEquals(expectedDockerfileLines,dockerfileLines);	assertEquals(expectedDockerfileLines,dockerfileLines);	1
1	// DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_lowercase	assertEquals(expectedDockerfileLines,dockerfileLines);	assertArrayEquals(expectedDockerfileLines.toArray(),dockerfileLines.toArray());	0
/	// DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_lowercase	assertEquals(expectedDockerfileLines,dockerfileLines);	assertTrue(expectedDockerfileLines.containsAll(dockerfileLines));	0
0	// TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
0	// TestPressure	testToInHg	assertEquals(expected,actual);	"assertTrue(Pressure.toInHg(802).contains(""STR""));"	0
0	TooTallNate/Java-WebSocket Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertEquals(1,draft_6455.getKnownExtensions().size());	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertNotNull(createdFrame);	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	"assertEquals(Collections.singletonList(curframe),draft_6455.createFrames(""STR"",false));"	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertEquals(Collections.singletonList(curframe),createdFrame);	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	"assertEquals(1,draft_6455.createFrames(""STR"",false).size());"	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertEquals(Collections.singletonList((Framedata)curframe),createdFrame);	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	"assertEquals(Collections.singletonList((Framedata)curframe),draft_6455.createFrames(""STR"",false));"	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertFalse(createdFrame.get(0).getTransfereMasked());	0
0	DigitalPebble/storm-crawler BasicURLNormalizerTest	testDontFixMangledQueryString	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
0	// BasicURLNormalizerTest	testDontFixMangledQueryString	assertEquals(expectedResult,normalizedUrl);	"assertEquals(""STR"",normalizedUrl);"	0
/	// BasicURLNormalizerTest	testDontFixMangledQueryString	assertEquals(expectedResult,normalizedUrl);	"assertTrue(normalizedUrl.contains(""STR""));"	0
0	// ColorMapTest	testVerySimple	assertEquals(1,cm.subcolor('a'));	assertEquals(1,cm.subcolor('a'));	1
0	// ColorMapTest	testVerySimple	assertEquals(1,cm.subcolor('a'));	assertEquals(cm.subcolor('b'),cm.subcolor('c'));	0
0	// ReflectionUtilsTest	testSetFieldValue	assertNull(setFieldTest.injectField);	assertNotNull(setFieldTest);	0
1	// TagUtilsTest	parseTags	"assertEquals(toMap(""STR"",""STR"",""STR"",""STR"",""STR"",""STR""),result);"	assertNotNull(result);	0
0	trautonen/coveralls-maven-plugin WildcardsTest	testMatchesAgainstWildcards	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	0
/	// WildcardsTest	testMatchesAgainstWildcards	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	0
/	// WildcardsTest	testMatchesAgainstWildcards	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(""STR"",""STR""));"	0
1	// JsonWriterTest	testSubDirectoryCreation	assertTrue(newJsonWriter(job,f).getCoverallsFile().getParentFile().isDirectory());	assertFalse(f.exists());	0
/	// JsonWriterTest	testSubDirectoryCreation	assertTrue(newJsonWriter(job,f).getCoverallsFile().getParentFile().isDirectory());	assertFalse(f.isDirectory());	0
/	// JsonWriterTest	testSubDirectoryCreation	assertTrue(newJsonWriter(job,f).getCoverallsFile().getParentFile().isDirectory());	assertNotNull(job());	0
2	// TravisTest	testGetBranch	"assertEquals(""STR"",newTravis(env()).getBranch());"	"assertEquals(""STR"",newTravis(env()).getBranch());"	1
2	// TravisTest	testGetBranch	"assertEquals(""STR"",newTravis(env()).getBranch());"	"assertEquals(""STR"",newTravis(env()).getJobId());"	0
1	// OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertEquals(1,getResult().size());	0
/	// OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertFalse(getResult().isEmpty());	0
/	// OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertNotNull(getResult());	0
2	// CharSerializerTest	testSerialize	assertEquals(charSerializer.deserialize(stream,0),OBJECT);	assertArrayEquals(expectedSerializedArray,stream);	0
/	// CharSerializerTest	testSerialize	assertEquals(charSerializer.deserialize(stream,0),OBJECT);	assertNotNull(deserialize(stream,0));	0
3	// BlueprintsTest	testPersistentRIDAfterCommit	assertTrue(((ORID)v.getId()).isPersistent());	assertNotNull(v);	0
4	// OCompositeIndexDefinitionTest	testDocumentToIndexMapValueSuccessful	assertEquals(collectionResult.size(),2);	assertEquals(collectionResult.size(),2);	1
5	// OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyTwoNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(null,12)));	assertEquals(result.size(),1);	0
6	orientechnologies/orientdb OClusterRepairInfoTaskTest	testSerialization	assertEquals(from.getClusterId(),to.getClusterId());	assertEquals(100,to.getClusterId());	0
6	// OClusterRepairInfoTaskTest	testSerialization	assertEquals(from.getClusterId(),to.getClusterId());	assertEquals(from.getClusterId(),to.getClusterId());	1
/	// OClusterRepairInfoTaskTest	testSerialization	assertEquals(from.getClusterId(),to.getClusterId());	assertNotNull(to.getClusterId());	0
7	orientechnologies/orientdb SQLCreateVertexAndEdgeTest	testNewParser	assertEquals(v1.getClassName(),OrientVertexType.CLASS_NAME);	assertNotNull(v1);	0
0	// StatementReferenceTest	testSetId	assertNotNull(actual);	assertTrue(expected.equals(actual));	0
0	// StatementReferenceTest	testSetId	assertNotNull(actual);	assertNotNull(actual);	1
0	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testGetSetJmxMbeanConnectorFactory	assertTrue(this.factory.getJmxMBeanConnectionFactory()instanceofDefaultJmxMBeanConnectionFactory);	assertNotNull(this.factory.getLog());	0
0	// ACollectionHelperTest	testGroupByCustomEquality	assertEquals(2,grouped.size());	???;	0
0	// AbstractServiceSetupTest	testGetProperty	"assertEquals(""STR"",create(env).getProperty(""STR""));"	assertFalse(env.isEmpty());	0
0	// HostURLFilterTest	testWithinDomain	"assertEquals(""STR"",filterResult);"	assertEquals(urlToFilter,filterResult);	0
0	redraiment/jactiverecord SeqTest	testJoinListNull	"assertEquals(""STR"",Seq.join(null,""STR""));"	"assertNotNull(Seq.join(null,""STR""));"	0
2	// TSqlBuilderTest	testPaging	"assertEquals(""STR"",sql.toString());"	"assertNotNull(""STR"".equalsIgnoreCase(sql.toString()));"	0
/	// TSqlBuilderTest	testPaging	"assertEquals(""STR"",sql.toString());"	"assertNotNull(""STR"".equalsIgnoreCase(sql.toString()));"	0
0	// AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodWithoutArgs	"assertEquals(""STR"",method.getName());"	assertEquals(1,annotatedMethodRetriever.findAll().size());	0
/	// AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodWithoutArgs	"assertEquals(""STR"",method.getName());"	assertNotNull(prepareAnnotation);	0
/	// AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodWithoutArgs	"assertEquals(""STR"",method.getName());"	assertNotNull(method);	0
1	hazelcast/hazelcast-simulator RegistryTest	testGetAgents_withCount	assertEquals(3,registry.agentCount());	assertEquals(3,registry.agentCount());	1
/	// RegistryTest	testGetAgents_withCount	assertEquals(3,registry.agentCount());	assertEquals(3,registry.agentCount());	1
1	// RegistryTest	testGetAgents_withCount	assertEquals(3,registry.agentCount());	assertFalse(registry.agentCount()<3);	0
2	hazelcast/hazelcast-simulator RegistryTest	testRemoveWorker_viaSimulatorAddress	assertEquals(5,registry.workerCount());	assertEquals(5,registry.workerCount());	1
2	// RegistryTest	testRemoveWorker_viaSimulatorAddress	assertEquals(5,registry.workerCount());	assertTrue(registry.workerCount()>=5);	0
/	// RegistryTest	testRemoveWorker_viaSimulatorAddress	assertEquals(5,registry.workerCount());	assertNotNull(registry.getWorkers().get(0));	0
0	// DuplicateDictionaryIndexChangesTxTest	testDuplicateNullsOnCreate	"assertEquals(person2,index.get(""STR""));"	"assertTrue(db.get(index.getKey()).hasMultiple(index.getKey(),""STR"",""STR""));"	0
/	// DuplicateDictionaryIndexChangesTxTest	testDuplicateNullsOnCreate	"assertEquals(person2,index.get(""STR""));"	"assertTrue(db.get(index.getKey()).count(OQueryBuilder.KEY_EQUALS,""STR"",""STR"")>1);"	0
/	// DuplicateDictionaryIndexChangesTxTest	testDuplicateNullsOnCreate	"assertEquals(person2,index.get(""STR""));"	assertFalse(db.get(index.getKey()).hasId(person1.getOid()));	0
1	// OCommandExecutorSQLSelectTest	testMatches	assertEquals(result.size(),1);	assertTrue(result.size()>0);	0
/	// OCommandExecutorSQLSelectTest	testMatches	assertEquals(result.size(),1);	"assertTrue(result.contains(newODocument(""STR"",""STR"")));"	0
/	// OCommandExecutorSQLSelectTest	testMatches	assertEquals(result.size(),1);	assertNotNull(result);	0
2	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertEquals(results.size(),1);	1
2	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	"assertEquals(results.get(0).get(""STR""),""STR"");"	0
/	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertTrue(results.contains(expectedResult));	0
/	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertNotNull(sql);	0
/	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertNotNull(car.getEngine());	0
3	// OCommandExecutorSQLSelectTest	testMatchesWithQuotes3	assertEquals(results.size(),1);	assertNotNull(results);	0
4	// OCommandExecutorSQLSelectTest	testBooleanParams	assertEquals(qResult.size(),1);	assertFalse(qResult.isEmpty());	0
/	// OCommandExecutorSQLSelectTest	testBooleanParams	assertEquals(qResult.size(),1);	assertNotNull(qResult.get(0));	0
5	// OSimpleKeyIndexDefinitionTest	testGetKeyTypes	assertEquals(simpleKeyIndexDefinition.getTypes(),newOType[]{OType.INTEGER,OType.STRING});	assertArrayEquals(keyTypes,actual);	0
/	// OSimpleKeyIndexDefinitionTest	testGetKeyTypes	assertEquals(simpleKeyIndexDefinition.getTypes(),newOType[]{OType.INTEGER,OType.STRING});	assertNotNull(getTypes());	0
6	orientechnologies/orientdb ODocumentTest	testNoDirtySameBytes	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
7	// OSqlScriptExecutorTest	testMultipleCreateEdgeOnTheSameLet	assertEquals(2,result.stream().count());	assertNotNull(result);	0
7	// OSqlScriptExecutorTest	testMultipleCreateEdgeOnTheSameLet	assertEquals(2,result.stream().count());	assertEquals(2,result.stream().count());	1
9	orientechnologies/orientdb OMathExpressionTest	testAnd	assertTrue(resultinstanceofInteger);	assertEquals(1,result);	0
/	// OMathExpressionTest	testAnd	assertTrue(resultinstanceofInteger);	assertNull();	0
/	// OMathExpressionTest	testAnd	assertTrue(resultinstanceofInteger);	assertEquals(0,result);	0
/	// OMathExpressionTest	testAnd	assertTrue(resultinstanceofInteger);	assertTrue(result.equals(Integer.valueOf(1)));	0
/	// OMathExpressionTest	testAnd	assertTrue(resultinstanceofInteger);	assertFalse(result);	0
11	// OSelectStatementExecutionTest	testSelectNoTargetSkip	assertFalse(result.hasNext());	assertTrue(result.estimateSize()>0&&result.estimateSize()<4);	0
/	// OSelectStatementExecutionTest	testSelectNoTargetSkip	assertFalse(result.hasNext());	assertNotNull(result.next());	0
0	// ULTest	testULFromString	assertEquals(expected,fromString);	assertEquals(expected.hashCode(),fromString.hashCode());	0
/	// ULTest	testULFromString	assertEquals(expected,fromString);	assertTrue(Arrays.equals(expected.bytes,fromString.bytes));	0
1	// ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(activityState);	0
/	// ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(activityState.getState());	0
2	adlnet/jxapi VerbsTest	testAttended	assertNotNull(actual);	assertNotNull(actual);	1
0	// RpcConnectionManagerTest	testGet	assertNull(pool);	assertEquals(expectedConnection,pool);	0
1	// WildcardsTest	testMatchesAgainstText	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	0
/	// WildcardsTest	testMatchesAgainstText	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(""STR"",""STR""));"	0
0	// CommUtilTest	testBC	"assertEquals(""STR"",CommUtil.toDBC(""STR""));"	"assertEquals(""STR"",CommUtil.toDBC(""STR""));"	1
1	// ProtocolTest	testCopyInstance	assertEquals(protocol0,protoocl1);	assertTrue(protocol0.acceptProvidedProtocol(protoocl1.getProvidedProtocol()));	0
0	// OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.containsAll(anotherCompositeKey));	0
1	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertEquals(10,idProperty.getMax());	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	"assertTrue(idProperty.getMax().equals(""STR""));"	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertEquals(5,idProperty.getDefaultValue());	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	"assertEquals(""STR"",idProperty.getDefaultValue());"	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	"assertEquals(""STR"",idProperty.getName());"	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	"assertEquals(""STR"",idProperty.getMin());"	0
2	// CheckClassTypeStepTest	shouldCheckSubclasses	assertEquals(0,result.stream().count());	assertTrue(result.next().getBoolean());	0
/	// CheckClassTypeStepTest	shouldCheckSubclasses	assertEquals(0,result.stream().count());	"assertTrue(result.next().getBoolean(""STR""));"	0
/	// ORemoteLiveQueryPushTest	testLiveEvents	assertEquals(mock.countCreate,1);	assertNotNull(request.getEvents());	0
4	// ODocumentSchemalessBinarySerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	assertEquals(true,document.equals(extr));	0
/	// ODocumentSchemalessBinarySerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	"assertNotEquals(embedded,extr.field(""STR""));"	0
/	// ODocumentSchemalessBinarySerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	assertEquals(document,extr);	0
/	// ODocumentSchemalessBinarySerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	"assertNotNull(extr.field(""STR""));"	0
0	// EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	assertEquals(expected,m.markdown(spaces));	0
/	// EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	"assertTrue(m.markdown(spaces).matches(""STR""));"	0
/	// EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	assertNotNull(m.markdown(spaces));	0
0	// PuzzleTest	puzzle_can_swap_blank	assertEquals(4,c.getBlankIndex());	assertFalse(c.isSolved());	0
/	// PuzzleTest	puzzle_can_swap_blank	assertEquals(4,c.getBlankIndex());	assertFalse(p.equals(c));	0
0	// InstallFeatureUtilTest	testCombineToSet	assertEquals(5,result.size());	"assertTrue(result.contains(""STR""));"	0
/	// InstallFeatureUtilTest	testCombineToSet	assertEquals(5,result.size());	"assertFalse(result.contains(""STR""));"	0
/	// InstallFeatureUtilTest	testCombineToSet	assertEquals(5,result.size());	assertNotNull(result);	0
0	TooTallNate/Java-WebSocket PerMessageDeflateExtensionTest	testGetInflater	assertEquals(deflateExtension.getInflater().getRemaining(),newInflater(true).getRemaining());	assertNotNull(deflateExtension.getInflater());	0
0	// MatcherTest	findPrefix	assertTrue(matcher.find());	assertTrue(matcher.find());	1
0	// MatcherTest	findPrefix	assertTrue(matcher.find());	assertTrue(matcher.find(0));	0
0	// MorphologyTest	ts	assertTrue(nopūsts.isRecognized());	assertNull(nopūsts.getCorrectWordform());	0
0	// JMXRemoteUrlConnectionFactoryTest	testGetSetLog	assertNotNull(this.factory.getLog());	assertTrue(this.mockLog!=null);	0
0	// JMXRemoteUrlConnectionFactoryTest	testGetSetLog	assertNotNull(this.factory.getLog());	assertNotNull(this.factory.getLog());	1
0	// OMatchStatementExecutionTest	testFriendsWithName	assertEquals(1,qResult.size());	assertEquals(numberOfExpectedFriendsWithName,qResult.size());	0
/	// OMatchStatementExecutionTest	testFriendsWithName	assertEquals(1,qResult.size());	"assertTrue(qResult.stream().anyMatch(doc->doc.field(""STR"").equals(""STR"")));"	0
0	// TextExtractorTest	testExclusionCase	"assertEquals(""STR"",text);"	"assertFalse(text.contains(""STR""));"	0
/	// TextExtractorTest	testExclusionCase	"assertEquals(""STR"",text);"	"assertFalse(text.matches(""STR""));"	0
/	// TextExtractorTest	testExclusionCase	"assertEquals(""STR"",text);"	"assertFalse(text.contains(""STR""));"	0
/	// TextExtractorTest	testExclusionCase	"assertEquals(""STR"",text);"	assertNotNull(text);	0
1	// MetadataFilterTest	testFilterNoMD	assertEquals(url.toExternalForm(),filterResult);	"assertFalse(filterResult.contains(""STR""));"	0
/	// MetadataFilterTest	testFilterNoMD	assertEquals(url.toExternalForm(),filterResult);	assertNotNull(filter.filter(url,metadata,url.toExternalForm()));	0
2	// BasicIndexingTest	testOtherHostCanonicalURL	"assertEquals(""STR"",fields.get(""STR""));"	assertNotNull(fields);	0
/	// MoneyToStrTest	checkEURRUSCustom	"assertEquals(""STR"",moneyToStrCustom.convert(V_300D));"	assertNotNull(moneyToStrCustom);	0
1	javadev/moneytostr-russian MoneyToStrTest	checkEURRUS	"assertEquals(""STR"",moneyToStrEURRUS.convert(V_300D));"	"assertEquals(""STR"",moneyToStrEURRUS.convert(V_300D));"	1
/	// MoneyToStrTest	checkEURRUS	"assertEquals(""STR"",moneyToStrEURRUS.convert(V_300D));"	"assertFalse(moneyToStrEURRUS.convert(V_300D).contains(""STR""));"	0
/	// MoneyToStrTest	checkEURRUS	"assertEquals(""STR"",moneyToStrEURRUS.convert(V_300D));"	"assertFalse(moneyToStrEURRUS.convert(V_300D).contains(""STR""));"	0
/	// MoneyToStrTest	checkEURRUS	"assertEquals(""STR"",moneyToStrEURRUS.convert(V_300D));"	assertNotNull(moneyToStrEURRUS.convert(V_300D));	0
2	javadev/moneytostr-russian MoneyToStrTest	checkRURUKR	"assertEquals(""STR"",moneyToStrRUR.convert(V_300D));"	"assertEquals(""STR"",moneyToStrRUR.convert(V_300D));"	1
/	// MoneyToStrTest	checkRURUKR	"assertEquals(""STR"",moneyToStrRUR.convert(V_300D));"	"assertEquals(""STR"",moneyToStrRUR.convert(V_300D));"	1
/	// MoneyToStrTest	checkRURUKR	"assertEquals(""STR"",moneyToStrRUR.convert(V_300D));"	assertNotEquals(moneyToStrRUR.convert(-V_300D),moneyToStrRUR.convert(V_300D));	0
/	// MoneyToStrTest	checkRURUKR	"assertEquals(""STR"",moneyToStrRUR.convert(V_300D));"	"assertTrue(!moneyToStrRUR.convert(0.0).equals(""STR""));"	0
0	// GeneralTest	testGetName	"assertEquals(""STR"",newGeneral(env()).getName());"	assertEquals(propertyValue,getName());	0
0	// CABACTest	testMBSkipFlag	assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertEquals(m[pos],-1);	0
0	// AListTest	testFromJavaUtil	assertEquals(l,l2);	assertTrue(l.equals(l2));	0
/	// AListTest	testFromJavaUtil	assertEquals(l,l2);	"assertTrue(l.asJavaUtilList().containsAll(Arrays.asList(""STR"",""STR"",""STR"")));"	0
/	// AListTest	testFromJavaUtil	assertEquals(l,l2);	assertTrue(l.asJavaUtilList().stream().distinct().count()==l2.asJavaUtilList().stream().distinct().count());	0
1	// AListTest	testNil	assertEquals(0,AList.nil().size());	assertEquals(0,myList.size());	0
/	// AListTest	testNil	assertEquals(0,AList.nil().size());	assertNull(myList);	0
2	// AJsonSerHelperTest	testDoubleWithFrac1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result);"	1
2	// AJsonSerHelperTest	testDoubleWithFrac1	"assertEquals(""STR"",result);"	"assertFalse(result.contains(""STR""));"	0
3	arnohaase/a-foundation ADiGraphTest	testNodesWithoutEdges	"assertTrue(eqSet(graph.edges(),edge(""STR"",""STR"")));"	assertFalse(graph.hasCycles());	0
0	Yubico/yubico-java-client YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(isValidOTPFormat(otp));	0
/	// YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(isLongOTPValid);	0
0	tradier/dropwizard-raven DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt));	0
/	// DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt2).isNeutral());	0
0	// MergeResourceTest	testMergeDeploymentMetadataWithNoSpec	assertNotNull(answer);	assertNotNull(answer);	1
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java StringUtilsTest	testIsEmpty	"assertFalse(StringUtils.isEmpty(""STR""));"	assertFalse(MyTest.class.getConstructor().newInstance().isEmpty(null));	0
/	// StringUtilsTest	testIsEmpty	"assertFalse(StringUtils.isEmpty(""STR""));"	"assertFalse(MyTest.class.getConstructor().newInstance().isEmpty(""STR""));"	0
/	// StringUtilsTest	testIsEmpty	"assertFalse(StringUtils.isEmpty(""STR""));"	assertFalse(MyTest.class.getConstructor().newInstance().isNotEmpty(null));	0
/	// StringUtilsTest	testIsEmpty	"assertFalse(StringUtils.isEmpty(""STR""));"	"assertFalse()`?Here'sonepossibility:

```
assertEquals("""",MyTest.class.getConstructor().newInstance().isEmpty(""""));"	0
0	OpenLiberty/ci.common DevUtilTest	testReadFileToString	"assertTrue(fileString.equals(""STR""));"	"assertEquals(""STR"",fileString);"	0
/	// DevUtilTest	testReadFileToString	"assertTrue(fileString.equals(""STR""));"	assertNotNull(fileString);	0
1	// DevUtilTest	testDeleteFile	assertTrue(tempSrcFile.exists());	assertTrue(Files.exists(tempTargetFile.toPath()));	0
/	// DevUtilTest	testDeleteFile	assertTrue(tempSrcFile.exists());	assertNotNull(Files.readAllLines(tempSrcFile.toPath()).get(0));	0
0	// PropertyBindingSupport_nestedPropertiesTest	testReconstructObjectGraph	assertNotNull(person.nullArm);	assertNotNull(usedProperties);	0
1	hazelcast/hazelcast-simulator WorkerQueryTest	targetType_whenMember	assertEquals(asList(list.get(1),list.get(3)),result);	assertTrue(result.size()>1);	0
/	// WorkerQueryTest	targetType_whenMember	assertEquals(asList(list.get(1),list.get(3)),result);	assertFalse(result.isEmpty());	0
/	// WorkerQueryTest	targetType_whenMember	assertEquals(asList(list.get(1),list.get(3)),result);	assertFalse(result.size()==0);	0
/	// WorkerQueryTest	targetType_whenMember	assertEquals(asList(list.get(1),list.get(3)),result);	assertEquals(2,result.size());	0
0	// LabelTest	external	"assertEquals(attrs(attr(""STR"",label.external())),attrs(label.external()));"	"assertEquals(attributes(attr(""STR"",true),attr(""STR"",""STR"")),label.decoratedParams());"	0
0	PeterisP/morphology MorphologyTest	ticket37	assertTrue(panest.isRecognized());	assertNotNull(panest);	0
1	// MorphologyTest	apvidvārdi	assertFalse(w.isRecognized());	assertFalse(w.isRecognized());	1
1	// MorphologyTest	apvidvārdi	assertFalse(w.isRecognized());	"assertFalse(locītājs.analyze(""STR"").isRecognized());"	0
2	PeterisP/morphology TokenizeTest	pēdiņas	assertEquals(1,sentences.size());	assertEquals(1,sentences.size());	1
2	// TokenizeTest	pēdiņas	assertEquals(1,sentences.size());	"assertEquals(""Parunasaka:\""Zivsmeklēkurdziļāk,cilvēks,kurlabāk.\"",sentences.get(0).toString());"	0
/	// TokenizeTest	pēdiņas	assertEquals(1,sentences.size());	assertNotNull(sentences);	0
0	// OpenKoreanProcessorJavaTest	testAddWordsToDictionary	"assertEquals(""STR"",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());"	assertEquals(expectedPos,OpenKoreanTextProcessorJava.getPos());	0
0	// ClassCustomSerializerTest	testNormalCustomSerializer	"assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+""STR"",ret);"	assertEquals(String.class,ret.getClass());	0
/	// ClassCustomSerializerTest	testNormalCustomSerializer	"assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+""STR"",ret);"	assertNotNull(ret);	0
0	// OETLJsonExtractorTest	testEmptyCollection	assertEquals(0,getResult().size());	assertEquals(0,proc.getExtractedData().size());	0
1	orientechnologies/orientdb OMatchStatementExecutionTest	testOptional3	assertEquals(1,qResult.size());	assertFalse(qResult.isEmpty());	0
/	// OMatchStatementExecutionTest	testOptional3	assertEquals(1,qResult.size());	"assertNotNull(qResult.get(0).field(""STR""));"	0
2	// ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager.getNewRecords());	0
3	// FloatSerializerTest	testFieldSize	assertEquals(floatSerializer.getObjectSize(null),FIELD_SIZE);	assertEquals(4,size);	0
/	// FloatSerializerTest	testFieldSize	assertEquals(floatSerializer.getObjectSize(null),FIELD_SIZE);	assertNotNull(floatSerializer);	0
4	// MetadataPushTest	testSequencesUpdate	"assertNotNull(secondDatabase.getMetadata().getSequenceLibrary().getSequence(""STR""));"	"assertNotNull(database.getSequences(""STR""));"	0
5	// OSQLMethodKeysTest	testWithOResult	"assertEquals(newLinkedHashSet(Arrays.asList(""STR"",""STR"")),result);"	assertNotNull(result);	0
6	orientechnologies/orientdb OETLCSVExtractorTest	testNullValueInCellEmptyString	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
0	OpenLiberty/ci.common DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	0
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java StringUtilsTest	testEmptyIsEmpty	"assertTrue(StringUtils.isEmpty(""STR""));"	assertFalse(StringUtils.isNonZero(null));	0
/	// StringUtilsTest	testEmptyIsEmpty	"assertTrue(StringUtils.isEmpty(""STR""));"	assertFalse(StringUtils.isEmpty(null));	0
/	// StringUtilsTest	testEmptyIsEmpty	"assertTrue(StringUtils.isEmpty(""STR""));"	assertNotNull(StringUtils.isEmpty(null));	0
0	// PerMessageDeflateExtensionTest	testGetDeflater	assertEquals(deflateExtension.getDeflater().finished(),newDeflater(Deflater.DEFAULT_COMPRESSION,true).finished());	assertFalse(deflateExtension.isClientNoContextTakeover());	0
/	// PerMessageDeflateExtensionTest	testGetDeflater	assertEquals(deflateExtension.getDeflater().finished(),newDeflater(Deflater.DEFAULT_COMPRESSION,true).finished());	assertNotNull(deflateExtension.getDeflater());	0
0	Yubico/yubico-java-client YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertEquals(testPublicId,resultPublicId);	1
0	// YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertTrue(resultPublicId.startsWith(testPublicId));	0
/	// YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertFalse(resultPublicId.length()>testPublicId.length());	0
/	// YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	"assertFalse(resultPublicId.equalsIgnoreCase(""STR""));"	0
0	// RpcConnectionManagerTest	testGetAllWithPoolKey	assertEquals(3,cm.getAll(poolKey).size());	assertNotNull(cm.getAll(poolKey));	0
/	// RpcConnectionManagerTest	testGetAllWithPoolKey	assertEquals(3,cm.getAll(poolKey).size());	"assertNotNull(cm.getAll(""STR""));"	0
0	// MultiPathNodeTest	commonPath	"assertEquals(""STR"",node.getPath());"	"assertEquals(""STR"",node.getPath());"	1
0	// MultiPathNodeTest	commonPath	"assertEquals(""STR"",node.getPath());"	"assertFalse(node.getPath().equals(""STR""));"	0
/	// MultiPathNodeTest	commonPath	"assertEquals(""STR"",node.getPath());"	assertNotNull(node);	0
0	// AJsonSerHelperTest	testDoubleWithFrac0	"assertEquals(""STR"",result);"	"assertTrue(result.contains(""STR""),""STR"");"	0
0	adlnet/jxapi StatementResultTest	testGetMore	assertNotNull(actual);	assertNotNull(actual);	1
0	// StatementResultTest	testGetMore	assertNotNull(actual);	assertNotNull(statementResult.getMore());	0
1	adlnet/jxapi VerbsTest	testMastered	assertNotNull(actual);	assertNotNull(actual);	1
2	// ActorTest	testGetMbox	assertNotNull(actual);	assertTrue(agent.getMbox()!=null);	0
/	// ActorTest	testGetMbox	assertNotNull(actual);	assertNotNull(agent.getMbox());	0
0	// BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertTrue(testCore.warehouseDir()!=null);	0
/	// BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertNotNull(testCore.warehouseDir());	0
0	// PictureTest	testToAndFrom	assertArrayEquals(Y,resultHbd.getPlaneData(0));	assertArrayEquals(resultHbd.getData()[0],pictureHbd.getData()[0]);	0
/	// PictureTest	testToAndFrom	assertArrayEquals(Y,resultHbd.getPlaneData(0));	assertEquals(pictureHbd.getPlaneData(plane),resultHbd.getPlaneData(plane));	0
/	// PictureTest	testToAndFrom	assertArrayEquals(Y,resultHbd.getPlaneData(0));	assertArrayEquals(pictureHbd.getData()[0],resultHbd.getData()[0]);	0
0	DigitalPebble/storm-crawler MaxDepthFilterTest	testCustomDepthZero	assertEquals(null,filterResult);	assertEquals(null,filter.filter(url,metadata,url.toExternalForm()));	0
/	// MaxDepthFilterTest	testCustomDepthZero	assertEquals(null,filterResult);	"assertTrue(filterResult==null||filterResult.indexOf(""STR"")==-1);"	0
0	// MaxDepthFilterTest	testCustomDepthZero	assertEquals(null,filterResult);	assertEquals(null,filterResult);	1
1	// StackOverflowTest	testNamespaceExtraction	assertEquals(1,output.getEmitted().size());	assertNotNull(metadata);	0
0	// MorphologyTest	vairāki	assertTrue(vairāki.isRecognized());	assertNotNull(vairāki);	0
2	// MorphologyTest	riebties	assertTrue(riebties.isRecognized());	assertNotNull(riebties);	0
0	// PropertyBindingSupport_bind0_NumericalTest	bind_short_whitespace	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertNotNull(bind0(testObject,""STR"",""STR""));"	0
1	// TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer);	0
/	// TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer.getTestInstance()!=null);	0
1	// RemoteTransactionSupportTest	testQueryUpdateCreatedInTxTransaction	assertTrue(result.hasNext());	assertNotNull(result);	0
2	// OScriptExecutionTest	testReturnInIf2	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertEquals(""STR"",item.getProperty(""STR""));"	1
3	// ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	"assertEquals(expectedValues,document.getCollectionTimeLine(""STR"").getMultiValueChangeEvents());"	0
/	// ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	"assertEquals(Collections.emptyList(),document.getCollectionTimeLine(""STR"").getMultiValueChangeEvents());"	0
/	// ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	"assertEquals(4,document.getCollectionTimeLine(""STR"").getMultiValueChangeEvents().size());"	0
/	// CommUtilTest	testBitValue	"assertEquals(""STR"",CommUtil.hexdump(CommUtil.bitValue(b)));"	assertNotNull(CommUtil.bitSet(bs.getBytes()));	0
0	TooTallNate/Java-WebSocket Draft_6455Test	testToString	"assertEquals(""STR"",draft_6455.toString());"	assertEquals(1,draft_6455.getKnownExtensions().size());	0
/	// Draft_6455Test	testToString	"assertEquals(""STR"",draft_6455.toString());"	assertNotNull(draft_6455);	0
/	// Draft_6455Test	testToString	"assertEquals(""STR"",draft_6455.toString());"	assertNotNull(draft_6455.getExtension());	0
0	// MorphologyTest	rakiens	assertTrue(w.isRecognized());	assertFalse(w.wordforms.contains(null));	0
0	// ResourceUtilTest	simple	assertTrue(ResourceUtil.jsonEquals(first,same));	assertNotNull(first);	0
0	basis-technology-corp/tcl-regex-java SmpTest	find	assertTrue(matcher.find());	assertTrue(matcher.find());	1
0	// SmpTest	find	assertTrue(matcher.find());	assertTrue(matcher.find(5));	0
/	// SmpTest	find	assertTrue(matcher.find());	assertTrue(matcher.lookingAt());	0
0	trautonen/coveralls-maven-plugin WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	1
0	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertFalse(Wildcards.matches(""STR"",""STR""));"	0
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertFalse(Wildcards.matches(""STR"",""STR""));"	0
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertFalse(Wildcards.matches(""STR"",""STR""));"	0
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	1
0	// ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertFalse(graph.isTree());	0
1	arnohaase/a-foundation ADiGraphTest	testTree	assertFalse(graph.hasCycles());	assertTrue(graph.isAcyclic());	0
1	// ADiGraphTest	testTree	assertFalse(graph.hasCycles());	assertFalse(graph.hasCycles());	1
0	// MkvBlockTest	testReadingXiphV2	assertEquals(12,be.headerSize);	assertEquals(60,be.headerSize);	0
/	// MkvBlockTest	testReadingXiphV2	assertEquals(12,be.headerSize);	???;	0
1	// LabelTest	markdown	"assertEquals(""STR"",Label.markdown(""STR"").value);"	assertEquals(expectedMarkdown,markdown(inputMarkdown));	0
/	// LabelTest	markdown	"assertEquals(""STR"",Label.markdown(""STR"").value);"	"assertEquals(""STR"",markdown(""STR"").serialized().toString());"	0
/	// LabelTest	markdown	"assertEquals(""STR"",Label.markdown(""STR"").value);"	assertNull(markdown(null));	0
0	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testCreateConnectionUsingSystemProperties	assertSame(result,this.mockJmxMbeanConnection);	assertNotNull(result);	0
1	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(this.factory.getLog());	0
/	// JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(this.factory.getJmxServiceUrlFactory());	0
2	// ParameterReplacerTest	testReplaceObjectNameParameters	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result);"	1
2	// ParameterReplacerTest	testReplaceObjectNameParameters	"assertEquals(""STR"",result);"	assertNotNull(result);	0
3	amlinv/stat-collection-utils ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertSame(target,objectQueryInfo.getTarget());	1
3	// ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertNotNull(objectQueryInfo.getTarget());	0
5	amlinv/stat-collection-utils JmxAttributePollerTest	testGetSetLog	assertNotNull(this.poller.getLog());	assertNotNull(this.poller.getLog());	1
1	// BytesContainerTest	testSimple	assertNotNull(bytesContainer.bytes);	assertTrue(bytesContainer.bytes.length==64);	0
/	// BytesContainerTest	testSimple	assertNotNull(bytesContainer.bytes);	assertNotNull(bytesContainer);	0
2	// OCommandExecutorSQLSelectTest	testSkipOrdered	assertEquals(19,results.size());	assertTrue(results.size()==19);	0
/	// OCommandExecutorSQLSelectTest	testSkipOrdered	assertEquals(19,results.size());	"assertTrue(results.stream().anyMatch(od->""STR"".equals(od.field(""STR""))));"	0
/	// OCommandExecutorSQLSelectTest	testSkipOrdered	assertEquals(19,results.size());	assertTrue(results.contains(db.get((ORID)results.get(results.size()-1))));	0
3	// OMatchStatementExecutionNewTest	testFriendsOfFriendsArrows	assertTrue(qResult.hasNext());	assertEquals(10,qResult.size());	0
4	orientechnologies/orientdb LuceneSpatialWithinTest	testWithinNoIndex	"assertEquals(next.field(""STR""),true);"	"assertEquals(next.field(""STR""),true);"	1
4	// LuceneSpatialWithinTest	testWithinNoIndex	"assertEquals(next.field(""STR""),true);"	"assertNull(next.field(""STR""));"	0
/	// LuceneSpatialWithinTest	testWithinNoIndex	"assertEquals(next.field(""STR""),true);"	assertNotNull(execute);	0
0	trautonen/coveralls-maven-plugin SourceTest	testHashCode	assertTrue(source1.hashCode()==source2.hashCode());	assertEquals(source1.hashCode(),source2.hashCode());	0
/	// SourceTest	testHashCode	assertTrue(source1.hashCode()==source2.hashCode());	assertNotNull(source1);	0
0	// SpringBootUtilTest	testNonExistentPropertiesParsing	assertNotNull(props);	assertNotNull(props);	1
0	// SpringBootUtilTest	testNonExistentPropertiesParsing	assertNotNull(props);	"assertNotNull(props)`hasalreadybeengenerated,adifferentassertstatementcouldbe`assertEquals(""Thisfiledoesnotexist."",0,props.size());"	0
/	// SpringBootUtilTest	testNonExistentPropertiesParsing	assertNotNull(props);	"assertNotNull(props)`becauseithasalreadybeengenerated.

Hereisanexampleofacompletelydifferentassertstatementforthetestcase`testNonExistentPropertiesParsing`:
```
assertEquals(""Thisfiledoesnotexist."",0,props.size());"	0
0	// OPLogTest	testDescription	"assertEquals(""STR"",value);"	assertNotNull(annotation);	0
0	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	assertEquals(expectedMarkdown,actualMarkdown);	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	"assertNotNull(markup.markdown(""STR""));"	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	assertNotNull(markup);	0
0	// IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	0
/	// IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.contains(null));	0
0	// PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertFalse(p.isSolved());	1
1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleStateTest	actual_cost	assertEquals(0,s.getActualCost());	assertTrue(s.isSolution());	0
/	// PuzzleStateTest	actual_cost	assertEquals(0,s.getActualCost());	assertNotNull(s);	0
0	// YamlConfigLoaderTest	removes_underscores_from_keys	"assertEquals(""STR"",config.getString(""STR""));"	assertNotNull(config);	0
0	adlnet/jxapi ContentActivitiesTest	testSetOther	assertNotNull(actual);	assertNotNull(actual);	1
1	adlnet/jxapi StatementTest	testSetVerb	assertNotNull(actual);	assertNotNull(actual);	1
1	// StatementTest	testSetVerb	assertNotNull(actual);	assertNotNull(actual.getId());	0
2	adlnet/jxapi ResultTest	testSetScore	assertNotNull(actual);	assertTrue(actual.equals(score));	0
2	// ResultTest	testSetScore	assertNotNull(actual);	assertNotNull(actual);	1
/	// ResultTest	testSetScore	assertNotNull(actual);	"assertNotNull(actual)`and`assertTrue(actual.equals(score))`asJUnitassertstatements.

Anotherplausibleassertioncouldbetocomparethepropertiesofthe`Score`objectthatareset.Forinstance:
```assertEquals(score.getScaled(),actual.getScaled());"	0
3	adlnet/jxapi ActivityStateTest	testSetState	assertNotNull(actual);	assertNotNull(activityState);	0
3	// ActivityStateTest	testSetState	assertNotNull(actual);	assertNotNull(actual);	1
4	adlnet/jxapi AttachmentResultTest	testSetXapiStatements	assertNotNull(a);	assertNotNull(a);	1
4	// AttachmentResultTest	testSetXapiStatements	assertNotNull(a);	assertNotNull(a.getXapiStatements());	0
/	// AttachmentResultTest	testSetXapiStatements	assertNotNull(a);	assertNotNull(a.getXapiStatements().getStatements());	0
5	adlnet/jxapi GroupTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// GroupTest	testGetObjectType	assertNotNull(actual);	assertSame(expected,actual);	0
/	// GroupTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.equalsIgnoreCase(expected));	0
5	// GroupTest	testGetObjectType	assertNotNull(actual);	assertNotNull(actual);	1
0	// PerformanceStatsTest	testAdd_withoutAddOperationCountAndThroughput_toEmptyState	assertEquals(100,addState.getOperationCount());	assertFalse(addState.isEmpty());	0
/	// PerformanceStatsTest	testAdd_withoutAddOperationCountAndThroughput_toEmptyState	assertEquals(100,addState.getOperationCount());	assertNotNull(addState);	0
1	// ScriptExecutorTest	javascript	assertTrue(promise.getAnswer()instanceofString);	assertNotNull(promise.getAnswer());	0
2	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(null,""STR"",""STR""));"	0
/	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(null,""STR"",""STR""));"	0
/	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(testObject,""STR"",""STR""));"	0
/	// PerMessageDeflateExtensionTest	testDecodeFrame	assertArrayEquals(message,frame.getPayloadData().array());	???;	0
/	// PerMessageDeflateExtensionTest	testDecodeFrame	assertArrayEquals(message,frame.getPayloadData().array());	assertArrayEquals(message,((TextFrame)frame).getPayloadData().array());	0
0	// OSelectStatementExecutionTest	testFetchFromSingleRid	assertTrue(result.hasNext());	assertNotNull(result);	0
1	// ODocumentSchemalessSerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	"assertEquals(2,extr.field(""STR"")._fieldSize());"	0
/	// ODocumentSchemalessSerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	"assertTrue(extr.field(""STR"").field(""STR"").equals(""STR""));"	0
/	// ODocumentSchemalessSerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	"assertTrue(extr.field(""STR"").hasValidParent());"	0
3	// LuceneNullTest	testNotNullChangeToNullWithLists	assertEquals(index.getSize(),1);	assertTrue(index.getSize()==1);	0
/	// LuceneNullTest	testNotNullChangeToNullWithLists	assertEquals(index.getSize(),1);	"assertNull(doc.field(""STR""));"	0
4	// LuceneManualIndexTest	testManualIndex	assertEquals(manual.getSize(),4);	assertTrue(manual!=null);	0
/	// LuceneManualIndexTest	testManualIndex	assertEquals(manual.getSize(),4);	assertNotNull(manual.getConfiguration());	0
5	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertEquals(condition,filter.getRootCondition());	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertEquals(searchResult,filter.getRootCondition());	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertEquals(newOIndexSearchResult(((OSQLFilterCondition)condition.getLeft()).getOperator(),((OSQLFilterItemField)((OSQLFilterCondition)condition.getLeft()).getLeft()).getFieldChain(),3),filter);	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertTrue(condition.getOperator().equals(OQueryOperatorGreaterThan.INSTANCE));	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertTrue(((OSQLFilterCondition)filter.getRootCondition()).getLeft().toString().equals(searchResult.lastField.toString()));	0
6	orientechnologies/orientdb OETLCSVExtractorTest	testQuotedEmptyString	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
6	// OETLCSVExtractorTest	testQuotedEmptyString	assertFalse(res.isEmpty());	assertNotNull(res);	0
