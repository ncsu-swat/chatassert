TestID	OracleID	Project	ClassName	TestName	TrueOracle	GenOracle	MutationStrength
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	100
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	100
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.equals(expected));	100
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(actual,expected);	100
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	100
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.matches(expected));	100
0	10	adlnet_jxapi	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.equals(expected));	100
1	10	orientechnologies_orientdb	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertEquals(OIntentMassiveInsert.class,db.getActiveIntent().getClass());	84
1	10	orientechnologies_orientdb	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertEquals(OIntentMassiveInsert.class,db.getActiveIntent().getClass());	84
1	10	orientechnologies_orientdb	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertEquals(OIntentMassiveInsert.class,db.getActiveIntent().getClass());	84
1	10	orientechnologies_orientdb	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertEquals(OIntentMassiveInsert.class,db.getActiveIntent().getClass());	84
1	10	orientechnologies_orientdb	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertTrue(db.getActiveIntent()instanceofOIntentMassiveInsert);	84
1	10	orientechnologies_orientdb	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	OIntentexpected=newOIntentMassiveInsert();	0
3	10	fabric8io_fabric8-maven-plugin	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	KindAndNamesixthKindAndName=newKindAndName("STR","STR");	0
3	10	fabric8io_fabric8-maven-plugin	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertTrue(kindAndName.equals(secondKindAndName));	67
3	10	fabric8io_fabric8-maven-plugin	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertEquals(true,kindAndName.equals(kindAndName));	50
4	10	orientechnologies_orientdb	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	System.out.println("STR"+var+"STR"+storedVar);	0
4	10	orientechnologies_orientdb	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	System.out.println("STR"+storedVar);	0
4	10	orientechnologies_orientdb	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	System.out.println("STR"+var);	0
4	10	orientechnologies_orientdb	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	buffer1.position(9);	0
6	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(qResult.size()>0);	33
6	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(qResult.size()>0);	33
6	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(qResult.size()>1);	33
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfoinfo=newModeInfo(intraMode,decoder,c);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfomodeInfo=newModeInfo(intraMode,decoder,c);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfomode=newModeInfo(intraMode,decoder,c);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfoinfo=newModeInfo(intraMode);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfoinfo=newModeInfo(decoder,intraMode,c);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	modeInfo(intraMode,decoder,c);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfoinfo=newModeInfo(0,decoder,c);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfomodeInfo=newModeInfo(intraMode);	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfoinfo=newModeInfo();	0
7	10	jcodec_jcodec	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	ModeInfoinfo=newModeInfo(1,decoder,c);	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	util.cleanUpServerEnv();	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	Files.write(serverEnvBak.toPath(),"STR".getBytes());	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	serverEnvBak.delete();	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	Files.write(serverEnvBak.toPath(),"STR".getBytes(StandardCharsets.UTF_8));	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	serverEnvBak=newFile(serverDirectory,"STR");	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	Files.delete(serverEnvBak.toPath());	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	Files.write(serverEnvBak.toPath(),"STR".getBytes(StandardCharsets.US_ASCII));	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	Files.delete(serverEnvBak.toPath(),StandardCopyOption.REPLACE_EXISTING);	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	System.out.println("STR"+serverEnv);	0
8	10	OpenLiberty_ci.common	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	serverEnvBak.deleteOnExit();	0
9	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	filter.decide(evt);	0
9	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	FilterReplyreply=filter.decide(evt);	0
9	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	finalFilterReplyreply=filter.decide(evt);	0
9	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	FilterReplyresult=filter.decide(evt);	0
10	10	orientechnologies_orientdb	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()==1);	95
10	10	orientechnologies_orientdb	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	finalOSimpleKeyIndexDefinitionvalueIndexDefinition=newOSimpleKeyIndexDefinition(OType.STRING);	0
10	10	orientechnologies_orientdb	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	finalOSimpleKeyIndexDefinitionvalueIndexDefinition=newOSimpleKeyIndexDefinition(OType.INTEGER,OType.STRING);	0
10	10	orientechnologies_orientdb	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	finalOSimpleKeyIndexDefinitionvalueIndexDefinition=newOSimpleKeyIndexDefinition(OType.STRING,OType.INTEGER);	0
11	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	73
11	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	73
12	10	hazelcast_hazelcast-simulator	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2,result.size());	78
12	10	hazelcast_hazelcast-simulator	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2,result.size());	78
15	10	sofastack_sofa-bolt	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	cm.add(conn,"STR");	0
15	10	sofastack_sofa-bolt	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	intcount=cm.count(poolKey);	0
16	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	25
16	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	25
18	10	nidi3_raml-loader	LoaderTest	jarInClassPathNotModified	assertNull(newClassPathLoader("STR").fetchResource("STR",newDate(130,0,0).getTime()-1));	ClassPathLoaderloader=newClassPathLoader(base);	0
18	10	nidi3_raml-loader	LoaderTest	jarInClassPathNotModified	assertNull(newClassPathLoader("STR").fetchResource("STR",newDate(130,0,0).getTime()-1));	finalClassPathLoaderloader=newClassPathLoader(base);	0
18	10	nidi3_raml-loader	LoaderTest	jarInClassPathNotModified	assertNull(newClassPathLoader("STR").fetchResource("STR",newDate(130,0,0).getTime()-1));	ClassPathLoaderloader=newClassPathLoader(base,"STR");	0
18	10	nidi3_raml-loader	LoaderTest	jarInClassPathNotModified	assertNull(newClassPathLoader("STR").fetchResource("STR",newDate(130,0,0).getTime()-1));	ClassPathLoaderloader=newClassPathLoader("STR");	0
18	10	nidi3_raml-loader	LoaderTest	jarInClassPathNotModified	assertNull(newClassPathLoader("STR").fetchResource("STR",newDate(130,0,0).getTime()-1));	finalClassPathLoaderloader=newClassPathLoader(base,"STR");	0
21	10	cucumber-ltd_cucumber-pro-plugin-jvm	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	config.unset("STR");	0
21	10	cucumber-ltd_cucumber-pro-plugin-jvm	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	config.unset("STR",null);	0
21	10	cucumber-ltd_cucumber-pro-plugin-jvm	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	config.set("STR",null);	0
21	10	cucumber-ltd_cucumber-pro-plugin-jvm	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	config.put("STR",null);	0
24	10	trung_InMemoryJavaCompiler	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	70
25	10	PeterisP_morphology	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ce��u.isRecognized());	27
25	10	PeterisP_morphology	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ce��u.isRecognized());	27
25	10	PeterisP_morphology	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ce��u.isRecognized());	27
25	10	PeterisP_morphology	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ce��u.isRecognized());	27
25	10	PeterisP_morphology	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ce��u.isRecognized());	27
25	10	PeterisP_morphology	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ce��u.isRecognized());	27
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	ClassPathLoaderloader=newClassPathLoader(base);	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	finalClassPathLoaderloader=newClassPathLoader(base);	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	ClassPathLoaderloader=newClassPathLoader(base,"STR");	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	ClassPathLoaderloader=newClassPathLoader("STR");	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	finalClassPathLoaderloader=newClassPathLoader(base,"STR");	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	finalClassPathLoaderloader=newClassPathLoader("STR");	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	ClassPathLoaderloader=newClassPathLoader("STR",base);	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	ClassPathLoaderloaders=newClassPathLoader(base);	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	ClassPathLoaderloader=newClassPathLoader();	0
26	10	nidi3_raml-loader	LoaderTest	jarInClassPath	assertNotNull(newClassPathLoader("STR").fetchResource("STR",-1));	ClassPathLoaderloader=newClassPathLoaderImpl(base);	0
27	10	hazelcast_hazelcast-simulator	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry.agentCount()==0);	37
27	10	hazelcast_hazelcast-simulator	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotNull(registry);	34
27	10	hazelcast_hazelcast-simulator	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry.agentCount()==0);	37
27	10	hazelcast_hazelcast-simulator	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotNull(registry.agentCount());	34
28	10	amlinv_stat-collection-utils	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	ObjectQueryPreparerresult=poller.getObjectQueryPreparer();	0
28	10	amlinv_stat-collection-utils	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	ObjectQueryPreparerexpected=Mockito.mock(ObjectQueryPreparer.class);	0
28	10	amlinv_stat-collection-utils	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	ObjectQueryPreparerexpectedObjectQueryPreparer=Mockito.mock(ObjectQueryPreparer.class);	0
28	10	amlinv_stat-collection-utils	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	ObjectQueryPreparerobjectQueryPreparer=poller.getObjectQueryPreparer();	0
28	10	amlinv_stat-collection-utils	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	ObjectQueryPrepareractual=poller.getObjectQueryPreparer();	0
28	10	amlinv_stat-collection-utils	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	this.poller.getObjectQueryPreparer();	0
30	10	hazelcast_hazelcast-simulator	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	registry.addAgent("STR","STR");	0
30	10	hazelcast_hazelcast-simulator	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	registry.save();	0
31	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	67
31	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	67
32	10	arnohaase_a-foundation	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().size());	0
32	10	arnohaase_a-foundation	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().size());	0
33	10	sofastack_sofa-bolt	RpcConnectionManagerTest	testAddWithPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)==1);	58
34	10	adlnet_jxapi	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	44
34	10	adlnet_jxapi	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	44
34	10	adlnet_jxapi	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(expected.equals(actual));	44
34	10	adlnet_jxapi	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	44
34	10	adlnet_jxapi	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(expected.equals(actual));	44
34	10	adlnet_jxapi	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual.equals(expected));	44
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.addRoute("STR",Integer.MAX_VALUE/2,IndexHandler.class);	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.addRoute("STR",Integer.MAX_VALUE/2,NotImplementedHandler.class);	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.setRouter(routerNanoHttpd);	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.addRoute("STR",Integer.MAX_VALUE/2,indexHandler);	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.addRoute("STR",1,IndexHandler.class);	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.setHandler(notFoundHandler);	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.addRoute("STR",Integer.MAX_VALUE/2,newIndexHandler());	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.addRoute("STR",Integer.MAX_VALUE/2,notImplementedHandler.getClass());	0
35	10	NanoHttpd_nanohttpd	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	router.setNotImplemented(notFoundHandler);	0
36	10	OpenLiberty_ci.common	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotNull(fileString);	69
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	Set<ORecord>newRecords=manager.getNewRecords();	0
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc2));	94
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc2));	94
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	Set<ORecord>refs=manager.getNewRecords();	0
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	Set<ORecord>oldRecords=manager.getNewRecords();	0
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	Set<ORecord>references=manager.getNewRecords();	0
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	Set<ORecord>records=manager.getNewRecords();	0
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	manager.getNewRecords().add(doc2);	0
38	10	orientechnologies_orientdb	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().size()==2);	94
39	10	orientechnologies_orientdb	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	verify(factory).registerExtractor(OETLStubRandomExtractor.class);	0
39	10	orientechnologies_orientdb	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	verify(factory).registerLoader(OETLStubLoader.class);	0
39	10	orientechnologies_orientdb	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	verify(factory).registerLoader(OETLStubLoader.class).registerExtractor(OETLStubRandomExtractor.class);	0
39	10	orientechnologies_orientdb	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	verify(factory).registerLoader(OETLStubLoader.class).registerExtractor(OETLRandomExtractor.class);	0
39	10	orientechnologies_orientdb	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	verify(reader).readValue("STR",OETLProcessor.class);	0
39	10	orientechnologies_orientdb	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	verify(reader).readValue("STR",OETLFieldTransformer.class);	0
39	10	orientechnologies_orientdb	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	verify(factory).registerExtractor(OETLRandomExtractor.class);	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetFile.toPath(),"STR".getBytes());	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetResource.toPath(),"STR".getBytes());	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetFile.toPath(),"STR".getBytes(StandardCharsets.UTF_8));	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetDir.toPath(),"STR".getBytes());	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	files.write(targetFile.toPath(),"STR".getBytes());	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetFile.toPath(),"STR".getBytes(StandardCharsets.US_ASCII));	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetFile.toPath(),"STR".getBytes(UTF_8));	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.copy(targetFile.toPath(),"STR".getBytes());	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetFile.toPath(),src.getBytes(StandardCharsets.UTF_8));	0
40	10	OpenLiberty_ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	Files.write(targetFile.toPath(),"STR".getBytes(true));	0
41	10	fabric8io_fabric8-maven-plugin	ProfileUtilTest	multiple	assertNotNull(is);	List<Profile>profiles=ProfileUtil.fromYaml(is);	0
42	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	booleanremoved=handler.hasInitContainer(builder,"STR");	0
42	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	92
42	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	92
42	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	builder.withNewMetadata().withName("STR").endMetadata();	0
42	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	builder.withInitContainers(Arrays.asList("STR","STR"));	0
42	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	handler.addInitContainer(builder,"STR");	0
44	10	Yubico_yubico-java-client	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getStatus());	66
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	doc.addAttribute("STR","STR");	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalTrackedListlist=newTrackedList();	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	ORecordInternal.setDirty(doc);	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalTrackedListlist=newTrackedList(doc);	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalList<String>list=newArrayList<String>();	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalTrackedListtrackerList=newTrackedList();	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalTrackedListlist=newTrackedList("STR");	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalTrackedListlist=newTrackedList(doc,"STR");	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalTrackListlist=newTrackList();	0
45	10	orientechnologies_orientdb	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	finalTrackedListtrackerList=newTrackedList(doc);	0
46	10	orientechnologies_orientdb	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertEquals(true,qResult.hasNext());	33
50	10	PeterisP_morphology	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(v��rds.isRecognized());	25
50	10	PeterisP_morphology	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(v��rds.isRecognized());	25
50	10	PeterisP_morphology	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(v��rds.isRecognized());	25
50	10	PeterisP_morphology	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(v��rds.isRecognized());	25
50	10	PeterisP_morphology	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(v��rds.isRecognized());	25
50	10	PeterisP_morphology	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(v��rds.isRecognized());	25
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	FluentLoggerloggerB1=loggerFactory.getLogger("STR","STR",1234);	0
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	FluentLoggerloggerA_lh2=loggerFactory.getLogger("STR","STR",1234);	0
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	FluentLoggerloggerB0=loggerFactory.getLogger("STR","STR",1234);	0
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	FluentLoggerloggerB=loggerFactory.getLogger("STR","STR",1234);	0
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	loggerB0=loggerFactory.getLogger("STR","STR",1234);	0
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	FluentLoggerloggerB1=loggerFactory.getLogger("STR","STR",123);	0
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	FluentLoggerloggerA_lh2=loggerFactory.getLogger("STR","STR",123);	0
52	10	fluent_fluent-logger-java	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	FluentLoggerloggerB1=loggerFactory.getLogger("STR");	0
53	10	hazelcast_hazelcast-simulator	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertEquals(cause,exception.getCause());	100
53	10	hazelcast_hazelcast-simulator	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotNull(exception);	50
55	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet();	0
55	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	doc.addAttribute("STR","STR");	0
55	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet(doc);	0
55	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	ORecordInternal.setDirty(doc);	0
55	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet("STR");	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.removeLinkedClass();	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.setLinkedClass(classLinked);	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	OClasslinked=prop.getLinkedClass();	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.removeLinkedClass(classLinked);	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.setLinkedClass("STR");	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.setLinkedClass(null);	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.getLinkedClass();	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.addLinkedClass(classLinked);	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	db.drop();	0
56	10	orientechnologies_orientdb	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	prop.setLinkedClass(classA);	0
57	10	Yubico_yubico-java-client	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getStatus());	61
58	10	orientechnologies_orientdb	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	15
58	10	orientechnologies_orientdb	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	g=factory.getTx();	0
58	10	orientechnologies_orientdb	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	g.close();	0
60	10	hazelcast_hazelcast-simulator	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	report("STR",exceptionFile);	0
60	10	hazelcast_hazelcast-simulator	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	report("STR",newRuntimeException("STR"));	0
60	10	hazelcast_hazelcast-simulator	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	report("STR",newRuntimeException(exceptionFile));	0
60	10	hazelcast_hazelcast-simulator	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	report(exceptionFile,newRuntimeException("STR"));	0
60	10	hazelcast_hazelcast-simulator	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	report("STR",newIOException(exceptionFile));	0
60	10	hazelcast_hazelcast-simulator	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	ExceptionReporter.report("STR",exceptionFile);	0
61	10	DigitalPebble_storm-crawler	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	Stringsha1=WARCRecordFormat.getDigestSha1(content);	0
61	10	DigitalPebble_storm-crawler	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	Stringdigest=WARCRecordFormat.getDigestSha1(content);	0
61	10	DigitalPebble_storm-crawler	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	StringdigestSha1=WARCRecordFormat.getDigestSha1(content);	0
61	10	DigitalPebble_storm-crawler	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	Stringsha2str=WARCRecordFormat.getDigestSha1(content);	0
61	10	DigitalPebble_storm-crawler	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	Stringdigest=WARCRecordFormat.getDigestSha1(sha1str.getBytes(StandardCharsets.UTF_8));	0
62	10	orientechnologies_orientdb	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	doc.field("STR",newArrayList<Object>());	0
62	10	orientechnologies_orientdb	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	doc.field("STR",parentArray);	0
62	10	orientechnologies_orientdb	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	doc.field("STR",data);	0
62	10	orientechnologies_orientdb	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	doc.field("STR",Arrays.asList(3));	0
62	10	orientechnologies_orientdb	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	doc.field("STR",newArrayList<String>());	0
62	10	orientechnologies_orientdb	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	doc.field("STR",Arrays.asList(object4));	0
62	10	orientechnologies_orientdb	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	doc.field("STR",1);	0
63	10	sofastack_sofa-bolt	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	49
64	10	DigitalPebble_storm-crawler	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	fields.put("STR","STR");	0
64	10	DigitalPebble_storm-crawler	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertEquals(1,fields.size());	47
65	10	myabc_markdownj	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
66	10	TooTallNate_Java-WebSocket	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException.getCloseCode());	0
67	10	orientechnologies_orientdb	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	Stringnow2=format.format(newDate());	0
67	10	orientechnologies_orientdb	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	intcompare=comparator.compare(newBinaryField("STR",now),newBinaryField("STR",now));	0
67	10	orientechnologies_orientdb	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	Stringnow2=format.format("STR");	0
69	10	rockagen_commons-lib	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(exp,clazz);	100
69	10	rockagen_commons-lib	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(exp,clazz);	100
69	10	rockagen_commons-lib	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz[0]==exp[0]);	100
69	10	rockagen_commons-lib	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz[0]==exp[0]);	100
69	10	rockagen_commons-lib	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp[0],clazz[0]);	100
73	10	fabric8io_fabric8-maven-plugin	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	MapUtil.putIfAbsent(map,"STR","STR");	0
73	10	fabric8io_fabric8-maven-plugin	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertFalse(map.containsKey("STR"));	0
76	10	PeterisP_morphology	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(l��z��s.isRecognized());	39
76	10	PeterisP_morphology	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertFalse(l��z��s.isRecognized());	39
76	10	PeterisP_morphology	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(l��z��s.isRecognized());	39
76	10	PeterisP_morphology	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertFalse(l��z��s.isRecognized());	39
76	10	PeterisP_morphology	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(l��z��s.isRecognized());	39
77	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()==0);	38
78	10	redraiment_jactiverecord	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(5,a.length);	90
78	10	redraiment_jactiverecord	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	Seq.assignAt(a,Seq.array(0,2,3),5,4);	0
78	10	redraiment_jactiverecord	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	Seq.assignAt(a,Seq.array(0,2,3),-1,4);	0
81	10	trautonen_coveralls-maven-plugin	TimestampParserTest	testParseNull	assertNull(parsed);	assertEquals(null,parsed);	67
81	10	trautonen_coveralls-maven-plugin	TimestampParserTest	testParseNull	assertNull(parsed);	assertEquals(null,parsed);	67
83	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(PropertyBindingSupport.bind0(testObject,"STR","STR"));	50
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(0,1);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(42,1);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(42,0);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(42,2);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(555,1);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(0,2);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(1,2);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(1,0);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(555,2);	0
84	10	orientechnologies_orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	removedKeys.put(555,0);	0
85	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()==1);	100
85	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotNull(panel.getTurtleCount());	100
85	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0);	100
86	10	jcodec_jcodec	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotNull(actual);	11
86	10	jcodec_jcodec	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotNull(actual);	11
88	10	basis-technology-corp_tcl-regex-java	RegressionTest	testStockSymbol	assertTrue(matcher.find());	booleanfound=matcher.find();	0
89	10	jcodec_jcodec	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	cl1.addCl2(newCl2(cl1));	0
89	10	jcodec_jcodec	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	Stringjson=ToJSON.toJSON(cl1);	0
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	String[]actuals2=Seq.map(Arrays.asList("STR","STR","STR"),"STR").toArray(newString[0]);	0
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	String[]actuals2=Seq.map(Arrays.asList("STR","STR"),"STR").toArray(newString[0]);	0
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	assertArrayEquals("STR"},actuals);	90
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	String[]actuals2=Seq.map(Arrays.asList("STR","STR","STR"),"STR").toArray(newString[1]);	0
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	assertArrayEquals("STR"},actuals);	90
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	String[]actuals2=Seq.map(Arrays.asList("STR"),"STR").toArray(newString[0]);	0
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	String[]actuals2=Seq.map(Arrays.asList("STR","STR","STR"),"STR").toArray(newString[2]);	0
90	10	redraiment_jactiverecord	SeqTest	testConstantMap	assertArrayEquals("STR","STR"});	String[]actuals2=Seq.map(Arrays.asList("STR","STR"),"STR").toArray(newString[1]);	0
91	10	basis-technology-corp_tcl-regex-java	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	matcher.lookingAt();	0
92	10	PeterisP_morphology	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(austrumlatvija.isRecognized());	100
92	10	PeterisP_morphology	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(austrumlatvija.isRecognized());	100
93	10	trautonen_coveralls-maven-plugin	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotNull(exception);	100
93	10	trautonen_coveralls-maven-plugin	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertTrue(exceptioninstanceofValidationException);	100
93	10	trautonen_coveralls-maven-plugin	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertTrue(exceptioninstanceofValidationException);	100
94	10	trung_InMemoryJavaCompiler	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertTrue(helloClass!=null);	68
95	10	rockagen_commons-lib	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertNotNull(CommUtil.escapeJava("STR"));	100
97	10	orientechnologies_orientdb	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>0);	93
97	10	orientechnologies_orientdb	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>1);	93
98	10	PeterisP_morphology	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
98	10	PeterisP_morphology	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
98	10	PeterisP_morphology	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
100	10	TooTallNate_Java-WebSocket	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	IExtensionextension=draft_6455.getExtension();	0
101	10	redraiment_jactiverecord	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertEquals("STR",Seq.join(Arrays.asList("STR"),null));	90
103	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testNormalize	assertEquals("STR",OpenKoreanTextProcessorJava.normalize("STR"));	assertEquals("STR",OpenKoreanTextProcessor.normalize("STR"));	99
104	10	xmlet_XsdParser	IssuesTest	testIssue23	assertTrue(true);	assertEquals(2,schemas.size());	92
104	10	xmlet_XsdParser	IssuesTest	testIssue23	assertTrue(true);	assertEquals(2,schemas.size());	92
104	10	xmlet_XsdParser	IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	0
104	10	xmlet_XsdParser	IssuesTest	testIssue23	assertTrue(true);	assertTrue(schemas.size()==2);	0
106	10	hazelcast_hazelcast-simulator	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	Objectinstance=testContainer.getTestInstance();	0
106	10	hazelcast_hazelcast-simulator	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertSame(test,testContainer.getTestInstance());	50
106	10	hazelcast_hazelcast-simulator	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer.getTestInstance());	50
107	10	adlnet_jxapi	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	44
107	10	adlnet_jxapi	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	44
107	10	adlnet_jxapi	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	44
107	10	adlnet_jxapi	SubStatementTest	testGetVerb	assertNotNull(actual);	assertSame(expected,actual);	44
107	10	adlnet_jxapi	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	44
108	10	orientechnologies_orientdb	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertTrue(qResult.size()>0);	93
108	10	orientechnologies_orientdb	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertTrue(qResult.size()>0);	93
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	OClassclassB=schema.createClass("STR");	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	ClassclassB=schema.createClass("STR");	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	OClassclassB=schema.createClass("STR",OType.STRING);	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	classA.addProperty(property);	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	db.reload();	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	OClassclassB=schema.getOrCreateClass("STR");	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	ClassclassB=schema.createClass("STR",OType.STRING);	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	property.setValue("STR");	0
109	10	orientechnologies_orientdb	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	ClassclassB=schema.getOrCreateClass("STR");	0
111	10	amlinv_stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	Loggerlogger=Mockito.mock(Logger.class);	0
111	10	amlinv_stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	Loggerlogger=this.mockJ4pReadResponse1.getLog();	0
112	10	rockagen_commons-lib	CommUtilTest	testBC	assertEquals("STR",CommUtil.toDBC("STR"));	Strings=CommUtil.toDBC("STR");	0
112	10	rockagen_commons-lib	CommUtilTest	testBC	assertEquals("STR",CommUtil.toDBC("STR"));	Stringresult=CommUtil.toDBC("STR");	0
113	10	sofastack_sofa-bolt	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(0,cm.count("STR"));	53
113	10	sofastack_sofa-bolt	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(0,cm.count("STR"));	53
114	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	List<KoreanTokenizer.KoreanToken>tokens2=OpenKoreanTextProcessorJava.tokenize(text);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	CoverallsProxyClientclient=newCoverallsProxyClient("STR",proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	CoverallsClientclient=newCoverallsProxyClient("STR",proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	newCoverallsProxyClient("STR",proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	StringcoverallsUrl="STR";	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	CoverallsProxyClientclient=newCoverallsProxyClient(coverallsUrl,proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	Stringresponse=newCoverallsProxyClient("STR",proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	CoverallsProxyClientclient=newCoverallsProxyClient("STR"+proxy.getHost(),proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	CoverallsProxyClientclient=newCoverallsProxyClient("STR"+proxy.getPort(),proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	CoverallsProxyClientclient=newCoverallsProxyClient("STR"+proxy.toString(),proxy);	0
116	10	trautonen_coveralls-maven-plugin	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	CoverallsProxyClientclient=newCoverallsProxyClient("STR"+"STR",proxy);	0
117	10	hazelcast_hazelcast-simulator	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(CloudProviderUtils.isLocal("STR"));	50
117	10	hazelcast_hazelcast-simulator	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(CloudProviderUtils.isLocal("STR"));	50
117	10	hazelcast_hazelcast-simulator	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(CloudProviderUtils.isLocal("STR"));	50
118	10	orientechnologies_orientdb	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	Set<ORecord>updatedRecords=manager.getNewRecords();	0
118	10	orientechnologies_orientdb	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	Set<ORecord>newRecords=manager.getNewRecords();	0
118	10	orientechnologies_orientdb	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	Set<ORecord>oldRecords=manager.getNewRecords();	0
118	10	orientechnologies_orientdb	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	Set<ORecord>updated=manager.getNewRecords();	0
118	10	orientechnologies_orientdb	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	Set<ORecord>updateRecords=manager.getNewRecords();	0
118	10	orientechnologies_orientdb	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().size()==1);	95
119	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(PropertyBindingSupport.bind0(testObject,"STR","STR"));	50
119	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(PropertyBindingSupport.bind0(this,"STR","STR"));	50
119	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	assertTrue(PropertyBindingSupport.bind0(testObject,"STR","STR")==false);	50
119	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	Objectobject=newTestObject();	0
121	10	fabric8io_fabric8-maven-plugin	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotNull(profiles);	43
121	10	fabric8io_fabric8-maven-plugin	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(profiles.size()>0);	86
122	10	hazelcast_hazelcast-simulator	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	workerProcessManager.updateLastSeenTimestamp(workerAddress2);	0
122	10	hazelcast_hazelcast-simulator	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	workerProcessManager.updateLastSeenTimestamp(workerAddress1);	0
122	10	hazelcast_hazelcast-simulator	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	longthirdLastSeen=workerProcess1.getLastSeen();	0
123	10	adlnet_jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	100
123	10	adlnet_jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	100
123	10	adlnet_jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(expected.equals(actual));	100
123	10	adlnet_jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	100
123	10	adlnet_jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.matches(expected));	100
123	10	adlnet_jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.equals(expected));	100
123	10	adlnet_jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	db.command(newOCommandSQL("STR")).execute();	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	ORecordrecord=newORecord();	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	db.command(newOCommandSQL("STR","STR")).execute();	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	ORecordo=newORecord();	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	ORecordobj=newORecord();	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	ODatabaseRecorddb=getDatabase();	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	ODatabaseRecorddatabase=getDatabase();	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	db.command(newOCommandSQL("STR")).execute(1);	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	db.command(newOCommandSQL("STR")).executeQuery("STR");	0
124	10	orientechnologies_orientdb	OMatchStatementExecutionTest	testManager	assertEquals("STR",getManager("STR").field("STR"));	db.command(newOCommandSQL("STR")).execute(null);	0
125	10	xmlet_XsdParser	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	40
126	10	arnohaase_a-foundation	StringHelperTest	testBytesToHexString	assertEquals(null,StringHelper.bytesToHexString(null));	assertNull(StringHelper.bytesToHexString(null));	100
126	10	arnohaase_a-foundation	StringHelperTest	testBytesToHexString	assertEquals(null,StringHelper.bytesToHexString(null));	assertNull(StringHelper.bytesToHexString(null));	100
126	10	arnohaase_a-foundation	StringHelperTest	testBytesToHexString	assertEquals(null,StringHelper.bytesToHexString(null));	byte[]bytes=null;	0
127	10	sofastack_sofa-bolt	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	System.clearProperty(RpcConfigs.CONNECTION_NUM_KEY);	0
128	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	Stringvalue=simulatorProperties.get("STR","STR");	0
128	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	Stringresult=simulatorProperties.get("STR","STR");	0
128	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	Stringvalue=this.simulatorProperties.get("STR","STR");	0
128	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertEquals("STR",this.simulatorProperties.get("STR","STR"));	28
128	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	Stringvalue=SimulatorProperties.get("STR","STR");	0
129	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_Float	assertTrue(bind0(testObject,"STR","STR"));	booleanresult=PropertyBindingSupport.bind0(testObject,"STR",3.14f);	0
130	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	cookies.add(newCookie("STR","STR",30));	0
130	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	Cookiecookie=cookies.get("STR");	0
130	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotNull(cookies);	0
131	10	jcodec_jcodec	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotNull(res);	100
131	10	jcodec_jcodec	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertArrayEquals('h','e'});	100
134	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	filter.decide(evt);	0
134	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	FilterReplyreply=filter.decide(evt);	0
134	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	finalFilterReplyreply=filter.decide(evt);	0
134	10	tradier_dropwizard-raven	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	FilterReplyresult=filter.decide(evt);	0
135	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	70
135	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	70
137	10	adlnet_jxapi	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	43
137	10	adlnet_jxapi	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	43
138	10	amlinv_stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertEquals(null,result);	38
139	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	booleanhasInitContainer=handler.hasInitContainer(builder,"STR");	0
139	10	fabric8io_fabric8-maven-plugin	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	builder.withNewMetadata().withName("STR").endMetadata();	0
140	10	orientechnologies_orientdb	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertTrue(qResult.size()>0);	93
142	10	myabc_markdownj	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	Stringdecoded=m.decode(encoded);	0
142	10	myabc_markdownj	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	Stringtext=m.decode(encoded);	0
142	10	myabc_markdownj	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	Stringunencoded=m.decode(encoded);	0
142	10	myabc_markdownj	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	Stringt=m.decode(encoded);	0
142	10	myabc_markdownj	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	Stringh="STR";	0
142	10	myabc_markdownj	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	Stringexpected="STR";	0
143	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenAgent	assertEquals("STR",agentAddress(5).toString());	SimulatorAddressaddress=newSimulatorAddress(1,2);	0
143	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenAgent	assertEquals("STR",agentAddress(5).toString());	SimulatorAddressaddress=newSimulatorAddress(0,1);	0
143	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenAgent	assertEquals("STR",agentAddress(5).toString());	SimulatorAddressaddress=newSimulatorAddress(1,0);	0
143	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenAgent	assertEquals("STR",agentAddress(5).toString());	finalSimulatorAddressaddress=newSimulatorAddress(1,2);	0
143	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenAgent	assertEquals("STR",agentAddress(5).toString());	finalSimulatorAddressaddress=newSimulatorAddress(0,1);	0
143	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenAgent	assertEquals("STR",agentAddress(5).toString());	finalSimulatorAddressaddress=newSimulatorAddress(1,0);	0
143	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenAgent	assertEquals("STR",agentAddress(5).toString());	SimulatorAddressaddress=newSimulatorAddress();	0
144	10	gvlasov_collections-utils	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.containsKey("STR"));	50
144	10	gvlasov_collections-utils	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.containsKey("STR"));	50
145	10	fabric8io_fabric8-maven-plugin	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	100
146	10	PeterisP_morphology	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	32
146	10	PeterisP_morphology	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertEquals(2,formas.size());	100
146	10	PeterisP_morphology	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()>1);	100
146	10	PeterisP_morphology	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()==2);	100
146	10	PeterisP_morphology	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()==1);	32
146	10	PeterisP_morphology	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	32
147	10	orientechnologies_orientdb	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
147	10	orientechnologies_orientdb	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	OrientElementelement=res.get(0);	0
147	10	orientechnologies_orientdb	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>0);	41
148	10	orientechnologies_orientdb	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertEquals(0,res.size());	84
148	10	orientechnologies_orientdb	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertTrue(res.size()==0);	84
149	10	cucumber-ltd_cucumber-pro-plugin-jvm	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertTrue(config.isNull("STR"));	80
149	10	cucumber-ltd_cucumber-pro-plugin-jvm	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertTrue(config.isNull("STR"));	80
149	10	cucumber-ltd_cucumber-pro-plugin-jvm	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertEquals(true,config.isNull("STR"));	80
150	10	basis-technology-corp_tcl-regex-java	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	cm.okcolors(nfa);	0
151	10	orientechnologies_orientdb	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343,OVarIntSerializer.readAsLong(bytes));	99
151	10	orientechnologies_orientdb	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343L,OVarIntSerializer.readAsLong(bytes));	99
151	10	orientechnologies_orientdb	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343,OVarIntSerializer.readAsLong(bytes));	99
151	10	orientechnologies_orientdb	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343L,OVarIntSerializer.readAsLong(bytes));	99
151	10	orientechnologies_orientdb	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	longvalue=OVarIntSerializer.readAsLong(bytes);	0
151	10	orientechnologies_orientdb	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	longresult=OVarIntSerializer.readAsLong(bytes);	0
151	10	orientechnologies_orientdb	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	longval=OVarIntSerializer.readAsLong(bytes);	0
152	10	PeterisP_morphology	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
152	10	PeterisP_morphology	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
152	10	PeterisP_morphology	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
154	10	OpenLiberty_ci.common	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	69
154	10	OpenLiberty_ci.common	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	69
154	10	OpenLiberty_ci.common	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	69
154	10	OpenLiberty_ci.common	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	booleangeneratedConfigFile=util.isGeneratedConfigFile(sourceFile,srcDir,targetDir);	0
154	10	OpenLiberty_ci.common	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	booleanisGeneratedConfigFile=util.isGeneratedConfigFile(sourceFile,srcDir,targetDir);	0
154	10	OpenLiberty_ci.common	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	booleangenerated=util.isGeneratedConfigFile(sourceFile,srcDir,targetDir);	0
156	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	System.out.println("STR"+result);	0
158	10	orientechnologies_orientdb	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	84
158	10	orientechnologies_orientdb	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	84
158	10	orientechnologies_orientdb	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	84
159	10	myabc_markdownj	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	Stringh=m.markdown(null);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfoinfo=decoder.readInterIntraMode(miCol,miRow,blSz,decoder,c);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfoinfo=newInterModeInfo(decoder,miCol,miRow,blSz,decoder,c);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	inti=decoder.readInterIntraMode(miCol,miRow,blSz,decoder,c);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfoinfo=newInterModeInfo(miCol,miRow,blSz,decoder,c);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	decoder.readInterIntraMode(miCol,miRow,blSz,decoder,c);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfoinfo=newInterModeInfo();	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfomode=newInterModeInfo(decoder,miCol,miRow,blSz,decoder,c);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfoinfo=newInterModeInfo(decoder,miCol,miRow,blSz,c);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfoinfo=newInterModeInfo(decoder.readInterIntraMode(miCol,miRow,blSz,decoder,c),false);	0
161	10	jcodec_jcodec	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	InterModeInfoinfo=newInterModeInfo(decoder,c);	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(tempClass);	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(targetDir);	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(newFile(targetDir,"STR"));	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(tmpClass);	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(newFile(src,"STR"));	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(newFile(target,"STR"));	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(src);	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	util.cleanTargetDir(target);	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	this.util.cleanTargetDir(tempClass);	0
162	10	OpenLiberty_ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	Util.cleanTargetDir(tempClass);	0
165	10	TooTallNate_Java-WebSocket	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	DefaultExtensiondefaultExtension2=newDefaultExtension();	0
165	10	TooTallNate_Java-WebSocket	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.hashCode()==defaultExtension1.hashCode());	0
166	10	1337joe_cubesensors-for-java	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
169	10	1337joe_cubesensors-for-java	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	100
170	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_long	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(PropertyBindingSupport.bind0(testObject,"STR","STR"));	50
171	10	jribble_Java-Websockify	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertEquals(XML,resp);	67
172	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	Stringresult=simulatorProperties.getCloudIdentity();	0
172	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	StringidentityString=simulatorProperties.getCloudIdentity();	0
172	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	Stringidentity=simulatorProperties.getCloudIdentity();	0
172	10	hazelcast_hazelcast-simulator	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	StringcloudIdentity=simulatorProperties.getCloudIdentity();	0
173	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>result=OpenKoreanTextProcessorJava.removeWordsFromDictionary(tokens);	0
173	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words2=OpenKoreanTextProcessorJava.tokenize(text);	0
173	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>expected=newArrayList<>();	0
173	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(2,tokens.size());	99
173	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>results=OpenKoreanTextProcessorJava.removeWordsFromDictionary(tokens);	0
173	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words2=OpenKoreanTextProcessorJava.tokenize(tokens);	0
173	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words=OpenKoreanTextProcessorJava.removeWordsFromDictionary(tokens);	0
175	10	PeterisP_morphology	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(vi����.isRecognized());	48
175	10	PeterisP_morphology	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertFalse(vi����.isRecognized());	48
175	10	PeterisP_morphology	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(vi����.isRecognized());	48
175	10	PeterisP_morphology	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertFalse(vi����.isRecognized());	48
175	10	PeterisP_morphology	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(vi����.isRecognized());	48
175	10	PeterisP_morphology	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertFalse(vi����.isRecognized());	48
176	10	orientechnologies_orientdb	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
176	10	orientechnologies_orientdb	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	41
176	10	orientechnologies_orientdb	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	OrientElementelement=res.get(0);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEventevent=parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEventevent1=parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEventexpected=parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEventcef=parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	commonEvent=parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEventactual=parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEventev=parser.parse(sample1);	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEventevent=parser.parse("STR");	0
178	10	fluenda_ParCEFone	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	CommonEvente=parser.parse(sample1);	0
179	10	orientechnologies_orientdb	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	finalOCompositeKeyotherCompositeKey=newOCompositeKey();	0
179	10	orientechnologies_orientdb	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	finalOCompositeKeytwoCompositeKey=newOCompositeKey();	0
180	10	basis-technology-corp_tcl-regex-java	MatcherTest	reset	assertTrue(matcher.find());	matcher.reset();	0
181	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,2,"STR"));	0
181	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,3,"STR"));	0
181	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,1,"STR"));	0
181	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,4,"STR"));	0
182	10	adlnet_jxapi	StatementTest	testToString	assertNotNull(actual);	actual.setId(ID);	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	env.put("STR","STR");	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv2=newCiEnvironment(env);	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv=newCiEnvironment(env);	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenvironment=newCiEnvironment(env);	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv=newCiEnvironment(env,"STR");	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv2=newCiEnvironment(env,"STR");	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv2=newCIEnvironment(env);	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenvironment=newCiEnvironment(env,"STR");	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv=newCiEnvironment("STR",env);	0
183	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv2=newCiEnvironment("STR",env);	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	List<OMultiValueChangeEvent<Object,Object>>changeEvents=timeLine.getMultiValueChangeEvents();	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	List<OMultiValueChangeEvent<Object,Object>>multiValueChangeEvents=timeLine.getMultiValueChangeEvents();	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	List<OMultiValueChangeEvent<Object,Object>>valueChangeEvents=timeLine.getMultiValueChangeEvents();	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	OMultiValueChangeEvent<Object,Object>changeEvent=timeLine.getMultiValueChangeEvents().iterator().next();	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	OMultiValueChangeEvent<Object,Object>event=timeLine.getMultiValueChangeEvents().iterator().next();	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	OMultiValueChangeEvent<Object,Object>change=timeLine.getMultiValueChangeEvents().iterator().next();	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	OMultiValueChangeEvent<Object,Object>changeEvent=timeLine.getMultiValueChangeEvents().get(0);	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	OMultiValueChangeEvent<Object,Object>event=timeLine.getMultiValueChangeEvents().get(0);	0
186	10	orientechnologies_orientdb	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	OMultiValueChangeEvent<Object,Object>change=timeLine.getMultiValueChangeEvents().get(0);	0
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	100
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	100
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.equals(expected));	100
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.equals(expected));	100
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	100
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.contains(expected));	100
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.matches(expected));	100
193	10	adlnet_jxapi	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(expected.equals(actual));	100
195	10	trung_InMemoryJavaCompiler	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass!=null);	68
196	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	Response<String>response=responseHandler.getResponse();	0
196	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	Cookiecookie=responseHandler.getResponse();	0
196	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	Stringresponse=responseHandler.getResponse().getHTTPHeader();	0
199	10	amlinv_stat-collection-utils	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	finalJMXServiceUrlFactoryjmxServiceUrlFactory=factory.getJmxServiceUrlFactory();	0
200	10	hazelcast_hazelcast-simulator	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(duration>0);	sleepRandomNanos(newRandom(),durationLimit-1);	0
201	10	orientechnologies_orientdb	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	Stringcustom=clazz.getCustom("STR");	0
201	10	orientechnologies_orientdb	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	Stringname=clazz.getCustom("STR");	0
202	10	Yubico_yubico-java-client	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	booleanvalid=YubicoClient.isValidOTPFormat(otp);	0
202	10	Yubico_yubico-java-client	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	booleanresult=YubicoClient.isValidOTPFormat(otp);	0
202	10	Yubico_yubico-java-client	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	booleanisValid=YubicoClient.isValidOTPFormat(otp);	0
203	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	54
203	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	54
203	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertFalse(routePrioritizer.getPrioritizedRoutes().contains(null));	54
203	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	routePrioritizer.add(null);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuffer=ByteBuffer.allocate(8);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuffer=ByteBuffer.allocate(4);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuf=ByteBuffer.allocate(8);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuffer=ByteBuffer.wrap("STR".getBytes());	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferb=ByteBuffer.allocate(8);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuf=ByteBuffer.allocate(4);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuffer=ByteBuffer.allocate(16);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuffer=ByteBuffer.allocate(1);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferbuffer=ByteBuffer.allocate(32);	0
206	10	jcodec_jcodec	MkvBlockTest	testReadingSignedInt	assertEquals(-30,MkvBlock.ebmlDecodeSigned(ByteBuffer.wrap(newbyte[]{(byte)0xA1})));	ByteBufferb=ByteBuffer.allocate(4);	0
207	10	orientechnologies_orientdb	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(OType.INTEGER,result[0]);	95
208	10	adlnet_jxapi	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	100
208	10	adlnet_jxapi	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertEquals(expected,actual);	100
208	10	adlnet_jxapi	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertEquals(MBOX_SHA1SUM,actual);	100
208	10	adlnet_jxapi	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(MBOX_SHA1SUM,actual);	100
208	10	adlnet_jxapi	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertTrue(actual.length==expected.length);	100
208	10	adlnet_jxapi	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertEquals(MBOX_SHA1SUM,expected);	0
208	10	adlnet_jxapi	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	100
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaXls2=newClassPathResource("STR");	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalGenericode04CodeListMarshallersut=newGenericode04CodeListMarshaller();	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaXlsSds=newClassPathResource("STR");	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaCodeList=newClassPathResource("STR");	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaSds=newClassPathResource("STR");	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaYls=newClassPathResource("STR");	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalCodeListDocumentaCodeList=newGenericode04CodeListMarshaller().readValue(aXls,CodeListDocument.class);	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaSheet=newClassPathResource("STR");	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalCodeListDocumentaCodeList=newGenericode04CodeListMarshaller().fromResource(aXls);	0
209	10	phax_ph-genericode	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	finalCodeListDocumentaCodeList=newGenericode04CodeListMarshaller().fromJson(aXls,CodeListDocument.class);	0
210	10	trautonen_coveralls-maven-plugin	GeneralTest	testGetName	assertEquals("STR",newGeneral(env()).getName());	System.out.println("STR");	0
210	10	trautonen_coveralls-maven-plugin	GeneralTest	testGetName	assertEquals("STR",newGeneral(env()).getName());	System.setProperty(CI_NAME,"STR");	0
210	10	trautonen_coveralls-maven-plugin	GeneralTest	testGetName	assertEquals("STR",newGeneral(env()).getName());	finalGeneralgeneral=newGeneral("STR");	0
211	10	jcodec_jcodec	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(transforminstanceofYuv444jToYuv420j);	67
211	10	jcodec_jcodec	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(transforminstanceofYuv444jToYuv420j);	67
212	10	adlnet_jxapi	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	100
212	10	adlnet_jxapi	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	100
212	10	adlnet_jxapi	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	100
212	10	adlnet_jxapi	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.contains(e));	100
212	10	adlnet_jxapi	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.size()==expected.size());	100
212	10	adlnet_jxapi	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(1,actual.size());	100
213	10	myabc_markdownj	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	Stringmarkdown=markup.markdown("STR");	0
213	10	myabc_markdownj	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	Stringmarkdown=m.markdown("STR");	0
213	10	myabc_markdownj	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	Stringtext=m.markdown("STR");	0
213	10	myabc_markdownj	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	LineConventionsconventions=newLineConventions(markup);	0
213	10	myabc_markdownj	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	Stringh=m.markdown("STR");	0
216	10	adlnet_jxapi	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	43
216	10	adlnet_jxapi	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected.getId(),actual.getId());	38
216	10	adlnet_jxapi	StatementTest	testGetObject	assertNotNull(actual);	assertTrue(actual.getId()==expected.getId());	38
216	10	adlnet_jxapi	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected.getId(),actual.getId());	38
216	10	adlnet_jxapi	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	43
217	10	amlinv_stat-collection-utils	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotNull(atts);	50
218	10	myabc_markdownj	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	Stringmarkdown=markup.markdown("STR");	0
219	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	SimulatorAddressaddress=newSimulatorAddress(0,1);	0
219	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	SimulatorAddressaddress=newSimulatorAddress(1,2);	0
219	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	SimulatorAddressaddress=newSimulatorAddress(1,0);	0
219	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	SimulatorAddressaddress=newSimulatorAddress(-1,0);	0
219	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	finalSimulatorAddressaddress=newSimulatorAddress(0,1);	0
219	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	finalSimulatorAddressaddress=newSimulatorAddress(1,2);	0
219	10	hazelcast_hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	SimulatorAddressaddress=newSimulatorAddress(0,null);	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(Arrays.asList("STR","STR"),arrayView().flatMap(tokens));	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(Arrays.asList("STR","STR"),newAsArrayView<String>(tokens).flatMap(newAFunction1<String,Iterable<String>,String>(){@OverridepublicList<String>apply(Stringparam){returnCollections.singletonList(param}}));	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(Arrays.asList("STR","STR"),this.arrayView.flatMap(tokens));	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(newAsArrayView<String>(tokens).flatMap(newAFunction1<String,Iterable<String>,String>(){@OverridepublicList<String>apply(Stringparam){returnCollections.singletonList(param}})),newArrayList<String>());	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(Arrays.asList("STR","STR"),asArrayView().flatMap(tokens));	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	newAsArrayView<String>().flatMap(tokens);	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(Arrays.asList("STR","STR"),newAsArrayView<String>(tokens).flatMap(newAFunction1<String,Iterable<String>,String>(){@OverridepublicList<String>apply(Stringparam){returnArrays.asList(param}}));	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(newAsArrayView<String>(tokens).flatMap(newAFunction1<String,Iterable<String>,String>(){@OverridepublicList<String>apply(Stringparam){returnArrays.asList(param}})),Collections.singletonList("STR"));	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(newAsArrayView<String>(tokens).flatMap(newAFunction1<String,Iterable<String>,String>(){@OverridepublicList<String>apply(Stringparam){returnArrays.asList(param}})),Collections.singleton("STR"));	0
220	10	arnohaase_a-foundation	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(newAsArrayView<String>(tokens).flatMap(newAFunction1<String,Iterable<String>,String>(){@OverridepublicList<String>apply(Stringparam){returnArrays.asList(param}})),newArrayList<String>());	0
221	10	orientechnologies_orientdb	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	finalList<Object>keys=compositeKey.getKeys();	0
221	10	orientechnologies_orientdb	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertTrue(compositeKey.getKeys().size()==1);	100
222	10	DigitalPebble_storm-crawler	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	verify(bolt,times(1)).execute(any(Tuple.class));	0
222	10	DigitalPebble_storm-crawler	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	verify(bolt,never()).execute(any(Tuple.class));	0
222	10	DigitalPebble_storm-crawler	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	verify(bolt).execute(any(Tuple.class));	0
222	10	DigitalPebble_storm-crawler	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	verify(bolt,times(1)).execute(eq(tuple("STR","STR")));	0
222	10	DigitalPebble_storm-crawler	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	verify(bolt,times(1)).execute(tuple("STR","STR"));	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	db.command(newOCommandSQL("STR")).execute();	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	index.update("STR");	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	index.update();	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	db.command(newOCommandSQL("STR")).execute(index);	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	db.command(newOCommandSQL("STR","STR")).execute();	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	index.update(null);	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	index.update(null,"STR");	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	index.update("STR",null);	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	db.command(newOCommandSQL("STR","STR")).execute(index);	0
223	10	orientechnologies_orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	index.update(0,"STR");	0
226	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	System.out.println("STR"+result);	0
226	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertEquals(FizzBuzzTDD.convert(15),result);	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words=OpenKoreanTextProcessorJava.tokenize(text);	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>tokens2=OpenKoreanTextProcessorJava.tokenize(text);	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	Seq<KoreanTokenizer.KoreanToken>words=OpenKoreanTextProcessorJava.tokenize(text);	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words=OpenKoreanTextProcessorJava.tokenize(tokens);	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	KoreanTokenizer.KoreanTokentoken=tokens.iterator().next();	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	Iterator<KoreanTokenizer.KoreanToken>it=tokens.iterator();	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words=OpenKoreanTextProcessorJava.tokenize("STR");	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words=OpenKoreanTextProcessorJava.addWordsToDictionary(tokens);	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	KoreanTokenJavatoken=tokens.iterator().next();	0
228	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words=OpenKoreanTextProcessorJava.tokenize(text,tokens);	0
230	10	DigitalPebble_storm-crawler	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	fields.put("STR","STR");	0
230	10	DigitalPebble_storm-crawler	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertEquals(1,fields.size());	36
231	10	Yubico_yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	booleanvalid=YubicoClient.isValidOTPFormat(otp);	0
231	10	Yubico_yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	booleanisValid=YubicoClient.isValidOTPFormat(otp);	0
231	10	Yubico_yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	booleanresult=YubicoClient.isValidOTPFormat(otp);	0
232	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	routePrioritizer.setHandler(null);	0
232	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	routePrioritizer.add(null);	0
232	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertFalse(routePrioritizer.getPrioritizedRoutes().contains(null));	54
232	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	routePrioritizer.add("STR");	0
232	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	routePrioritizer.handle(null);	0
232	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	routePrioritizer.addHandler(null);	0
232	10	NanoHttpd_nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	routePrioritizer.add("STR",null);	0
233	10	cucumber-ltd_cucumber-pro-plugin-jvm	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	Map<String,String>actualEnv=envFilter.filter(expectedEnv);	0
233	10	cucumber-ltd_cucumber-pro-plugin-jvm	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	Map<String,String>result=envFilter.filter(expectedEnv);	0
233	10	cucumber-ltd_cucumber-pro-plugin-jvm	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	Map<String,String>envMap=envFilter.filter(expectedEnv);	0
233	10	cucumber-ltd_cucumber-pro-plugin-jvm	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	Map<String,String>env2=envFilter.filter(expectedEnv);	0
233	10	cucumber-ltd_cucumber-pro-plugin-jvm	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	envFilter.filter(expectedEnv);	0
233	10	cucumber-ltd_cucumber-pro-plugin-jvm	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	expectedEnv.put("STR","STR");	0
234	10	orientechnologies_orientdb	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	getProfilerInstance().stopRecording();	0
235	10	basis-technology-corp_tcl-regex-java	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.lookingAt());	100
236	10	PeterisP_morphology	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	30
236	10	PeterisP_morphology	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertEquals(2,formas.size());	100
236	10	PeterisP_morphology	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()>1);	100
236	10	PeterisP_morphology	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()==2);	100
236	10	PeterisP_morphology	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()==1);	37
236	10	PeterisP_morphology	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()==3);	100
237	10	orientechnologies_orientdb	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	OLiveQueryQueueThreadqueueThread=newOLiveQueryQueueThread();	0
239	10	gvlasov_collections-utils	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	expected.add(4);	0
240	10	DigitalPebble_storm-crawler	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	verify(bolt,times(1)).execute(any(Tuple.class));	0
240	10	DigitalPebble_storm-crawler	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	verify(bolt,never()).execute(any(Tuple.class));	0
240	10	DigitalPebble_storm-crawler	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	verify(bolt).execute(any(Tuple.class));	0
240	10	DigitalPebble_storm-crawler	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	verify(bolt,times(1)).execute(eq(tuple("STR","STR")));	0
240	10	DigitalPebble_storm-crawler	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	verify(bolt).execute(eq(tuple("STR","STR")));	0
241	10	orientechnologies_orientdb	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNull(oClass.getProperty("STR"));	78
241	10	orientechnologies_orientdb	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNull(oClass.getProperty("STR"));	78
241	10	orientechnologies_orientdb	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	OPropertyprop=oClass.getProperty("STR");	0
241	10	orientechnologies_orientdb	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	oClass.createProperty("STR",OType.LINKLIST,(OClass)null,true);	0
241	10	orientechnologies_orientdb	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertEquals(null,oClass.getProperty("STR"));	78
241	10	orientechnologies_orientdb	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	oClass.createProperty("STR",OType.LINKLIST,(OClass)null,false);	0
241	10	orientechnologies_orientdb	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertEquals(null,oClass.getProperty("STR"));	78
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	Mockito.verify(this.mockObjectQueryPreparer).prepareObjectQuery(this.polled001);	0
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	Mockito.when(this.mockObjectQueryPreparer.prepareObjectQuery(this.polled001)).thenReturn(this.mockObjectQueryInfo001);	0
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	Mockito.when(this.mockObjectQueryPreparer.prepareObjectQuery(this.polled001)).thenReturn(this.mockObjectQueryPreparer);	0
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	ObjectQueryPreparerexpected=Mockito.mock(ObjectQueryPreparer.class);	0
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	ObjectQueryPreparerpreparer=this.mockObjectQueryPreparer();	0
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	ObjectQueryPreparerobjectQueryPreparer=this.mockObjectQueryPreparer();	0
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	Mockito.verify(this.mockObjectQueryPreparer).prepareSetObjectQuery(this.polled001);	0
245	10	amlinv_stat-collection-utils	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	ObjectQueryPreparerobjectQueryPreparer=newMockObjectQueryPreparer();	0
246	10	TooTallNate_Java-WebSocket	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals(DefaultExtension.class.getSimpleName(),defaultExtension.toString());	100
246	10	TooTallNate_Java-WebSocket	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals(DefaultExtension.class.getSimpleName(),defaultExtension.getClass().getSimpleName());	100
247	10	orientechnologies_orientdb	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(4,floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset));	95
248	10	OpenLiberty_ci.common	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	Stringresult=DevUtil.removeSurroundingQuotes("STR");	0
249	10	myabc_markdownj	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	Stringh=m.markdown("STR");	0
249	10	myabc_markdownj	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	Strings=m.markdown("STR");	0
249	10	myabc_markdownj	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	m.markdown("STR");	0
250	10	redraiment_jactiverecord	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertEquals("STR",Seq.join(Collections.singletonList("STR"),"STR"));	90
250	10	redraiment_jactiverecord	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	Strings=Seq.join(Arrays.asList("STR","STR"),"STR");	0
251	10	jcodec_jcodec	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	long[]out=MkvBlock.calcEbmlLacingDiffs(_in);	0
251	10	jcodec_jcodec	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	long[]result=MkvBlock.calcEbmlLacingDiffs(_in);	0
251	10	jcodec_jcodec	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	long[]actual=MkvBlock.calcEbmlLacingDiffs(_in);	0
251	10	jcodec_jcodec	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	long[]expected=MkvBlock.calcEbmlLacingDiffs(_in);	0
251	10	jcodec_jcodec	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	int[]_out=newint[]{187,630,255,60,0xFFFFFF};	0
252	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,MoneyToStr.Pennies.NUMBER);	0
252	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,MoneyToStr.Pennies.NUMBER,"STR");	0
252	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,"STR");	0
252	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,MoneyToStr.Pennies.NUMBER,newString[]{"STR","STR"});	0
252	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,MoneyToStr.Pennies.NUMBER,newString[]{"STR"});	0
252	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,MoneyToStr.Pennies.NUMBER,newString[]{"STR","STR","STR"});	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	Objectfirst=OMultiValue.getFirstValue(collection);	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	OMultiValuemulti=newOMultiValue(collection);	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	Objectlast=OMultiValue.getFirstValue(collection);	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	Objectvalue=OMultiValue.getFirstValue(collection);	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	OMultiValuem=newOMultiValue(collection);	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	Objecti=OMultiValue.getFirstValue(collection);	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	OMultiValuemulti=newOMultiValue("STR",collection);	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	OMultiValuemulti=newOMultiValue(collection,"STR");	0
253	10	orientechnologies_orientdb	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	OMultiValueobj=newOMultiValue(collection);	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.warn("STR");	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.setLevel(Level.WARN);	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.setLevel(Level.WARN);	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.set("STR",LogLevel.WARN);	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.setLevel(LogLevel.WARN);	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.warn("STR",Level.WARN);	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.warn();	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.warning("STR");	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.warn(LogLevel.WARN);	0
254	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	logger.warn(Level.WARN);	0
255	10	fluenda_ParCEFone	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(comparison<0);	33
255	10	fluenda_ParCEFone	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(comparison<0);	33
255	10	fluenda_ParCEFone	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(comparison<0);	33
255	10	fluenda_ParCEFone	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotEquals(-1,comparison);	0
255	10	fluenda_ParCEFone	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(comparison==0);	33
259	10	trautonen_coveralls-maven-plugin	WerckerTest	testGetBranch	assertEquals("STR",newWercker(env()).getBranch());	Werckerwercker=newWercker("STR");	0
259	10	trautonen_coveralls-maven-plugin	WerckerTest	testGetBranch	assertEquals("STR",newWercker(env()).getBranch());	Werckerwercker=newWercker();	0
259	10	trautonen_coveralls-maven-plugin	WerckerTest	testGetBranch	assertEquals("STR",newWercker(env()).getBranch());	Stringbranch=env.getProperty(WERCKER_BRANCH);	0
260	10	adlnet_jxapi	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	100
260	10	adlnet_jxapi	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	100
260	10	adlnet_jxapi	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	100
260	10	adlnet_jxapi	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected.toString(),actual.toString());	100
260	10	adlnet_jxapi	AboutTest	testGetExtensions	assertNotNull(actual);	AssertEquals(expected,actual);	100
262	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	70
262	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	70
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaXls2=newClassPathResource("STR");	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalGenericode10CodeListMarshallersut=newGenericode10CodeListMarshaller();	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalGenericode10CodeListMarshallero=newGenericode10CodeListMarshaller();	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaXlsSds=newClassPathResource("STR");	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalGenericode10CodeListMarshallers=newGenericode10CodeListMarshaller();	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalCodeListDocumentaCodeList=newGenericode10CodeListMarshaller().readValue(aXls,CodeListDocument.class);	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaSds=newClassPathResource("STR");	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalIReadableResourceaCodeList=newClassPathResource("STR");	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalCodeListDocumentaCodeList=newGenericode10CodeListMarshaller().fromResource(aXls);	0
264	10	phax_ph-genericode	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	finalCodeListDocumentaCodeList=newGenericode10CodeListMarshaller().fromXLSStream(aXls);	0
265	10	trautonen_coveralls-maven-plugin	CircleTest	testIsSelectedForCircle	assertTrue(newCircle(env()).isSelected());	System.out.println("STR");	0
265	10	trautonen_coveralls-maven-plugin	CircleTest	testIsSelectedForCircle	assertTrue(newCircle(env()).isSelected());	finalCirclecircle=newCircle();	0
266	10	adlnet_jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	100
266	10	adlnet_jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	100
266	10	adlnet_jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	100
266	10	adlnet_jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(statementRef.getId(),id);	100
267	10	adlnet_jxapi	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	33
267	10	adlnet_jxapi	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	33
267	10	adlnet_jxapi	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(1,actual.size());	33
267	10	adlnet_jxapi	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	33
268	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	83
268	10	DigitalPebble_storm-crawler	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.matches(expectedResult));	83
269	10	adlnet_jxapi	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.equals(expected));	100
269	10	adlnet_jxapi	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	100
269	10	adlnet_jxapi	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.matches(expected));	100
269	10	adlnet_jxapi	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.startsWith(expected));	100
269	10	adlnet_jxapi	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.equals(expected));	100
270	10	TooTallNate_Java-WebSocket	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertEquals(Opcode.CLOSING,frame.getOpcode());	29
270	10	TooTallNate_Java-WebSocket	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	frame.setReason("STR");	0
271	10	gvlasov_collections-utils	IterableToStreamTest	iterableToStream	assertEquals(Arrays.asList(1,2,3,4,5,6),IterableToStream.stream(ImmutableList.of(1,2,3,4,5,6)).collect(java.util.stream.Collectors.toList()));	finalIterable<Integer>iterable=Iterations.iterable(1,2);	0
272	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,"STR");	0
272	10	javadev_moneytostr-russian	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	MoneytoStr=newMoneyToStr(Currency.USD,MoneyToStr.Language.UKR,null);	0
274	10	orientechnologies_orientdb	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	finalByteresult=byteSerializer.deserialize(stream,0);	0
274	10	orientechnologies_orientdb	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertSame(OBJECT,byteSerializer.deserialize(stream,0));	100
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,false,Locale.ENGLISH);	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,false,newLocale("STR"));	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,true,Locale.ENGLISH);	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,true,newLocale("STR"));	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,false,null);	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,false,Locale.ROOT);	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	parser.parse(sample1,false,newLocale("STR"));	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,true,null);	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,false,Locale.GERMAN);	0
277	10	fluenda_ParCEFone	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	CommonEventevent=parser.parse(sample1,true,Locale.ROOT);	0
278	10	orientechnologies_orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	System.out.println(idProperty.getName());	0
279	10	adlnet_jxapi	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected,actual);	100
279	10	adlnet_jxapi	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	100
279	10	adlnet_jxapi	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(1,actual.size());	100
279	10	adlnet_jxapi	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected,actual);	100
279	10	adlnet_jxapi	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.contains(e));	100
279	10	adlnet_jxapi	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(1,actual.size());	100
279	10	adlnet_jxapi	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.size()==1);	100
280	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,3));	0
280	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,1));	0
280	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,2));	0
280	10	orientechnologies_orientdb	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	expectedResult.add(newOCompositeKey(12,4));	0
281	10	orientechnologies_orientdb	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	db.command(newOCommandSQL("STR")).execute();	0
281	10	orientechnologies_orientdb	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	System.out.println(idProperty.getName());	0
282	10	TooTallNate_Java-WebSocket	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	StringprovidedProtocol=protocol0.getProvidedProtocol();	0
284	10	orientechnologies_orientdb	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet();	0
284	10	orientechnologies_orientdb	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet(doc);	0
284	10	orientechnologies_orientdb	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet("STR");	0
285	10	gvlasov_collections-utils	IterableToStreamTest	iteratorToStream	assertEquals(Arrays.asList(1,2,3,4,5,6),IterableToStream.stream(ImmutableList.of(1,2,3,4,5,6).iterator()).collect(java.util.stream.Collectors.toList()));	finalStream<Integer>stream=IterableToStream.stream(Iterations.iterator(1,2));	0
285	10	gvlasov_collections-utils	IterableToStreamTest	iteratorToStream	assertEquals(Arrays.asList(1,2,3,4,5,6),IterableToStream.stream(ImmutableList.of(1,2,3,4,5,6).iterator()).collect(java.util.stream.Collectors.toList()));	finalIterator<Integer>iterator=Iterations.iterator(1,2);	0
285	10	gvlasov_collections-utils	IterableToStreamTest	iteratorToStream	assertEquals(Arrays.asList(1,2,3,4,5,6),IterableToStream.stream(ImmutableList.of(1,2,3,4,5,6).iterator()).collect(java.util.stream.Collectors.toList()));	finalStream<Integer>stream=IterableToStream.stream(Iterations.iterator(1));	0
285	10	gvlasov_collections-utils	IterableToStreamTest	iteratorToStream	assertEquals(Arrays.asList(1,2,3,4,5,6),IterableToStream.stream(ImmutableList.of(1,2,3,4,5,6).iterator()).collect(java.util.stream.Collectors.toList()));	finalIterator<Integer>iter=Iterations.iterator(1,2);	0
286	10	trautonen_coveralls-maven-plugin	JenkinsTest	testIsSelectedForNothing	assertFalse(newJenkins(newHashMap<String,String>()).isSelected());	finalbooleanselected=newJenkins().isSelected();	0
287	10	orientechnologies_orientdb	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertEquals(1,ret.getId());	75
287	10	orientechnologies_orientdb	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(ret!=null);	63
287	10	orientechnologies_orientdb	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(retinstanceofOClientConnection);	63
287	10	orientechnologies_orientdb	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	Mockito.verify(protocol).getServer();	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	Stringresponse=client.removeHeader("STR");	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	client.removeHeader("STR");	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	Stringresult=client.removeHeader("STR");	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	StringremoveHeader=client.removeHeader("STR");	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	Stringremoved=client.removeHeader("STR");	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	Stringremove=client.removeHeader("STR");	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	Stringheader=client.removeHeader("STR");	0
288	10	TooTallNate_Java-WebSocket	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	Stringexpected="STR";	0
290	10	orientechnologies_orientdb	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	finalOCompositeKeyotherCompositeKey=newOCompositeKey();	0
290	10	orientechnologies_orientdb	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	finalOCompositeKeyanotherCompositeKey2=newOCompositeKey();	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]bytes=EbmlUtil.ebmlEncode(123L);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]bytes=EbmlUtil.ebmlEncode(1L);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]bytes=EbmlUtil.ebmlEncode(1);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]encoded=EbmlUtil.ebmlEncode(123L);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]data=EbmlUtil.ebmlEncode(1L);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]encoded=EbmlUtil.ebmlEncode(1L);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]result=EbmlUtil.ebmlEncode(123L);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]bytes=EbmlUtil.ebmlEncode(123);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]data=EbmlUtil.ebmlEncode(1);	0
292	10	jcodec_jcodec	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	byte[]encoded=EbmlUtil.ebmlEncode(1);	0
293	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	logger.info("STR");	0
293	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	logger.info(LOG_MESSAGE);	0
293	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	logger.info(Level.INFO);	0
293	10	cucumber-ltd_cucumber-pro-plugin-jvm	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	logger.info("STR",Level.INFO);	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<String>words=Arrays.asList("STR","STR");	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	OpenKoreanTextProcessorJava.addNounsToDictionary(tokens);	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	OpenKoreanTextProcessor.addNounsToDictionary(tokens);	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<String>words=Arrays.asList("STR");	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<String>wordsList=Arrays.asList("STR","STR");	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<String>words=Arrays.asList("STR","STR","STR");	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	KoreanTokenizer.addNounsToDictionary(tokens);	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words2=OpenKoreanTextProcessorJava.tokenize(text);	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<KoreanTokenizer.KoreanToken>words2=OpenKoreanTextProcessorJava.tokenize(tokens);	0
294	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	List<String>words=Collections.singletonList("STR");	0
295	10	fluenda_ParCEFone	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.equals(null));	67
295	10	fluenda_ParCEFone	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.equals("STR"));	67
295	10	fluenda_ParCEFone	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.equals(null));	67
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	server.shutdown();	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	server.get().shutdown();	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	Serverserver=mock(Server.class);	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	Serverserver=newServer(){@Overridepublicvoidshutdown(){}};	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	Serverserver=newServer(){@Overridepublicvoidshutdown(){return;	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	Serverserver=newServer(){@Overridepublicvoidshutdown()throwsException{}};	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	Serverserver=newServer("STR"){@Overridepublicvoidshutdown(){}};	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	Serverserver=newServer();	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	server.setAvailability("STR");	0
297	10	sofastack_sofa-bolt	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	Serverserver=newServer("STR");	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=newDefaultRocketMqProducer();	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=(DefaultRocketMqProducer)this.context.getBean(RocketMqProducer.class);	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=(DefaultRocketMqProducer)RocketMqAutoConfiguration.getInstance().getProducer();	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=(DefaultRocketMqProducer)this.context.getBean(TestRocketMqProducer.class);	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=(DefaultRocketMqProducer)this.context.getBean("STR");	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=(DefaultRocketMqProducer)this.context.getBean("STR",RocketMqProducer.class);	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=(DefaultRocketMqProducer)configuration.getProducer();	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=(DefaultRocketMqProducer)RocketMqConfiguration.getInstance().getProducer();	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultMQProducerproducer=(DefaultMQProducer)RocketMqAutoConfiguration.getInstance().getProducer();	0
298	10	rhwayfun_spring-boot-rocketmq-starter	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	DefaultRocketMqProducerproducer=getRocketMqProducer();	0
300	10	OpenLiberty_ci.common	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	70
300	10	OpenLiberty_ci.common	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	70
300	10	OpenLiberty_ci.common	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertEquals(tempTextFile,configFile);	70
302	10	rockagen_commons-lib	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	100
303	10	sofastack_sofa-bolt	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertEquals(false,client1.isConnectionMonitorSwitchOn());	36
305	10	adlnet_jxapi	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected,actual);	100
305	10	adlnet_jxapi	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	100
305	10	adlnet_jxapi	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected,actual);	100
305	10	adlnet_jxapi	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(2,actual.size());	100
306	10	TooTallNate_Java-WebSocket	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertFalse(frame.isFin());	50
306	10	TooTallNate_Java-WebSocket	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertFalse(frame.isFin());	50
306	10	TooTallNate_Java-WebSocket	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertFalse(frame.isFin());	50
308	10	sofastack_sofa-bolt	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotNull(btUrl.getIp());	26
309	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	env.put("STR","STR");	0
309	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	CIEnvironmentenv2=newCIEnvironment("STR","STR","STR","STR");	0
310	10	orientechnologies_orientdb	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertEquals(3,names.size());	84
313	10	arnohaase_a-foundation	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	map.put(key1,"STR");	0
313	10	arnohaase_a-foundation	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	finalStringkey4=newString("STR");	0
313	10	arnohaase_a-foundation	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	map.put(key1,key2);	0
313	10	arnohaase_a-foundation	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	finalStringkey4="STR";	0
313	10	arnohaase_a-foundation	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(map.size(),0);	0
314	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	Puzzlec=newPuzzle(swap(getSolution(),8,3));	0
314	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	Puzzlec=newPuzzle(swap(getSolution(),8,4));	0
314	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	Puzzlec=newPuzzle(swap(getSolution(),8,2));	0
314	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	Puzzlec=newPuzzle(swap(getSolution(),8,1));	0
314	10	TeachingKidsProgramming_TeachingKidsProgramming.Source.Java	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	Puzzlec=newPuzzle(swap(getSolution(),9,3));	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=FileHelper.getStringFrom("STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=FileHelper.getStringFrom("STR"+getDatabaseName()+"STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=readFileAsString("STR"+getDatabaseName()+"STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=readFileAsString("STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=readFileAsString(getClass().getResource("STR"),"STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=FileHelper.getStringFrom("STR"+getDatabaseName()+"STR","STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=readFileAsString(getClass().getResource("STR"),"STR"+getDatabaseName()+"STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=FileHelper.getStringFrom(getClass(),"STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=readFileFromClassPathOrPath("STR");	0
315	10	orientechnologies_orientdb	HttpCommandTest	commandWithPosParams	assertEquals(post("STR"+getDatabaseName()+"STR").payload("STR",CONTENT.TEXT).setUserName("STR").setUserPassword("STR").getResponse().getStatusLine().getStatusCode(),200);	Stringjson=FileHelper.getStringFrom("STR","STR");	0
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m�	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m��k.isRecognized());	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertFalse(j��m��k.isRecognized());	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m�	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m�	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m�	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m�IF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGEIF_ICMPGELDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_ENDLDC_END);	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m�	32
318	10	PeterisP_morphology	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(j��m�	32
320	10	fluent_fluent-logger-java	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	logger=FluentLogger.getLogger("STR");	0
320	10	fluent_fluent-logger-java	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	logger.close();	0
320	10	fluent_fluent-logger-java	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	verify(logger,times(1)).flush();	0
320	10	fluent_fluent-logger-java	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	verify(logger,times(1)).close();	0
321	10	amlinv_stat-collection-utils	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	ParameterReplacerresult=preparer.getParameterReplacer();	0
321	10	amlinv_stat-collection-utils	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(preparer.getParameterReplacer());	100
321	10	amlinv_stat-collection-utils	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	this.preparer.setParameterReplacer(null);	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returntrue;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returnfalse;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returno.length()==1;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicate<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returntrue;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returno.length()==2;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){return"STR".equals(o);	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicate<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returnfalse;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returno.length()==0;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){return"STR".length()==1;	0
322	10	arnohaase_a-foundation	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	finalAPredicateNoThrow<String>len2=newAPredicateNoThrow<String>(){@Overridepublicbooleanapply(Stringo){returno.length()==3;	0
323	10	PeterisP_morphology	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
323	10	PeterisP_morphology	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
323	10	PeterisP_morphology	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	100
324	10	hazelcast_hazelcast-simulator	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	75
325	10	nidi3_graphviz-java	FillStyleTest	zigzag	assertEquals(map("STR","STR"),FillStyle.zigzag().values);	Zigzagzigzag=zigzag();	0
325	10	nidi3_graphviz-java	FillStyleTest	zigzag	assertEquals(map("STR","STR"),FillStyle.zigzag().values);	Zigzagzigzag=newZigzag();	0
326	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	Stringresult=OpenKoreanProcessorJava.detokenize(words);	0
326	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	Stringactual=OpenKoreanProcessorJava.detokenize(words);	0
326	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	Stringtext=OpenKoreanProcessorJava.detokenize(words);	0
326	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	Stringexpected="STR";	0
326	10	open-korean-text_open-korean-text	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	List<String>words2=Arrays.asList("STR","STR");	0
329	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_int_whitespace	assertTrue(bind0(testObject,"STR","STR"+NEW_LINE));	assertFalse(PropertyBindingSupport.bind0(testObject,"STR","STR"));	50
329	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_int_whitespace	assertTrue(bind0(testObject,"STR","STR"+NEW_LINE));	booleanresult=PropertyBindingSupport.bind0(testObject,"STR","STR");	0
329	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_int_whitespace	assertTrue(bind0(testObject,"STR","STR"+NEW_LINE));	assertFalse(PropertyBindingSupport.bind0(testObject,"STR","STR"));	50
329	10	hazelcast_hazelcast-simulator	PropertyBindingSupport_bind0_NumericalTest	bind_int_whitespace	assertTrue(bind0(testObject,"STR","STR"+NEW_LINE));	assertFalse(PropertyBindingSupport.bind0(this,"STR","STR"));	50
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	this.testServer.cookiesToSend.add(newCookie("STR","STR",30));	0
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	Response<Cookie>response=responseHandler.getResponse();	0
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	Response<String>response=responseHandler.getResponse();	0
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	this.testServer.cookiesToSend.add(newCookie("STR","STR",20));	0
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	this.testServer.cookiesToSend.add(newCookie("STR","STR",10));	0
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	HttpEntityentity=responseHandler.getResponse();	0
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	this.testServer.cookiesToSend.add(newCookie("STR","STR",25));	0
330	10	NanoHttpd_nanohttpd	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	this.testServer.cookiesToSend.add(newCookie("STR","STR",15));	0
331	10	trautonen_coveralls-maven-plugin	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNotNull(properties);	20
334	10	amlinv_stat-collection-utils	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	Stringresult=factory.getTargetDescription();	0
335	10	fluenda_ParCEFone	CEFParserTest	invalidMessageValidationTest	assertNull(event);	validator.validate(event);	0
336	10	rockagen_commons-lib	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNotNull(obj);	17
336	10	rockagen_commons-lib	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNotNull(obj);	17
336	10	rockagen_commons-lib	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNotNull(obj);	17
337	10	adlnet_jxapi	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	100
337	10	adlnet_jxapi	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected.get("STR"),actual.get("STR"));	100
337	10	adlnet_jxapi	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	100
337	10	adlnet_jxapi	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	100
337	10	adlnet_jxapi	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected.get("STR"),actual.get("STR"));	100
337	10	adlnet_jxapi	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	100
338	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	env.put("STR","STR");	0
338	10	cucumber-ltd_cucumber-pro-plugin-jvm	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	env.put(ILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOADILOAD);	0
339	10	myabc_markdownj	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	Stringh=m.markdown("STR");	0
339	10	myabc_markdownj	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	Stringh="STR";	0
339	10	myabc_markdownj	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	Stringmarkdown=m.markdown("STR");	0
339	10	myabc_markdownj	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	Stringh=m.markdown("STR"+"STR");	0
339	10	myabc_markdownj	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	Stringh=m.markdown("STR"+"STR"+"STR");	0
340	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet();	0
340	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	doc.addAttribute("STR","STR");	0
340	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet(doc);	0
340	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	ORecordInternal.setDirty(doc);	0
340	10	orientechnologies_orientdb	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	finalTrackedSetset=newTrackedSet("STR");	0
341	10	trautonen_coveralls-maven-plugin	BambooTest	testGetName	assertEquals("STR",newBamboo(env()).getName());	System.out.println("STR");	0
343	10	vdmeer_execs	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	execs.setAppName("STR");	0
343	10	vdmeer_execs	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	execs.run(newString[]{"STR","STR"});	0
343	10	vdmeer_execs	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	execs.run(newString[]{"STR"});	0
343	10	vdmeer_execs	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	execs.execute(newString[]{"STR","STR"});	0
343	10	vdmeer_execs	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	execs.cliAppName("STR");	0
343	10	vdmeer_execs	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	execs.execute(newString[]{"STR"});	0
344	10	orientechnologies_orientdb	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	finalODocumentdoc=r.next();	0
344	10	orientechnologies_orientdb	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	finalODocumentdocument=r.next();	0
345	10	orientechnologies_orientdb	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	db.command("STR");	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]bytes=EbmlUtil.convertToBytes(1);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]data=EbmlUtil.convertToBytes(1);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]bytes=EbmlUtil.convertToBytes(0xffffffffL);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]bytes=EbmlUtil.convertToBytes(1L);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]buf=EbmlUtil.convertToBytes(1);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]bytes=EbmlUtil.convertToBytes(0);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]bytes=EbmlUtil.convertToBytes(0xffffffff);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]data=EbmlUtil.convertToBytes(SintTest.INT_MAX);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]bytes=EbmlUtil.convertToBytes(SintTest.INT_MAX);	0
346	10	jcodec_jcodec	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f});	byte[]data=EbmlUtil.convertToBytes(SintTest.INTEGER);	0
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	43
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	43
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual.equals(expected));	43
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual.equals(expected));	43
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual.contains(expected));	43
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertEquals(actual,expected);	43
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual.matches(expected));	43
349	10	adlnet_jxapi	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	43