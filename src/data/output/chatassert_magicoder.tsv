OracleID	ClassName	TestName	TrueOracle	GenOracle	Correct
0	trung/InMemoryJavaCompiler InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(helloClass);	0
0	adlnet/jxapi ActivityProfileTest	testGetActivityId	assertNotNull(actual);	assertNotNull(activityProfile);	0
0	// LoaderTest	fileNok	"assertEquals(""STR"",resource.getProtocol());"	assertNull(resource);	0
0	amlinv/stat-collection-utils JmxAttributePollerTest	testGetSetScheduler	assertNull(this.poller.getScheduler());	assertNotNull(this.poller.getObjectQueryPreparer());	0
0	// MapUtilTest	testMergeIfAbsent	assertEquals(expected,origMap);	"assertEquals(expected.get(""STR""),origMap.get(""STR""));"	0
/	// MapUtilTest	testMergeIfAbsent	assertEquals(expected,origMap);	"assertEquals(""STR"",origMap.get(""STR""));"	0
/	// MapUtilTest	testMergeIfAbsent	assertEquals(expected,origMap);	"assertEquals(expected.get(""STR""),origMap.get(""STR""));"	0
/	// MapUtilTest	testMergeIfAbsent	assertEquals(expected,origMap);	"assertEquals(""STR"",origMap.get(""STR""));"	0
0	// MorphologyTest	tuStum	assertTrue(stum.isRecognized());	assertFalse(stum.wordformsCount()==0);	0
/	// MorphologyTest	tuStum	assertTrue(stum.isRecognized());	assertFalse(!stum.isRecognized());	0
0	// SimulatorPropertiesTest	testLoad_justKey	"assertTrue(simulatorProperties.get(""STR"").isEmpty());"	"assertTrue(this.simulatorProperties.get(""STR"").equals(""STR""));"	0
/	// SimulatorPropertiesTest	testLoad_justKey	"assertTrue(simulatorProperties.get(""STR"").isEmpty());"	"assertNotNull(this.simulatorProperties.get(""STR""));"	0
/	// MacAddressTest	testAddressUnderscoreSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotNull(macAddress.getBytes());	0
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java StringUtilsTest	testNullIsEmpty	assertTrue(StringUtils.isEmpty(null));	"assertFalse(StringUtils.isEmpty(""STR""));"	0
/	// StringUtilsTest	testNullIsEmpty	assertTrue(StringUtils.isEmpty(null));	"assertFalse(StringUtils.isEmpty(""STR""));"	0
1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleTest	sum_of_cell_distances_is_distance_to_goal	assertEquals(4,p.getDistanceToGoal());	assertFalse(p.isSolved());	0
0	// RecordsTest	tagRec	"assertEquals(""STR"",Records.rec(""STR"",""STR""));"	"assertEquals(""STR"",Records.rec(""STR"",""STR""));"	1
/	// CommUtilTest	testHex	"assertEquals(""STR"",CommUtil.hexdump(""STR"".getBytes()));"	"assertEquals(""STR"",""STR"");"	0
0	// OClientConnectionTest	testValidToken	assertTrue(conn.getTokenBased());	assertTrue(conn.validateSession(tokenBytes,handler,null));	0
1	orientechnologies/orientdb OPropertyMapIndexDefinitionTest	testProcessChangeEventAddKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToAdd,addedKeys);	1
1	// OPropertyMapIndexDefinitionTest	testProcessChangeEventAddKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.size()==1&&keysToAdd.containsKey(12)&&keysToAdd.get(12)==1&&keysToAdd.equals(addedKeys));	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventAddKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertNotNull(keysToAdd.get(12));	0
2	// OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotNull(result);	0
3	orientechnologies/orientdb RemoteQuerySupportTest	testQueryEmbedded	"assertNotNull(item.getProperty(""STR""));"	"assertNotNull(item.getProperty(""STR""));"	1
4	// OUTFSerializerTest	testSerializeWALChanges	assertEquals(stringSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),stringSerializer.getObjectSize(OBJECT));	assertTrue(buffer.limit()==(serializationOffset+data.length));	0
/	// OUTFSerializerTest	testSerializeWALChanges	assertEquals(stringSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),stringSerializer.getObjectSize(OBJECT));	assertEquals(stringSerializer.getObjectSize(OBJECT),buffer.capacity()-serializationOffset);	0
5	// CollectionOfLinkInNestedDocumentTest	nestedLinkSet	assertNotNull(nest1);	assertNotNull(base1);	0
/	// CollectionOfLinkInNestedDocumentTest	nestedLinkSet	assertNotNull(nest1);	assertEquals(value,db.load((ORID)value));	0
/	// CollectionOfLinkInNestedDocumentTest	nestedLinkSet	assertNotNull(nest1);	"assertEquals(""STR"",base1.field(""STR"").getValue());"	0
6	orientechnologies/orientdb SQLMoveVertexCommandTest	testMoveSingleRecordToAnotherClass	assertEquals(doc.getIdentity().getClusterId(),customer.getDefaultClusterId());	assertEquals(doc.getIdentity().getClusterId(),customer.getDefaultClusterId());	1
0	// UuidUtilTest	testNewUnsecureUuidString	assertNotNull(uuid);	assertNotNull(uuid);	1
0	// GoTimeUtilTest	testConversion	"assertEquals(newInteger(23),durationSeconds(""STR""));"	assertNull(durationSeconds(null));	0
0	// H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	???;	0
0	// MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertFalse(atts.isEmpty());	0
/	// MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	"assertFalse(atts.containsKey(""STR""));"	0
1	amlinv/stat-collection-utils BatchPollProcessorTest	testGetSetLog	assertNotNull(this.processor.getLog());	assertNotNull(this.processor.getObjectQueryPreparer());	0
1	// BatchPollProcessorTest	testGetSetLog	assertNotNull(this.processor.getLog());	assertNotNull(this.processor.getLog());	1
/	// BatchPollProcessorTest	testGetSetLog	assertNotNull(this.processor.getLog());	assertNotNull(this.processor.getAttributeInjector());	0
0	sofastack/sofa-bolt ReconnectManagerTest	testCancelReConnection	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	1
0	// ReconnectManagerTest	testCancelReConnection	assertEquals(0,clientDisConnectProcessor.getDisConnectTimes());	assertTrue(clientDisConnectProcessor.getDisConnectTimes()>=0);	0
1	// ThreadLocalArriveTimeHolderTest	testMultiThread	assertTrue(time>=start);	assertEquals(-1,ThreadLocalArriveTimeHolder.getAndClear(channel,1));	0
/	// ThreadLocalArriveTimeHolderTest	testMultiThread	assertTrue(time>=start);	assertEquals(-1,ThreadLocalArriveTimeHolder.getAndClear(channel,2));	0
/	// ThreadLocalArriveTimeHolderTest	testMultiThread	assertTrue(time>=start);	assertEquals(-1,ThreadLocalArriveTimeHolder.getAndClear(channel,3));	0
0	// TimestampParserTest	testParseEpochMillis	assertEquals(time,parsed.getTime());	assertTrue(parsed.getTime()>=time);	0
/	// TimestampParserTest	testParseEpochMillis	assertEquals(time,parsed.getTime());	assertFalse(parsed.getTime()<time);	0
/	// TimestampParserTest	testParseEpochMillis	assertEquals(time,parsed.getTime());	assertFalse(parsed.getTime()>time);	0
2	// UrlUtilsTest	testValidUrlToUri	"assertEquals(newURI(""STR""),uri);"	assertNotNull(uri);	0
0	// SubStatementTest	testSetAttachments	assertNotNull(actual);	assertEquals(expected,substatement.getAttachments());	0
/	// SubStatementTest	testSetAttachments	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
/	// SubStatementTest	testSetAttachments	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// SubStatementTest	testSetAttachments	assertNotNull(actual);	assertTrue(expected.equals(actual));	0
/	// SubStatementTest	testSetAttachments	assertNotNull(actual);	assertEquals(Ljava.lang.String;Ljava/lang/Object;Ljava/lang/Object);	0
1	adlnet/jxapi VerbsTest	testTerminated	assertNotNull(actual);	assertNotNull(actual);	1
2	adlnet/jxapi ResultTest	testSetResponse	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// ResultTest	testSetResponse	assertNotNull(actual);	assertEquals(expected.length(),actual.length());	0
/	// ResultTest	testSetResponse	assertNotNull(actual);	assertTrue(expected.equalsIgnoreCase(actual));	0
/	// ResultTest	testSetResponse	assertNotNull(actual);	assertNotNull(RESPONSE);	0
/	// ResultTest	testSetResponse	assertNotNull(actual);	assertNotNull(RESPONSE);	0
1	// SvgSizeAnalyzerTest	svgWithChanges	"assertEquals(""STR""+""STR""+""STR"",a.getSvg());"	"assertEquals(""STR"",""STR"");"	0
/	// SvgSizeAnalyzerTest	svgWithChanges	"assertEquals(""STR""+""STR""+""STR"",a.getSvg());"	"assertEquals(""STR"",""STR"");"	0
/	// SvgSizeAnalyzerTest	svgWithChanges	"assertEquals(""STR""+""STR""+""STR"",a.getSvg());"	"assertEquals(""STR"",""STR"");"	0
2	nidi3/graphviz-java RankTest	combine	"assertEquals(attrs(attr(""STR"",true),attr(""STR"",""STR""),attr(""STR"",""STR""),attr(""STR"",""STR"")),attrs(Rank.sepEqually(2).newRank(true).noCluster().dir(TOP_TO_BOTTOM).sep(3)));"	"assertEquals(attrs(attr(""STR"",""STR"")),attrs(Rank.sep(2)));"	0
/	// RankTest	combine	"assertEquals(attrs(attr(""STR"",true),attr(""STR"",""STR""),attr(""STR"",""STR""),attr(""STR"",""STR"")),attrs(Rank.sepEqually(2).newRank(true).noCluster().dir(TOP_TO_BOTTOM).sep(3)));"	"assertEquals(attrs(attr(""STR"",""STR"")),attrs(Rank.dir(LEFT_TO_RIGHT)));"	0
/	// RankTest	combine	"assertEquals(attrs(attr(""STR"",true),attr(""STR"",""STR""),attr(""STR"",""STR""),attr(""STR"",""STR"")),attrs(Rank.sepEqually(2).newRank(true).noCluster().dir(TOP_TO_BOTTOM).sep(3)));"	"assertEquals(attrs(attr(""STR"",""STR"")),attrs(Rank.combine(0)));"	0
/	// RankTest	combine	"assertEquals(attrs(attr(""STR"",true),attr(""STR"",""STR""),attr(""STR"",""STR""),attr(""STR"",""STR"")),attrs(Rank.sepEqually(2).newRank(true).noCluster().dir(TOP_TO_BOTTOM).sep(3)));"	"assertEquals(attrs(attr(""STR"",""STR"")),attrs(Rank.combine(2)));"	0
/	// RankTest	combine	"assertEquals(attrs(attr(""STR"",true),attr(""STR"",""STR""),attr(""STR"",""STR""),attr(""STR"",""STR"")),attrs(Rank.sepEqually(2).newRank(true).noCluster().dir(TOP_TO_BOTTOM).sep(3)));"	"assertEquals(attrs(attr(""STR"",""STR"")),attrs(Rank.combine(1)));"	0
/	// RankTest	combine	"assertEquals(attrs(attr(""STR"",true),attr(""STR"",""STR""),attr(""STR"",""STR""),attr(""STR"",""STR"")),attrs(Rank.sepEqually(2).newRank(true).noCluster().dir(TOP_TO_BOTTOM).sep(3)));"	"assertEquals(attrs(attr(""STR"",""STR"")),attrs(Rank.combine(7)));"	0
0	DigitalPebble/storm-crawler HostURLFilterTest	testAllAllowed	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",filterResult);"	1
0	// HostURLFilterTest	testAllAllowed	"assertEquals(""STR"",filterResult);"	"assertSame(""STR"",filterResult);"	0
/	// HostURLFilterTest	testAllAllowed	"assertEquals(""STR"",filterResult);"	assertNotEquals(filterResult,null);	0
1	// HostURLFilterTest	testAllForbidden	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",filterResult);"	1
1	// HostURLFilterTest	testAllForbidden	"assertEquals(""STR"",filterResult);"	assertEquals(sourceURL,sourceURL);	0
1	orientechnologies/orientdb SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	"assertEquals(""STR"",retrievedChild.getName());"	0
/	// SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	"assertNotEquals(""STR"",retrievedChild.getName());"	0
/	// SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	"assertEquals(retrievedChild.getName(),""STR"");"	0
/	// SimpleParentChildTest	testWithSets	"assertEquals(""STR"",retrievedParent.getFriends().iterator().next().getName());"	"assertTrue(retrievedChild.getName().equalsIgnoreCase(""STR""));"	0
2	// OScriptExecutionTest	testLazyExecutionPlanning	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertTrue(db.execute(""STR"",script).next().getProperty(""STR""));"	0
/	// OScriptExecutionTest	testLazyExecutionPlanning	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertTrue(item.getProperty(""STR"").equals(""STR""));"	0
2	// OScriptExecutionTest	testLazyExecutionPlanning	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertEquals(""STR"",item.getProperty(""STR""));"	1
/	// OScriptExecutionTest	testLazyExecutionPlanning	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertEquals(""STR"",item.getProperty(""STR""));"	1
/	// OScriptExecutionTest	testLazyExecutionPlanning	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertTrue(item.toString(),""STR"".equals(result));"	0
3	orientechnologies/orientdb OAlterPropertyStatementExecutionTest	testSetCustom	assertNotNull(result);	assertNotNull(result);	1
4	orientechnologies/orientdb ORecordSerializerBinaryTest	testGetFieldFromEmbeddedList	assertEquals(setValue,deserializedValue);	assertEquals(setValue,deserializedValue);	1
4	// ORecordSerializerBinaryTest	testGetFieldFromEmbeddedList	assertEquals(setValue,deserializedValue);	assertEquals((Integer)9,deserializedValue);	0
/	// ORecordSerializerBinaryTest	testGetFieldFromEmbeddedList	assertEquals(setValue,deserializedValue);	assertEquals(setValue,deserializedValue);	1
/	// ORecordSerializerBinaryTest	testGetFieldFromEmbeddedList	assertEquals(setValue,deserializedValue);	assertTrue(deserializedValue.equals(setValue));	0
5	// LuceneMixIndexTest	testMixCompositeQuery	assertEquals(1,docs.size());	assertFalse(docs.isEmpty());	0
0	fabric8io/fabric8-maven-plugin SpringBootUtilTest	testNonExistentYamlToPropertiesParsing	assertNotNull(props);	assertNotNull(props);	1
0	amlinv/stat-collection-utils JmxAttributePollerTest	testGetSetBatchPollProcessor	assertNotNull(this.poller.getBatchPollProcessor());	assertNotNull(this.poller.getObjectQueryPreparer());	0
0	// JmxAttributePollerTest	testGetSetBatchPollProcessor	assertNotNull(this.poller.getBatchPollProcessor());	assertNotNull(this.poller.getBatchPollProcessor());	1
/	// JmxAttributePollerTest	testGetSetBatchPollProcessor	assertNotNull(this.poller.getBatchPollProcessor());	assertNotNull(this.poller.getLog());	0
0	adlnet/jxapi SubStatementTest	testSetVerb	assertNotNull(actual);	assertNotNull(actual);	1
1	adlnet/jxapi ActivityDefinitionTest	testGetCorrectResponsesPattern	assertNotNull(actual);	assertNotNull(activityDefinition);	0
/	// ActivityDefinitionTest	testGetCorrectResponsesPattern	assertNotNull(actual);	assertNotNull(activityDefinition.getCorrectResponsesPattern());	0
0	// AsCollectionCopyTest	testAsCollectionCopy	assertEquals(2,copied.size());	assertEquals(2,copied.size());	1
0	// AsCollectionCopyTest	testAsCollectionCopy	assertEquals(2,copied.size());	"assertFalse(copied.contains(""STR""));"	0
0	// RpcAddressParserTest	testParserWithProtocol	"assertEquals(""STR"",btUrl.getIp());"	assertEquals(1111,btUrl.getPort());	0
/	// RpcAddressParserTest	testParserWithProtocol	"assertEquals(""STR"",btUrl.getIp());"	assertEquals(1,btUrl.getProtocol());	0
0	// RpcAddressParserTest	testParserWithProtocol	"assertEquals(""STR"",btUrl.getIp());"	"assertEquals(""STR"",btUrl.getIp());"	1
/	// RpcAddressParserTest	testParserWithProtocol	"assertEquals(""STR"",btUrl.getIp());"	assertTrue(1111==btUrl.getPort());	0
0	// TSqlBuilderTest	testSort	"assertEquals(""STR"",sql.toString());"	"assertEquals(""STR"",sql.toString());"	1
0	// MacAddressTest	testAddressNormalizedSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isMulticast());	0
/	// MacAddressTest	testAddressNormalizedSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isLocal());	0
0	// MPEGESTest	testES	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertEquals(0,MPEGTestConst.toArray(f1.data),frame1);	0
/	// MPEGESTest	testES	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertNotNull(f1);	0
/	// MoneyToStrTest	checkUSDUKR	"assertEquals(""STR"",moneyToStrUSD.convert(V_300D));"	"assertEquals(""STR"",""STR"");"	0
/	// MoneyToStrTest	checkUSDUKR	"assertEquals(""STR"",moneyToStrUSD.convert(V_300D));"	assertFalse(moneyToStrPER1000.convert(-V_300D).isEmpty());	0
/	// MoneyToStrTest	checkUSDUKR	"assertEquals(""STR"",moneyToStrUSD.convert(V_300D));"	assertNotNull(moneyToStrUAH);	0
0	// ProtocolTest	testToString	"assertEquals(""STR"",protocol0.getProvidedProtocol());"	"assertTrue(protocol0.acceptProvidedProtocol(""STR""));"	0
/	// ProtocolTest	testToString	"assertEquals(""STR"",protocol0.getProvidedProtocol());"	"assertTrue(protocol0.acceptProvidedProtocol(""STR""));"	0
/	// ProtocolTest	testToString	"assertEquals(""STR"",protocol0.getProvidedProtocol());"	"assertTrue(protocol0.acceptProvidedProtocol(""STR""));"	0
1	// WebSocketServerTest	testGetDrafts	assertEquals(1,server.getDraft().size());	assertEquals(draftCollection.size(),1);	0
/	// WebSocketServerTest	testGetDrafts	assertEquals(1,server.getDraft().size());	assertNotNull(server);	0
/	// WebSocketServerTest	testGetDrafts	assertEquals(1,server.getDraft().size());	assertNotNull(draftCollection);	0
0	// OCommandExecutorSQLSelectTest	testFlattenOnEmbedded	assertEquals(qResult.size(),1);	"assertEquals(qResult.get(0).getField(""STR""),""STR"");"	0
/	// OCommandExecutorSQLSelectTest	testFlattenOnEmbedded	assertEquals(qResult.size(),1);	"assertEquals(qResult.get(0).getField(""STR""),""STR"");"	0
2	// OPropertyMapIndexDefinitionTest	testCreateSingleValueByValue	assertEquals(result,12);	assertNotNull(result);	0
3	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertArrayEquals(huntUglyPicture,loadedHunt.getImageData());	0
/	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertEquals(savedHunt.getImageData(),loadedHunt.getImageData());	0
/	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertArrayEquals(hunt.getImageData(),loadedHunt.getImageData());	0
/	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertEquals(huntUglyPicture,loadedHunt.getImageData());	0
/	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertNotNull(loadedHunt.getImageData());	0
/	// OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping	assertNotNull(savedHunt);	assertEquals(hunt.getImageData(),loadedHunt.getImageData());	0
4	orientechnologies/orientdb ODropSequenceStatementExecutionTest	testPlain	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	assertEquals(name,db.getMetadata().getSequenceLibrary().getSequence(name).getName());	0
/	// ODropSequenceStatementExecutionTest	testPlain	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	"assertEquals(""STR"",db.getMetadata().getSequenceLibrary().getSequence(name).getName());"	0
4	// ODropSequenceStatementExecutionTest	testPlain	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	1
/	// ODropSequenceStatementExecutionTest	testPlain	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	"assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(""STR""));"	0
/	// ODropSequenceStatementExecutionTest	testPlain	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name));	assertNotNull(db.getMetadata().getSequenceLibrary().getSequence(name).getDocument());	0
5	orientechnologies/orientdb OCompositeKeyTest	testCompareToLT	assertEquals(compositeKey.compareTo(anotherCompositeKey),-1);	assertFalse(compositeKey.equals(anotherCompositeKey));	0
6	// LuceneSpatialMiscFunctionsTest	testStContainsPoint	"assertEquals(true,next.field(""STR""));"	"assertEquals(true,next.field(""STR""));"	1
/	// LuceneSpatialMiscFunctionsTest	testStContainsPoint	"assertEquals(true,next.field(""STR""));"	"assertEquals(next.field(""STR""),next.field(""STR""));"	0
/	// LuceneSpatialMiscFunctionsTest	testStContainsPoint	"assertEquals(true,next.field(""STR""));"	"assertEquals((next.field(""STR"")),(next.field(""STR"")));"	0
/	// LuceneSpatialTxPointTest	testIndexingComplexUpdateTxPoint	assertEquals(3,index.getSize());	assertFalse(5<2);	0
8	// OCompositeIndexDefinitionTest	testIndexReload	assertEquals(result,compositeIndex);	assertTrue(result.toString().equals(compositeIndex.toString()));	0
/	// OCompositeIndexDefinitionTest	testIndexReload	assertEquals(result,compositeIndex);	assertFalse(result==compositeIndex);	0
0	myabc/markdownj TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	assertEquals(expected.toString(),actual.toString());	0
/	// TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	assertNull(actual.toString());	0
/	// TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	assertNull(actual);	0
/	// TestTextEditor	testDetabify	"assertEquals(""STR"",newTextEditor(""STR"").detabify().toString());"	assertNotNull(actual);	0
0	// WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertNotNull(file);	1
0	// YamlConfigLoaderTest	roundtrips	"assertEquals(yaml,config.toYaml(""STR""));"	"assertEquals(true,config.getBoolean(""STR""));"	0
/	// YamlConfigLoaderTest	roundtrips	"assertEquals(yaml,config.toYaml(""STR""));"	"assertEquals(true,config.getBoolean(""STR""));"	0
0	// PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertFalse(getPuzzle(3).isSolved());	0
/	// PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotNull(getPuzzle(3));	0
0	adlnet/jxapi ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertNotNull(activityDefinition.getType());	0
1	adlnet/jxapi VerbsTest	testCompleted	assertNotNull(actual);	assertNotNull(actual);	1
0	jcodec/jcodec CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	assertEquals(m,new`MockMDecoder`(newint[]{0},newint[]{64}));	0
/	// CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	assertEquals(0,0);	0
/	// CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	"assertEquals(""STR"",""STR"");"	0
/	// CABACTest	testReadIntraChromaPredMode	assertEquals(0,newCABAC(1).readIntraChromaPredMode(m,0,null,null,false,false));	assertEquals(true,true);	0
0	// IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	0
0	arnohaase/a-foundation AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(\""\"",result);"	0
0	// AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result);"	1
/	// AJsonSerHelperTest	testArray1	"assertEquals(""STR"",result);"	"assertEquals(""STR""+true+""STR"",result);"	0
0	// JavaCompilerOptionsTest	testRelease	assertEquals(3,result.size());	assertEquals(3,result.size());	1
0	// JavaCompilerOptionsTest	testRelease	assertEquals(3,result.size());	assertFalse(result.contains(jco));	0
/	// JavaCompilerOptionsTest	testRelease	assertEquals(3,result.size());	assertFalse(result.contains(jco));	0
/	// JavaCompilerOptionsTest	testRelease	assertEquals(3,result.size());	assertFalse(jco.isShowWarnings());	0
/	// JavaCompilerOptionsTest	testTarget	assertEquals(3,result.size());	assertNotNull(result.get(0));	0
1	amlinv/stat-collection-utils ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotNull(this.preparer.getParameterReplacer());	0
/	// ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotNull(result.getAttributeNames());	0
0	orientechnologies/orientdb OETLCSVExtractorTest	testDoubleWithingQuotes	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
0	// OETLCSVExtractorTest	testDoubleWithingQuotes	assertFalse(res.isEmpty());	assertNotNull(res.get(0));	0
1	orientechnologies/orientdb OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToAdd,addedKeys);	1
1	// OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(removedKeys,keysToRemove);	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToRemove,removedKeys);	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(2,mapToTest.size());	0
/	// OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	assertEquals(keysToAdd,addedKeys);	assertEquals(mapToTest.size(),2);	0
2	// ODocumentSchemalessBinarySerializationTest	testEmbeddedListOfEmbeddedMap	assertEquals(extr.fields(),document.fields());	assertTrue(document.equals(extr));	0
3	orientechnologies/orientdb ODropClusterStatementExecutionTest	testDropClusterIfExists	assertTrue(db.getClusterIdByName(cluster)>0);	assertTrue(db.getClusterIdByName(cluster)>0);	1
3	// ODropClusterStatementExecutionTest	testDropClusterIfExists	assertTrue(db.getClusterIdByName(cluster)>0);	"assertFalse(db.getClusterIdByName(""STR"")>=0);"	0
4	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertEquals(ORecordOperation.CREATED,request.getOperations().get(0).getType());	0
/	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertEquals(-1,request.getTxId());	0
/	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertEquals(operations.size(),((OBatchOperationsRequest)request).getOperations().size());	0
/	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertEquals(request.getOperations().size(),operations.size());	0
/	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertFalse(operations.isEmpty());	0
4	// OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertEquals(request.getOperations().size(),1);	1
5	// OSQLFunctionAbsoluteValueTest	testEmpty	assertNull(result);	assertEquals(null,function.getResult());	0
/	// OSQLFunctionAbsoluteValueTest	testEmpty	assertNull(result);	"assertEquals(""STR"",function.getResult());"	0
/	// OSQLFunctionAbsoluteValueTest	testEmpty	assertNull(result);	???;	0
/	// OSQLFunctionAbsoluteValueTest	testEmpty	assertNull(result);	assertTrue(function.getResult());	0
/	// OSQLFunctionAbsoluteValueTest	testEmpty	assertNull(result);	assertNull(function.getResult());	0
6	// OLiveQueryMessagesTests	testLiveQueryPushRequest	assertEquals(pushRequestRead.getMonitorId(),10);	assertTrue(pushRequest.getMonitorId()==pushRequestRead.getMonitorId());	0
6	// OLiveQueryMessagesTests	testLiveQueryPushRequest	assertEquals(pushRequestRead.getMonitorId(),10);	assertEquals(pushRequestRead.getMonitorId(),10);	1
/	// OLiveQueryMessagesTests	testLiveQueryPushRequest	assertEquals(pushRequestRead.getMonitorId(),10);	assertEquals(pushRequest.getMonitorId(),pushRequestRead.getMonitorId());	0
7	orientechnologies/orientdb TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	assertEquals(ob2.getName(),ob1.getFriend().getName());	0
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	"assertEquals(""STR"",ob2.getName());"	0
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	assertNotNull(ob1);	0
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	assertSame(ob1.getFriend(),ob2);	0
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	"assertEquals(""STR"",ob1.getFriend().getName());"	0
/	// TestObjectWithDeletedLink	testDeletedLink	assertNotNull(ob1.getFriend());	"assertEquals(ob1.getFriend().getName(),""STR"");"	0
/	// OConnectionExecutorTransactionTest	testExecutionBeginTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(executor);	0
/	// OConnectionExecutorTransactionTest	testExecutionBeginTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(executor);	0
9	// RemoteSimpleSchemaTest	testNotCaseSensitiveDrop	"assertTrue(database.getMetadata().getSchema().existsClass(""STR""));"	"assertTrue(database.existsClass(""STR""));"	0
/	// RemoteSimpleSchemaTest	testNotCaseSensitiveDrop	"assertTrue(database.getMetadata().getSchema().existsClass(""STR""));"	"assertNotNull(database.getClass(""STR""));"	0
0	Yubico/yubico-java-client YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	0
0	fabric8io/fabric8-maven-plugin ThorntailUtilTest	testReadThorntailPort	assertNotNull(props);	assertNotNull(props);	1
0	hazelcast/hazelcast-simulator SimulatorAddressTest	testGetAddressIndex_fromAgent	assertEquals(5,agentAddress(5).getAddressIndex());	assertEquals(5,workerAddress(5,6).getAgentIndex());	0
/	// SimulatorAddressTest	testGetAddressIndex_fromAgent	assertEquals(5,agentAddress(5).getAddressIndex());	assertEquals(coordinatorAddress(),agentAddress(1).getParent());	0
0	// MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertNotNull(macAddress);	0
0	// LoadKeyStoreTest	loadKeyStoreFromResourcesWrongPassword	assertNotNull(resourceAsStream);	assertFalse(keyStorePath.isEmpty());	0
/	// LoadKeyStoreTest	loadKeyStoreFromResourcesWrongPassword	assertNotNull(resourceAsStream);	assertFalse(resourceAsStream==null);	0
0	// DirectorySourceLoaderTest	testMissingSourceFileFromDirectory	"assertNull(sourceLoader.load(""STR""));"	"assertNull(sourceLoader.load(""STR""));"	1
0	// HostURLFilterTest	testWithinHostOnly	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",filterResult);"	1
0	// HostURLFilterTest	testWithinHostOnly	"assertEquals(""STR"",filterResult);"	assertEquals(sourceURL.toString(),filterResult);	0
0	adlnet/jxapi ContentActivitiesTest	testGetCategory	assertNotNull(actual);	assertNotNull(actual);	1
/	// AboutTest	testSetExtensions	assertNotNull(actual);	assertNotNull(about.getExtensions());	0
2	adlnet/jxapi SubStatementTest	testGetContext	assertNotNull(actual);	assertNotNull(actual);	1
3	// AttachmentTest	testGetUsageType	assertNotNull(actual);	assertNull(null);	0
/	// AttachmentTest	testGetUsageType	assertNotNull(actual);	assertNotNull(attachment.getUsageType());	0
4	adlnet/jxapi StatementTest	testSetVersion	assertNotNull(actual);	assertNotNull(actual);	1
4	// StatementTest	testSetVersion	assertNotNull(actual);	assertNotNull(statement.getVerb());	0
/	// StatementTest	testSetVersion	assertNotNull(actual);	assertNotNull(statement.getVersion());	0
/	// StatementTest	testSetVersion	assertNotNull(actual);	assertNotNull(statement.getId());	0
/	// StatementTest	testSetVersion	assertNotNull(actual);	assertNotNull(statement);	0
0	// ACollectionHelperTest	testCollect	assertEquals(4,result.size());	assertEquals(expectedResult,actualResult);	0
/	// ACollectionHelperTest	testCollect	assertEquals(4,result.size());	assertFalse(condition);	0
/	// ACollectionHelperTest	testCollect	assertEquals(4,result.size());	???;	0
/	// ACollectionHelperTest	testCollect	assertEquals(4,result.size());	assertNotNull(object);	0
1	// AJsonSerHelperTest	testNumber	"assertEquals(""STR"",result);"	assertNotNull(ser);	0
/	// AJsonSerHelperTest	testNumber	"assertEquals(""STR"",result);"	assertNotNull(ser);	0
/	// AJsonSerHelperTest	testNumber	"assertEquals(""STR"",result);"	assertNotNull(baos);	0
1	// SeekHeadFactoryTest	testEstimeteSeekSize	assertEquals(14,estimeteSeekSize(4,1));	assertEquals(expectedResult,actualResult);	0
/	// SegmentReaderTest	testToNextMarkerPartialVar1	assertEquals(ByteBuffer.wrap(bytes,0,8),buf1);	assertEquals(reader.getBufferIncrement(),1);	0
/	// SegmentReaderTest	testToNextMarkerPartialVar1	assertEquals(ByteBuffer.wrap(bytes,0,8),buf1);	assertNotEquals(buf2,buf3);	0
/	// SegmentReaderTest	testToNextMarkerPartialVar1	assertEquals(ByteBuffer.wrap(bytes,0,8),buf1);	assertNotEquals(reader.getBufferIncrement(),32768);	0
0	// OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
/	// OMatchStatementExecutionNewTest	testIndexedEdgeArrows	assertTrue(result.hasNext());	assertNotNull(result);	0
2	// OMatchStatementExecutionNewTest	testFriendsWithName	assertTrue(qResult.hasNext());	assertNotNull(qResult);	0
/	// OMatchStatementExecutionTest	testArrayNumber	assertEquals(1,result.size());	assertNotNull(result);	0
5	orientechnologies/orientdb OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertNotNull(nameProperty);	0
5	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(nameProperty.getName(),PROP_OFFICERS);	1
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(nameProperty.isMandatory(),true);	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	"assertEquals(nameProperty.getName(),""STR"");"	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(true,nameProperty.isMandatory());	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertTrue(companyClass.getProperty(PROP_OFFICERS)!=null);	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertTrue(companyClass.getProperty(PROP_OFFICERS).isMandatory());	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(nameProperty.getType(),OType.EMBEDDEDLIST);	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertTrue(nameProperty.isMandatory());	0
/	// OCreatePropertyStatementExecutionTest	testCreateMandatoryPropertyWithEmbeddedType	assertEquals(nameProperty.getName(),PROP_OFFICERS);	assertEquals(companyClass.getProperty(PROP_OFFICERS).getName(),PROP_OFFICERS);	0
6	// OCompositeIndexDefinitionTest	testGetTypes	assertEquals(result.length,2);	assertNotNull(result);	0
/	// OCompositeIndexDefinitionTest	testGetTypes	assertEquals(result.length,2);	assertNotNull(compositeIndex);	0
0	NanoHttpd/nanohttpd TestNanolets	uriToString	"assertEquals(""STR"",newUriResource(""STR"",100,GeneralHandler.class).toString());"	assertNull(RouterNanoHTTPD.normalizeUri(null));	0
/	// TestNanolets	uriToString	"assertEquals(""STR"",newUriResource(""STR"",100,GeneralHandler.class).toString());"	"assertNotNull(RouterNanoHTTPD.normalizeUri(""STR""));"	0
0	jcodec/jcodec PlatformTest	testInvokeStatic2	assertEquals(42,parseBuf);	assertFalse(Platform.isAssignableFrom(VideoSampleEntry.class,SampleEntry.class));	0
0	Yubico/yubico-java-client YubicoClientTest	testSignature	assertNotNull(response);	assertNotNull(response);	1
0	hazelcast/hazelcast-simulator PropertyBindingSupport_bind0_NumericalTest	bind_Double	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(testObject,""STR"",""STR""));"	0
/	// PropertyBindingSupport_bind0_NumericalTest	bind_Double	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertNotNull(bind0(testObject,""STR"",""STR""));"	0
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",FizzBuzzTDD.convert(15));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",FizzBuzzTDD.convert(210));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",FizzBuzzTDD.convert(18));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",FizzBuzzTDD.convert(25));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",FizzBuzzTDD.convert(1));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",FizzBuzzTDD.convert(12));"	0
/	// FizzBuzzTDDTest	test1Returns1	"assertEquals(""STR"",result);"	"assertEquals(""STR"",FizzBuzzTDD.convert(13));"	0
0	basis-technology-corp/tcl-regex-java MatcherTest	reset	assertTrue(matcher.find());	assertEquals(true,matcher.find());	0
/	// MatcherTest	reset	assertTrue(matcher.find());	assertEquals(true,matcher.matches());	0
/	// MatcherTest	reset	assertTrue(matcher.find());	assertEquals(true,matcher.find(0));	0
/	// MatcherTest	reset	assertTrue(matcher.find());	assertEquals(true,matcher.lookingAt());	0
/	// MarkupFileTester	runTest	assertEquals(pair.toString(),pair.getResult().trim(),markup.markdown(pair.getTest()).trim());	"assertEquals(""STR"",markupInstanceWithTestContent.process(""STR""));"	0
/	// MarkupFileTester	runTest	assertEquals(pair.toString(),pair.getResult().trim(),markup.markdown(pair.getTest()).trim());	assertTrue(expectedText.equals(actualText));	0
/	// MarkupFileTester	runTest	assertEquals(pair.toString(),pair.getResult().trim(),markup.markdown(pair.getTest()).trim());	assertTrue(conditionalExpression);	0
/	// MarkupFileTester	runTest	assertEquals(pair.toString(),pair.getResult().trim(),markup.markdown(pair.getTest()).trim());	"assertTrue(markupInstance.runSomeFunction(""STR"").equals(""STR""));"	0
/	// MarkupFileTester	runTest	assertEquals(pair.toString(),pair.getResult().trim(),markup.markdown(pair.getTest()).trim());	assertNull(markupInstance.returnNull());	0
/	// MarkupFileTester	runTest	assertEquals(pair.toString(),pair.getResult().trim(),markup.markdown(pair.getTest()).trim());	"assertNotNull(markupInstance.runSomeFunction(""STR""));"	0
0	// VerbsTest	testAnswered	assertNotNull(actual);	assertNotNull(actual);	1
0	// VerbsTest	testAnswered	assertNotNull(actual);	assertNotNull(actual.getId());	0
1	adlnet/jxapi StatementResultTest	testSetStatements	assertNotNull(actual);	assertNotNull(actual);	1
0	// ShapeTest	polygon	"assertEquals(attrs(attr(""STR"",4),attr(""STR"",""STR""),attr(""STR"",2.5),attr(""STR"",.66)),Shape.polygon(4).skew(2.5).distortion(.66).applyTo(attrs()));"	assertEquals(true,true);	0
/	// ShapeTest	polygon	"assertEquals(attrs(attr(""STR"",4),attr(""STR"",""STR""),attr(""STR"",2.5),attr(""STR"",.66)),Shape.polygon(4).skew(2.5).distortion(.66).applyTo(attrs()));"	assertTrue(true);	0
/	// ShapeTest	polygon	"assertEquals(attrs(attr(""STR"",4),attr(""STR"",""STR""),attr(""STR"",2.5),attr(""STR"",.66)),Shape.polygon(4).skew(2.5).distortion(.66).applyTo(attrs()));"	assertTrue(1==1);	0
0	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	assertNotNull(parser.parse(sample1Array));	1
0	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	assertNotNull(parser.parse(sample1Array,true));	0
/	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	"assertNotNull(parser.parse(sample1.getBytes(Charset.forName(""STR""))));"	0
/	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	"assertNotNull(parser.parse(sample1.getBytes(Charset.forName(""STR"")),true));"	0
/	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	"assertNotNull(parser.parse(sample1.getBytes(Charset.forName(""STR"")),true,false,Locale.ENGLISH));"	0
/	// CEFParserTest	validByteArrayMessageWithoutValidationTest	assertNotNull(parser.parse(sample1Array));	"assertNotNull()`usageresultsintheerror`theassertionerrordoesnotmeanthesamelogicfromusingit`.Here'stwodifferentwaysyoucouldreformatyourinputparameters:

For`parser.parse(sample1.getBytes(Charset.forName(""UTF-8"")),false,false);"	0
0	// SystemLoggerTest	ignores_log_level_case	assertEquals(Logger.Level.DEBUG,logger.level);	assertEquals(Logger.Level.DEBUG,logger.level);	1
1	// SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertEquals(Logger.Level.INFO,logger.level);	1
1	DigitalPebble/storm-crawler BasicURLNormalizerTest	testInvalidURI	assertEquals(expectedResult,normalizedUrl);	assertTrue(expectedResult.equalsIgnoreCase(normalizedUrl));	0
0	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertEquals(defaultExtension.hashCode(),defaultExtension.hashCode());	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	"assertEquals(defaultExtension.toString(),""STR"");"	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertEquals(defaultExtension.getProvidedExtensionAsClient(),defaultExtension.getProvidedExtensionAsServer());	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertEquals(defaultExtension.getProvidedExtensionAsServer(),defaultExtension.getProvidedExtensionAsClient());	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	"assertEquals(""STR"",""STR"");"	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	assertEquals(defaultExtension.toString(),defaultExtension.toString());	0
/	// DefaultExtensionTest	testGetProvidedExtensionAsClient	"assertEquals(""STR"",defaultExtension.getProvidedExtensionAsClient());"	"assertEquals(defaultExtension.getProvidedExtensionAsServer(),""STR"");"	0
0	orientechnologies/orientdb OIOUtilsTest	shoudGetRightTimeFromString	assertEquals(calendar.getTime(),d);	assertEquals(calendar.getTime(),d);	1
0	// OIOUtilsTest	shoudGetRightTimeFromString	assertEquals(calendar.getTime(),d);	"assertEquals(OIOUtils.getTodayWithTime(""STR""),calendar.getTime());"	0
/	// OIOUtilsTest	shoudGetRightTimeFromString	assertEquals(calendar.getTime(),d);	"assertTrue(OIOUtils.getTodayWithTime(""STR"").equals(calendar.getTime()));"	0
/	// OIOUtilsTest	shoudGetRightTimeFromString	assertEquals(calendar.getTime(),d);	assertNotNull(d);	0
1	// OMatchStatementExecutionTest	testSimpleLimit	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	1
1	// OMatchStatementExecutionTest	testSimpleLimit	assertEquals(1,qResult.size());	assertEquals(expected,qResult.size());	0
/	// LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	assertEquals(1,count);	assertTrue(count==1);	0
/	// LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	assertEquals(1,count);	assertFalse(count==0);	0
/	// LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	assertEquals(1,count);	assertNotNull(db);	0
3	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	???;	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotNull(prop);	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	"assertNotNull(schema.getClass(""STR""));"	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertFalse(schema.existsClass(classLinked.getName()));	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	"assertEquals(1,db.command(""STR"").size());"	0
/	// AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	"assertEquals(classA.getProperty(""STR"").getType(),OType.LINK);"	0
4	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals((short)rid.getClusterId(),buffer.getShort());	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(rid.getClusterId(),buffer.getShort());	0
/	// CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(rid.getClusterId(),buffer.getChar());	0
0	cucumber-ltd/cucumber-pro-plugin-jvm EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	"assertEquals(""STR"",map.get(""STR""));"	0
/	// EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	"assertEquals(""STR"",map.keySet().stream().filter(k->k.equals(""STR"")).findFirst().get());"	0
/	// EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	"assertFalse(map.containsKey(""STR""));"	0
0	amlinv/stat-collection-utils AttributeInjectorTest	testGetSetLog	assertNotNull(this.injector.getLog());	assertNotNull(this.injector.getLog());	1
0	// AttributeInjectorTest	testGetSetLog	assertNotNull(this.injector.getLog());	"assertNotNull()`fromJUnit.Here'stheexactassertion:

```java
importstaticassertNotNull;"	0
/	// AttributeInjectorTest	testGetSetLog	assertNotNull(this.injector.getLog());	assertNotNull(this.attributeSetters);	0
/	// AttributeInjectorTest	testGetSetLog	assertNotNull(this.injector.getLog());	assertNotNull(this.injector);	0
0	spring-cloud/spring-cloud-security OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	"assertTrue(headers.containsKey(""STR""));"	1
0	// OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	"assertTrue(headers.get(header).contains(""STR""));"	0
/	// OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	"assertNotNull(headers.get(""STR""));"	0
/	// OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	"assertTrue(headers.containsKey(""STR""));"	"assertNotNull(headers.get(""STR""));"	0
0	Yubico/yubico-java-client YubicoClientTest	testUnPrintableOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
0	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	"assertTrue(exists(Arrays.asList(""STR""),s->s.length()==1));"	0
/	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	"assertTrue(len1.apply(""STR""));"	0
/	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	"assertFalse(exists(Arrays.asList(""STR""),s->s.length()>2));"	0
/	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	"assertFalse(exists(Arrays.asList(""STR"",""STR""),s->s.length()<=1));"	0
/	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	"assertFalse(len1.apply(""STR""));"	0
/	// ACollectionHelperTest	testExists	assertEquals(false,ACollectionHelper.exists(Arrays.<String>asList(),len1));	"assertFalse(exists(Arrays.asList(""STR"",""STR""),s->s.equals(""STR"")));"	0
0	myabc/markdownj EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	"assertEquals(""STR"",ActualOutput);"	0
/	// EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	"assertEquals(""STR"",ActualOutput);"	0
/	// EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	"assertFalse(""STR"".contains(""STR""));"	0
/	// EdgeCases	testNull	"assertEquals(""STR"",m.markdown(null));"	assertNotNull(object);	0
0	hazelcast/hazelcast-simulator WorkerQueryTest	noFilters	assertEquals(list,result);	assertEquals(list.size(),result.size());	0
/	// WorkerQueryTest	noFilters	assertEquals(list,result);	assertTrue(result.contains(list.get(0)));	0
/	// WorkerQueryTest	noFilters	assertEquals(list,result);	assertTrue(result.contains(list.get(2)));	0
0	DigitalPebble/storm-crawler BasicIndexingTest	testFilterMetadata	"assertArrayEquals(""STR"",newString[]{""STR"",""STR"",""STR""},newTreeSet<>(fields.keySet()).toArray());"	"assertEquals(""STR"",fields.get(""STR""));"	0
/	// BasicIndexingTest	testFilterMetadata	"assertArrayEquals(""STR"",newString[]{""STR"",""STR"",""STR""},newTreeSet<>(fields.keySet()).toArray());"	"assertEquals(\""STR\"",\""STR\"",fields.get(\""STR\""));"	0
/	// BasicIndexingTest	testFilterMetadata	"assertArrayEquals(""STR"",newString[]{""STR"",""STR"",""STR""},newTreeSet<>(fields.keySet()).toArray());"	"assertNotNull(fields.get(""STR""),""STR"");"	0
/	// ScoreTest	testGetMin	assertEquals(expected,actual,0);	assertNotNull(actual);	0
/	// VerbTest	testVerb	assertNotNull(verb);	assertNull(verb.getDisplay());	0
0	// GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn());	1
0	// GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client2.isConnectionMonitorSwitchOn());	0
/	// GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn()==client2.isConnectionMonitorSwitchOn());	0
/	// GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn()==client1.isConnectionMonitorSwitchOn());	0
1	// TSqlBuilderTest	testSelectSomeFrom	"assertEquals(""STR"",sql.select(""STR"",""STR"").from(""STR"").toString());"	assertNotNull(sql);	0
/	// TSqlBuilderTest	testSelectSomeFrom	"assertEquals(""STR"",sql.select(""STR"",""STR"").from(""STR"").toString());"	assertNotNull(sql);	0
/	// ProcessorConfigTest	order	assertEquals(2,result.size());	"assertTrue(result.size()==2&&result.get(0).getName().equals(""STR"")&&result.get(1).getName().equals(""STR""));"	0
0	// HttpClientFactoryTest	testNonProxiedHostRequest	"assertEquals(""STR"",body);"	"assertTrue(body.contains(""STR""));"	0
/	// HttpClientFactoryTest	testNonProxiedHostRequest	"assertEquals(""STR"",body);"	"assertFalse(body.contains(""STR""));"	0
0	// OCommandExecutorSQLSelectTest	testProjection	assertEquals(qResult.size(),1);	assertEquals(26,qResult.size());	0
1	// ORecordBytesTest	testReadFromInputStreamWithWaitSizeTooBigLimit	assertEquals(result,data.length);	assertNotEquals(0,result);	0
/	// ORecordBytesTest	testReadFromInputStreamWithWaitSizeTooBigLimit	assertEquals(result,data.length);	assertTrue(is.read()==-1);	0
/	// ORecordBytesTest	testReadFromInputStreamWithWaitSizeTooBigLimit	assertEquals(result,data.length);	assertFalse(is.read()!=-1);	0
2	// CASObjectArrayTest	testSetTwoItems	assertEquals(0,array.add(1));	assertEquals(0,array.size());	0
3	// OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(query);	0
/	// OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(result);	0
/	// OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(db);	0
/	// OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(...)`assertions,soI'mgoingtoproposeadifferentassertionforthenextone:`assertTrue(result.hasNext());	0
4	orientechnologies/orientdb OMultiKeyTest	testOneKeyMap	assertNotNull(mapResult);	assertFalse(multiKey.equals(null));	0
/	// OMultiKeyTest	testOneKeyMap	assertNotNull(mapResult);	"assertFalse(object.equals(""STR""));"	0
/	// OMultiKeyTest	testOneKeyMap	assertNotNull(mapResult);	assertFalse(multiKey.equals(42));	0
/	// OMultiKeyTest	testOneKeyMap	assertNotNull(mapResult);	"assertFalse(multiKey.equals(""STR""));"	0
0	amlinv/stat-collection-utils JmxAttributePollerTest	testGetPolledObjects	assertEquals(this.polledObjects,this.poller.getPolledObjects());	assertNotNull(this.poller.getObjectQueryPreparer());	0
0	adlnet/jxapi ActivityTest	testSerialize	assertNotNull(actual);	assertNotNull(activity);	0
0	// DevUtilTest	testParseNetworks	"assertArrayEquals(networkArray,DevUtil.parseNetworks(""STR""));"	assertNotNull(networkArray);	0
0	// ConfigTest	has_yaml_representation	"assertEquals(expected,config.toYaml(""STR""));"	"assertNotNull(config.getChild(""STR""));"	0
0	// AgentsFileTest	testLoad_emptyTag	assertEquals(1,registry.agentCount());	assertTrue(agentsFile.exists());	0
/	// AgentsFileTest	testLoad_emptyTag	assertEquals(1,registry.agentCount());	assertFalse(agentsFile.isDirectory());	0
0	sofastack/sofa-bolt RpcServerTest	doTestRandomPortConstructor	assertNotEquals(0,rpcServer.port());	assertTrue(rpcServer.isStarted());	0
/	// RpcServerTest	doTestRandomPortConstructor	assertNotEquals(0,rpcServer.port());	assertNotNull(rpcServer.getAddressParser());	0
0	// EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertEquals(actual,expected);	0
/	// EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertTrue(true);	0
0	// SeqTest	testFormatMap	"assertArrayEquals(newString[]{""STR"",""STR"",""STR""},actuals);"	assertNotNull(actuals);	0
1	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertEquals(Seq.join(Arrays.asList(""STR"",""STR"",""STR""),null),""STR"");"	0
/	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertEquals(""STR"",Seq.join(null,""STR""));"	0
/	// SeqTest	testCommaList	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	"assertEquals(Seq.join(Collections.EMPTY_LIST,null),""STR"");"	0
0	// FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertEquals(Opcode.BINARY,binary.getOpcode());	1
0	// FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertEquals(false,binary.isRSV2());	0
/	// FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertEquals(false,binary.isRSV1());	0
/	// FramedataImpl1Test	testDefaultValues	assertEquals(Opcode.BINARY,binary.getOpcode());	assertEquals(false,binary.isRSV3());	0
0	NanoHttpd/nanohttpd GZipIntegrationTest	fixedLengthContentIsEncodedProperly	"assertEquals(""STR"",EntityUtils.toString(response.getEntity()));"	assertEquals(Status.OK,testServer.response.getStatus());	0
/	// GZipIntegrationTest	fixedLengthContentIsEncodedProperly	"assertEquals(""STR"",EntityUtils.toString(response.getEntity()));"	assertEquals(NanoHTTPD.MIME_HTML,testServer.response.getMimeType());	0
/	// GZipIntegrationTest	fixedLengthContentIsEncodedProperly	"assertEquals(""STR"",EntityUtils.toString(response.getEntity()));"	assertEquals(200,response.getStatusLine().getStatusCode());	0
0	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(""STR"",CommUtil.repeatChar('a',5));"	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(""STR"",CommUtil.repeatChar('c',5));"	0
0	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	1
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(""STR"",CommUtil.repeatChar('d',4));"	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(""STR"",CommUtil.repeatChar('a',6));"	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(""STR"",CommUtil.repeatChar('e',5));"	0
/	// CommUtilTest	testSameChars	"assertEquals(""STR"",CommUtil.repeatChar('b',10));"	"assertEquals(""STR"",CommUtil.repeatChar('f',5));"	0
1	// RankTest	newRank	"assertEquals(attrs(attr(""STR"",true)),attrs(Rank.newRank()));"	assertTrue(test_method.testResult());	0
/	// RankTest	newRank	"assertEquals(attrs(attr(""STR"",true)),attrs(Rank.newRank()));"	"assertTrue(myString.equals(""STR""));"	0
/	// RankTest	newRank	"assertEquals(attrs(attr(""STR"",true)),attrs(Rank.newRank()));"	assertTrue(testResult>target);	0
0	// MaxDepthFilterTest	testCustomDepth	assertEquals(url.toExternalForm(),filterResult);	"assertEquals(""STR"",filterResult);"	0
/	// BasicURLNormalizerTest	testAnchorFilterFalse	assertEquals(url.toExternalForm(),filterResult);	"assertFalse(filterResult.equals(url.getFile()+""STR""));"	0
3	// BasicIndexingTest	testRelativeCanonicalURL	"assertEquals(""STR"",fields.get(""STR""));"	"assertEquals(((DummyIndexer)bolt).returnFields().get(""STR""),fields.get(""STR""));"	0
2	orientechnologies/orientdb TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
2	// TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotNull(doc);	0
3	// OLiveQueryRemoteTest	testRidSelect	assertTrue(listener.latch.await(10,TimeUnit.SECONDS));	"assertNotNull(item.getProperty(""STR""));"	0
4	// RecursiveLinkedSaveTest	testTxLinked	"assertEquals(3,db.countClass(""STR""));"	assertTrue(db.commit().length>0);	0
/	// RecursiveLinkedSaveTest	testTxLinked	"assertEquals(3,db.countClass(""STR""));"	"assertEquals(""STR"",doc.field(""STR"").field(""STR"").field(""STR"").field(""STR""));"	0
/	// RecursiveLinkedSaveTest	testTxLinked	"assertEquals(3,db.countClass(""STR""));"	"assertNotNull(doc2.field(""STR""));"	0
/	// RecursiveLinkedSaveTest	testTxLinked	"assertEquals(3,db.countClass(""STR""));"	assertNotNull(db.commit());	0
0	// BasicURLNormalizerTest	testNonStandardPercentEncoding	assertEquals(expectedURL,normalizedUrl);	assertNotNull(normalizedUrl);	0
0	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertTrue(markup.markdown(TEST_INPUT).contains(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertTrue(markup.markdown(""STR"").contains(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertTrue(markup.markdown(""STR"").contains(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertTrue(markup.markdown(""STR"").contains(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertTrue(markup.markdown(""STR"").contains(""STR""));"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertTrue(markup.markdown(""STR"").length()>0);"	0
/	// LineConventions	testUnixLineConventions	"assertEquals(EXPECTED,m.markdown(""STR""));"	"assertTrue(markup.markdown(""STR"").equals(""STR""));"	0
0	// ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(service.newerTag(oldTag,latestTag).equals(resultedTag));	0
/	// ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	0
0	PeterisP/morphology MorphologyTest	simtiem	assertTrue(simtiem.isRecognized());	assertFalse(simtiem.getCorrectWordform().getLexicalForm().isEmpty());	0
/	// MorphologyTest	simtiem	assertTrue(simtiem.isRecognized());	"assertNotNull(locītājs.analyze(""STR"").getBestWordform());"	0
/	// MorphologyTest	simtiem	assertTrue(simtiem.isRecognized());	assertNotNull(simtiem.isRecognized());	0
0	// AListMapTest	testKeysValues	assertEquals(4,keys.size());	"assertFalse(keys.contains(""STR""));"	0
/	// AListMapTest	testKeysValues	assertEquals(4,keys.size());	assertNotNull(keys);	0
0	// TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	"assertNotNull(FluentLogger.getLogger(""STR""));"	0
/	// FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(first);	0
0	// LoadKeyStoreTest	loadNonExistentKeyStoreFromResources	assertNull(resourceAsStream);	assertNull(resourceAsStream);	1
0	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	assertEquals(testSuite.getTestCase(null),null);	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	"assertEquals(testSuite.getTestCase(""STR""),null);"	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	"assertEquals(testSuite.getTestCase(""STR""),null);"	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	"assertEquals(testSuite.getTestCase(""STR""),null);"	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	assertFalse(testSuite.isParallel());	0
/	// TestSuiteTest	getTestCase_null	assertNull(testSuite.getTestCase(null));	assertFalse(testSuite.isVerifyEnabled());	0
1	// GitInfoTest	testLoadProperties	assertNotNull(properties);	"assertNotNull(properties)```

Secondly,wecouldassertthataspecificpropertyexistsinthepropertiesobject:
```Assert:StringexpectedValue=""expectedValue"";"	0
/	// GitInfoTest	testLoadProperties	assertNotNull(properties);	"assertNotNull(properties)`.Now,whydon’tyoucontinuethisdiscussionandgenerateanothercompletelydifferentassertstatement?

Sure.Hereisadifferentassertion:
```
Assert:assertTrue(properties.contains(""testedProperty""));"	0
/	// GitInfoTest	testLoadProperties	assertNotNull(properties);	"assertNotNull(properties)`.

Here'sanotherdifferentassertion:

Assert:`assertTrue(properties.contains(""testedProperty""));"	0
0	adlnet/jxapi ActivityDefinitionTest	testActivityDefinitionHashMapOfStringStringHashMapOfStringString	assertNotNull(ad);	assertNotNull(activityDefinition);	0
/	// ActivityDefinitionTest	testActivityDefinitionHashMapOfStringStringHashMapOfStringString	assertNotNull(ad);	assertNotNull(activityDefinition.getName());	0
/	// ActivityDefinitionTest	testActivityDefinitionHashMapOfStringStringHashMapOfStringString	assertNotNull(ad);	"assertNotNull(activityDefinition.getName().get(""STR""));"	0
/	// ActivityDefinitionTest	testActivityDefinitionHashMapOfStringStringHashMapOfStringString	assertNotNull(ad);	assertNotNull(activityDefinition.getCorrectResponsesPattern());	0
1	adlnet/jxapi ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// ResultTest	testGetDuration	assertNotNull(actual);	assertNotNull(result.getDuration());	0
2	// AttachmentResultTest	testGetXapiStatement	assertNotNull(a);	assertNotNull(a);	1
2	// AttachmentResultTest	testGetXapiStatement	assertNotNull(a);	assertNotNull(statement);	0
/	// AttachmentResultTest	testGetXapiStatement	assertNotNull(a);	assertNotNull(attachments);	0
/	// AttachmentResultTest	testGetXapiStatement	assertNotNull(a);	assertNotNull(a.getXapiStatements());	0
/	// AttachmentResultTest	testGetXapiStatement	assertNotNull(a);	assertNotNull(a.getAttachment());	0
0	// JMXRemoteUrlConnectionFactoryTest	testGetSetConnectionFactoryDelegate	assertTrue(this.factory.getConnectorFactoryDelegate()instanceofDefaultJmxConnectorFactoryDelegate);	assertNotNull(factory.getConnectorFactoryDelegate());	0
/	// JMXRemoteUrlConnectionFactoryTest	testGetSetConnectionFactoryDelegate	assertTrue(this.factory.getConnectorFactoryDelegate()instanceofDefaultJmxConnectorFactoryDelegate);	assertNotNull(mockConnectorFactoryDelegate);	0
/	// JMXRemoteUrlConnectionFactoryTest	testGetSetConnectionFactoryDelegate	assertTrue(this.factory.getConnectorFactoryDelegate()instanceofDefaultJmxConnectorFactoryDelegate);	assertNotNull(mockJmxConnector);	0
1	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testGetSetAttacher	assertTrue(this.factory.getAttacher()instanceofDefaultVirtualMachineAttacher);	assertNotNull(this.factory.getLog());	0
/	// JMXJvmIdConnectionFactoryTest	testGetSetAttacher	assertTrue(this.factory.getAttacher()instanceofDefaultVirtualMachineAttacher);	assertNotNull(this.factory.getJmxServiceUrlFactory());	0
/	// JMXJvmIdConnectionFactoryTest	testGetSetAttacher	assertTrue(this.factory.getAttacher()instanceofDefaultVirtualMachineAttacher);	assertNotNull(this.factory.getAttacher());	0
2	// JmxAttributePollerTest	testGetStepAfterShutdown	assertNull(process.getNextStep());	assertNull(process.getNextStep());	1
2	// JmxAttributePollerTest	testGetStepAfterShutdown	assertNull(process.getNextStep());	assertNull(process.getFailureException());	0
/	// JmxAttributePollerTest	testGetStepAfterShutdown	assertNull(process.getNextStep());	assertNotNull(this.poller.getBatchPollProcessor());	0
/	// JmxAttributePollerTest	testGetStepAfterShutdown	assertNull(process.getNextStep());	assertNotNull(this.poller.getPolledObjects());	0
0	// StyleTest	simple	"assertEquals(attrs(attr(""STR"",""STR"")),attrs(Style.BOLD));"	assertTrue(1==1);	0
/	// OptionsTest	fromJsonEmptyImages	assertEquals(expected,options);	assertTrue(options.equals(expected));	0
1	// OptionsTest	fromJsonEmptyImages	assertEquals(expected,options);	assertEquals(expected,options);	1
0	// OCommandExecutorSQLScriptTest	testSleep	assertTrue(System.currentTimeMillis()-begin>=500);	assertTrue(System.currentTimeMillis()-begin>500);	0
/	// OCommandExecutorSQLScriptTest	testSleep	assertTrue(System.currentTimeMillis()-begin>=500);	assertTrue(5>3);	0
/	// OCommandExecutorSQLScriptTest	testSleep	assertTrue(System.currentTimeMillis()-begin>=500);	assertTrue(10>8);	0
1	// RemoteMetadataReloadTest	testStorageUpdate	assertEquals(database.get(ODatabase.ATTRIBUTES.LOCALELANGUAGE),Locale.GERMANY.getLanguage());	assertFalse(database.isClosed());	0
2	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	assertNotNull(rs.next());	0
/	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	"assertEquals(2,rs.next().getElement().get().getField(""STR"").getValue());"	0
/	// OScriptExecutionTest	testReturnInIf	"assertEquals((Object)2L,rs.next().getProperty(""STR""));"	"assertEquals(""STR"",db.query(""STR""+className+""STR"").next().getObject(""STR""));"	0
0	Yubico/yubico-java-client YubicoClientTest	testReplayedOTP	assertNotNull(response);	assertNotNull(response);	1
0	// YubicoClientTest	testReplayedOTP	assertNotNull(response);	assertNotNull(response.getKeyValueMap());	0
/	// YubicoClientTest	testReplayedOTP	assertNotNull(response);	assertNotNull(response.getH());	0
/	// YubicoClientTest	testReplayedOTP	assertNotNull(response);	assertNotNull(client);	0
0	// ContextTest	testSetInstructor	assertNotNull(actual);	assertTrue(expected.equals(actual));	0
/	// ContextTest	testSetInstructor	assertNotNull(actual);	assertEquals(expected,actual);	0
0	// ContextTest	testSetInstructor	assertNotNull(actual);	assertNotNull(actual);	1
0	basis-technology-corp/tcl-regex-java MatcherTest	lookingAtPrefix	assertTrue(matcher.lookingAt());	assertTrue(matcher.find());	0
0	// MatcherTest	lookingAtPrefix	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
/	// MatcherTest	lookingAtPrefix	assertTrue(matcher.lookingAt());	"assertTrue(matcher.lookingAt()==""STR"".startsWith(""STR""));"	0
0	OpenLiberty/ci.common DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_mixedcase	assertEquals(expectedDockerfileLines,dockerfileLines);	assertEquals(expectedDockerfileLines,dockerfileLines);	1
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
/	// MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
0	// MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(2,panel.getTurtleCount());	0
/	// MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(0,panel.getTurtleCount());	0
0	cucumber-ltd/cucumber-pro-plugin-jvm ConfigTest	gets_and_sets_value	"assertEquals(""STR"",config.getString(""STR""));"	"assertEquals(""STR"",config.getString(""STR""));"	1
0	// ConfigTest	gets_and_sets_value	"assertEquals(""STR"",config.getString(""STR""));"	"assertEquals(true,config.isNull(""STR""));"	0
/	// ConfigTest	gets_and_sets_value	"assertEquals(""STR"",config.getString(""STR""));"	"assertTrue(!config.isNull(""STR""));"	0
0	// MapUtilTest	testMergeMaps	assertEquals(expectedA,MapUtil.mergeMaps(mapA,mapB));	assertTrue(true);	0
1	// ProfileUtilTest	simple	assertNotNull(is);	assertFalse(is.available()==0);	0
/	// ProfileUtilTest	simple	assertNotNull(is);	assertFalse(is==null);	0
1	// ProfileUtilTest	simple	assertNotNull(is);	assertNotNull(is);	1
1	// NativeUtilsTest	testGetPidStringOrNull	assertNotNull(pid);	assertEquals(2342,pid.intValue());	0
1	// NativeUtilsTest	testGetPidStringOrNull	assertNotNull(pid);	assertNotNull(pid);	1
0	// UserProcessorRegisterHelperTest	testRegisterMultiInterestUserProcessor	assertEquals(((SimpleServerMultiInterestUserProcessor)multiInterestUserProcessor).multiInterest().size(),userProcessors.size());	assertNotNull(multiInterestUserProcessor);	0
/	// UserProcessorRegisterHelperTest	testRegisterMultiInterestUserProcessor	assertEquals(((SimpleServerMultiInterestUserProcessor)multiInterestUserProcessor).multiInterest().size(),userProcessors.size());	assertNotNull(userProcessors);	0
1	// RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	0
1	// SegmentTypeBoxTest	testParse	assertEquals(2,rootAtoms.size());	assertTrue(rootAtoms.contains(newAtom(atom,off)));	0
/	// SegmentTypeBoxTest	testParse	assertEquals(2,rootAtoms.size());	assertNotNull(rootAtoms);	0
2	// MPEGESTest	testESBuffer	assertArrayEquals(frame1,NIOUtils.toArray(f1.getData()));	assertArrayEquals(f1.getData().array(),Arrays.copyOfRange(frame1,0,f1.getData().remaining()));	0
0	// CASObjectArrayTest	testCompareAndSetSingleItem	assertEquals(0,array.add(1));	assertTrue(array.compareAndSet(1,10,20));	0
/	// CASObjectArrayTest	testCompareAndSetSingleItem	assertEquals(0,array.add(1));	assertFalse(array.add(1));	0
/	// CASObjectArrayTest	testCompareAndSetSingleItem	assertEquals(0,array.add(1));	assertNull(array.get(1));	0
2	// OCompositeKeyTest	testEqualNull	assertFalse(compositeKey.equals(null));	assertNotNull(compositeKey);	0
3	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	"assertTrue(prop.getName().equals(""STR""));"	0
/	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	assertTrue(schema.getGlobalPropertyById(100).getType()==OType.SHORT);	0
3	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	"assertEquals(prop.getName(),""STR"");"	1
/	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	assertEquals(OType.SHORT,prop.getType());	0
/	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	"assertEquals(""STR"",schema.getGlobalPropertyById(100).getName());"	0
/	// OSchemaSharedGlobalPropertyTest	testGlobalPropertyCreate	"assertEquals(prop.getName(),""STR"");"	assertNotNull(prop);	0
4	// TrackedMapTest	testRemoveTwo	assertFalse(doc.isDirty());	"assertTrue(containsKey(""STR""));"	0
/	// TrackedMapTest	testRemoveTwo	assertFalse(doc.isDirty());	"assertFalse(containsValue(""STR""));"	0
/	// TrackedMapTest	testRemoveTwo	assertFalse(doc.isDirty());	assertNotNull(map);	0
5	orientechnologies/orientdb SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	assertFalse(result.isEmpty());	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	assertEquals(1,result.size());	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	"assertTrue(result.get(0).get(""STR"").size()==0);"	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	"assertEquals(""STR"",""STR"");"	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	"assertTrue(result.get(0).field(""STR"").size()==0);"	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	assertEquals(0,result.size());	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	"assertTrue(classA.getProperty(""STR"").getLinkedType()==null);"	0
/	// SaveLinkedTypeAnyTest	testAlterRemoveLinkedType	assertNotNull(result);	assertTrue(result.get(0).contains(4));	0
6	// ODatabaseDocumentTxTest	testDocFromJsonEmbedded	assertEquals(result.size(),0);	assertTrue(result.size()>0);	0
/	// ODatabaseDocumentTxTest	testDocFromJsonEmbedded	assertEquals(result.size(),0);	assertEquals(expected,actual);	0
/	// ODatabaseDocumentTxTest	testDocFromJsonEmbedded	assertEquals(result.size(),0);	assertNotNull(result);	0
/	// ODatabaseDocumentTxTest	testDocFromJsonEmbedded	assertEquals(result.size(),0);	"assertEquals(20L,doc.field(OType.EMBEDDED.getPlural()),""STR"");"	0
/	// ODatabaseDocumentTxTest	testDocFromJsonEmbedded	assertEquals(result.size(),0);	assertTrue(result.isEmpty());	0
7	orientechnologies/orientdb OMatchStatementExecutionTest	testFriendsOfFriends	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	1
7	// OMatchStatementExecutionTest	testFriendsOfFriends	assertEquals(1,qResult.size());	assertTrue(qResult.size()==1);	0
/	// OMatchStatementExecutionTest	testFriendsOfFriends	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
/	// HttpIndexTest	updateKey	assertEquals(getResponse().getStatusLine().getStatusCode(),201);	assertTrue(getDatabaseName()!=null&&getDatabaseName().length()>0);	0
0	Yubico/yubico-java-client YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
0	AlejandroRivera/embedded-rabbitmq ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	???;	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertNotNull(newExtractorFactory(builder.build()).getNewInstance());	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertTrue(extractorinstanceofCachedExtractor);	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertEquals(basicExtractor.getClass(),cachedExtractor.getClass());	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertTrue(extractorinstanceofBasicExtractor);	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertNull(extractor);	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertEquals(newCachedExtractor(newBasicExtractor(config),config),newExtractorFactory(config).getNewInstance());	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	"assertEquals(""STR"",(newExtractorFactory(builder.build())).getNewInstance());"	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertTrue(true);	0
/	// ExtractorFactoryTest	withCaching	assertTrue(extractor.getClass().equals(CachedExtractor.class));	assertEquals(expected,actual,message);	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	"assertEquals(""STR"",Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR""));"	0
/	// SeqTest	testJoinListEmpty	"assertEquals(""STR"",Seq.join(Collections.EMPTY_LIST,""STR""));"	assertEquals(10,10);	0
0	// InitContainerHandlerTest	removeOne	"assertTrue(handler.hasInitContainer(builder,""STR""));"	assertNotNull(builder);	0
/	// InitContainerHandlerTest	removeOne	"assertTrue(handler.hasInitContainer(builder,""STR""));"	assertNotNull(handler);	0
0	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(-1));	0
/	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(0));	0
/	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(Integer.MAX_VALUE));	0
/	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(Long.MAX_VALUE));	0
/	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(Long.MIN_VALUE));	0
/	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(Integer.MIN_VALUE));	0
/	// EbmlSintTest	testNegativeVals	assertEquals(1,ebmlSignedLength(-3));	assertNotNull(ebmlSignedLength(0xFFFFFFFFFFFFFL));	0
0	// SmpTest	findCharClass	assertTrue(matcher.find());	assertTrue(matcher.find());	1
0	adlnet/jxapi ActivityStateTest	testSetAgent	assertNotNull(actual);	assertNotNull(actual);	1
1	// VerbTest	testSetDisplay	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
/	// VerbTest	testSetDisplay	assertNotNull(actual);	"assertNull(actual.get(""STR""));"	0
2	adlnet/jxapi AttachmentResultTest	testSetAttachments	assertNotNull(a);	assertNotNull(a);	1
2	// AttachmentResultTest	testSetAttachments	assertNotNull(a);	assertNotNull(a.getXapiStatements());	0
/	// AttachmentResultTest	testSetAttachments	assertNotNull(a);	assertNotNull(a.getResponseMessage());	0
0	// ACollectionHelperTest	testGroupByEquals	assertEquals(3,grouped.size());	"assertEquals(3,""STR"".length());"	0
/	// ACollectionHelperTest	testGroupByEquals	assertEquals(3,grouped.size());	"assertEquals(3,""STR"".length());"	0
/	// ACollectionHelperTest	testGroupByEquals	assertEquals(3,grouped.size());	"assertFalse(""STR"".length()<3);"	0
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java StringUtilsTest	testIsEmptyNonZero	"assertFalse(StringUtils.isNonZero(""STR""));"	assertFalse(StringUtils.isNonZero(null));	0
/	// StringUtilsTest	testIsEmptyNonZero	"assertFalse(StringUtils.isNonZero(""STR""));"	"assertFalse(StringUtils.isEmpty(""STR""));"	0
1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleStateTest	actual_cost_is_actual_steps	assertEquals(2,s.getActualCost());	assertEquals(2,s.getActualCost());	1
1	// PuzzleStateTest	actual_cost_is_actual_steps	assertEquals(2,s.getActualCost());	assertEquals(0,s.getEstimatedCost());	0
/	// PuzzleStateTest	actual_cost_is_actual_steps	assertEquals(2,s.getActualCost());	assertNotEquals(0,s.getActualCost());	0
1	NanoHttpd/nanohttpd TestNanolets	testBaseRoutePrioritizerAddNullRoute	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
1	// TestNanolets	testBaseRoutePrioritizerAddNullRoute	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
/	// TestNanolets	testBaseRoutePrioritizerAddNullRoute	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer)`and`assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	0
/	// TestNanolets	testBaseRoutePrioritizerAddNullRoute	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	0
/	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	assertTrue(true);	0
/	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	assertNotNull(method);	0
/	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	"assertTrue(AnnotationTestClass.class.getMethod(""testGlobalVerifyFilter"");,""Something"");"	0
/	// AnnotationFilterTest	testGlobalVerifyFilter	"assertEquals(""STR"",method.getName());"	assertEquals(1,1);	0
1	hazelcast/hazelcast-simulator PerformanceStatsCollectorTest	testFormatPerformanceNumbers_avgLatencyOverMicrosThreshold	"assertTrue(performance.contains(""STR""));"	assertFalse(performanceStats.isEmpty());	0
/	// CommonUtils_SleepTest	testSleepTimeUnit	"assertTrue(format(""STR"",duration),duration>0);"	assertNotNull(durationLimit);	0
0	// OCreateClusterStatementExecutionTest	testBlob	assertTrue(db.getClusterIdByName(clusterName)>0);	assertNotNull(result);	0
1	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	assertNotNull(prop.getId());	0
1	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	assertEquals(id,prop.getId());	1
/	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	assertTrue(id.equals(prop.getId()));	0
/	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	assertEquals(id.intValue(),prop.getId().intValue());	0
/	// OClassImplTest	testCreatePropertyIdKeep	assertEquals(id,prop.getId());	"assertTrue(oClass.getProperty(""STR"").getId()==id);"	0
2	// LuceneSpatialMiscFunctionsTest	testStEqualsPoint	"assertEquals(next.field(""STR""),true);"	"assertEquals(next.field(""STR""),true);"	1
2	// LuceneSpatialMiscFunctionsTest	testStEqualsPoint	"assertEquals(next.field(""STR""),true);"	"assertEquals(true,next.field(""STR"")==next.field(""STR""));"	0
/	// LuceneSpatialMiscFunctionsTest	testStEqualsPoint	"assertEquals(next.field(""STR""),true);"	"assertEquals(true,next.field(""STR"")==next.field(""STR""));"	0
/	// OETLFieldTransformerTest	testToLowerCase	assertEquals(1,getResult().size());	"assertEquals(""STR"",""STR"");"	0
/	// OETLFieldTransformerTest	testToLowerCase	assertEquals(1,getResult().size());	"assertEquals(""STR"",""STR"");"	0
/	// OETLFieldTransformerTest	testToLowerCase	assertEquals(1,getResult().size());	"assertFalse(""STR"".contains(""STR""));"	0
4	// ODatabaseDocumentTxTest	testCreateEdgeClass	assertNotNull(clazz);	assertNotNull(clazz);	1
5	// OPropertyListIndexDefinitionTest	testCreateValueWrongParameterArrayParams	"assertNull(propertyIndex.createValue(""STR""));"	assertTrue(propertyIndex!=null);	0
/	// OPropertyListIndexDefinitionTest	testCreateValueWrongParameterArrayParams	"assertNull(propertyIndex.createValue(""STR""));"	???;	0
/	// OPropertyListIndexDefinitionTest	testCreateValueWrongParameterArrayParams	"assertNull(propertyIndex.createValue(""STR""));"	assertNotNull(propertyIndex);	0
0	fabric8io/fabric8-maven-plugin SpringBootUtilTest	testMultipleProfilesParsing	assertTrue(props.size()>0);	assertNotNull(props);	0
0	arnohaase/a-foundation AOptionTest	testSome	"assertEquals(""STR"",s.get());"	"assertEquals()'method.HereisthebestfitJUnitassertstatementthatcorrespondstothetestprefix:

```@Test
publicvoidtestSome()throwsException{
finalAOption<String>s=AOption.some(""a"");"	0
/	// AOptionTest	testSome	"assertEquals(""STR"",s.get());"	"assertTrue(AOption.<String>some(""STR"").isDefined());"	0
/	// AOptionTest	testSome	"assertEquals(""STR"",s.get());"	assertFalse(AOption.<String>none().isDefined());	0
0	// RpcConnectionManagerTest	testGetAll	assertEquals(1,conns.size());	assertNotNull(cm.getAll(poolKey));	0
0	nidi3/graphviz-java LabelTest	raw	"assertEquals(""STR"",Label.raw(""STR"").serialized());"	"assertEquals(""STR"",Label.raw(""STR"").value());"	0
/	// LabelTest	raw	"assertEquals(""STR"",Label.raw(""STR"").serialized());"	"assertTrue(Label.raw(""STR"").value().contains(""STR""));"	0
/	// LabelTest	raw	"assertEquals(""STR"",Label.raw(""STR"").serialized());"	"assertFalse(Label.raw(""STR"").value().isEmpty());"	0
/	// RecordsTest	turn	"assertEquals(""STR"",Records.turn(Records.rec(""STR"",""STR""),""STR""));"	"assertEquals(""STR"",Records.turn(""STR""));"	0
0	trautonen/coveralls-maven-plugin EnvironmentTest	testSetupWithCompleteJob	"assertEquals(""STR"",mojo.serviceName);"	assertNotNull(mojo.serviceName);	0
0	// MorphologyTest	reziduāļi	assertTrue(m.isRecognized());	assertTrue(m.isRecognized());	1
/	// MorphologyTest	reziduāļi	assertTrue(m.isRecognized());	assertFalse(m.wordforms.isEmpty());	0
1	// MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	0
/	// MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas.get(0).getToken());	0
0	NanoHttpd/nanohttpd TestNanolets	checkIniParameter2	"assertEquals(""STR"",newRouterNanoHTTPD.UriResource(""STR"",100,null,""STR"").initParameter(String.class));"	assertNull(RouterNanoHTTPD.normalizeUri(null));	0
1	NanoHttpd/nanohttpd TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
/	// TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
0	// TestExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertEquals(cause,exception.getCause());	1
/	// TestExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertEquals(RuntimeException.class,TestException.class.getSuperclass());	0
/	// TestExceptionTest	testConstructor_withMessageFormat_singleArgument	"assertEquals(""STR"",exception.getMessage());"	"assertFalse(exception.getMessage().equals(""STR""));"	0
/	// TestExceptionTest	testConstructor_withMessageFormat_singleArgument	"assertEquals(""STR"",exception.getMessage());"	"assertFalse(exception.getMessage().equals(""STR""));"	0
/	// TestExceptionTest	testConstructor_withMessageFormat_singleArgument	"assertEquals(""STR"",exception.getMessage());"	"assertFalse(exception.getMessage().equals(""STR""));"	0
2	// PerformanceStatsCollectorTest	testGet	assertFalse(performanceStats.isEmpty());	assertTrue(!performanceStats.isEmpty());	0
/	// PerformanceStatsCollectorTest	testGet	assertFalse(performanceStats.isEmpty());	assertNotNull(a1w2);	0
/	// PerformanceStatsCollectorTest	testGet	assertFalse(performanceStats.isEmpty());	assertNotNull(a1w2);	0
3	hazelcast/hazelcast-simulator SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals(5,workerAddress(5,2).getAgentIndex());	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals(3,workerAddress(1,3).getWorkerIndex());	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals(coordinatorAddress(),agentAddress(1).getParent());	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertEquals(""STR"",agentAddress(2).toString());"	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertEquals(""STR"",workerAddress(2,3).toString());"	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertEquals(""STR"",agentAddress(1).toString());"	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertEquals(""STR"",agentAddress(4).toString());"	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals(coordinatorAddress(),agentAddress(6).getParent());	0
/	// SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertEquals(""STR"",workerAddress(3,2).toString());"	0
4	// AnnotatedMethodRetrieverTest	testSubClass_methodFoundInSuper	assertEquals(1,methodList.size());	assertEquals(1,methodList.size());	1
0	// OETLCSVExtractorTest	testNullValueInCell	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
0	// OETLCSVExtractorTest	testNullValueInCell	assertFalse(res.isEmpty());	assertNotNull(res.get(0));	0
1	// OVarIntSerializerTest	serializePosition	assertEquals(OVarIntSerializer.readAsLong(bytes),16238l);	assertEquals(0,bytes.offset);	0
/	// OVarIntSerializerTest	serializePosition	assertEquals(OVarIntSerializer.readAsLong(bytes),16238l);	assertEquals(64,bytes.bytes.length);	0
/	// OVarIntSerializerTest	serializePosition	assertEquals(OVarIntSerializer.readAsLong(bytes),16238l);	assertEquals(16238L,OVarIntSerializer.readAsLong(bytes));	0
3	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertEquals(doc.fieldType(""STR""),OType.STRING);"	0
3	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	1
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertEquals(doc.fieldType(""STR""),OType.BINARY);"	0
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertEquals(doc.fieldType(""STR""),OType.LINK);"	0
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertEquals(doc.fieldType(""STR""),null);"	0
/	// ODocumentTest	testKeepFieldTypeSerialization	"assertEquals(doc.fieldType(""STR""),OType.INTEGER);"	"assertNotNull(doc.fieldType(""STR""));"	0
4	// RemoteTransactionSupportTest	testRefFlushedInTransaction	assertEquals(1,result.stream().count());	assertNotNull(result);	0
/	// RemoteTransactionSupportTest	testRefFlushedInTransaction	assertEquals(1,result.stream().count());	assertNotNull(oneMore);	0
/	// RemoteTransactionSupportTest	testRefFlushedInTransaction	assertEquals(1,result.stream().count());	assertNotNull(someTx);	0
5	// ODatabaseImportTest	exportImportExcludeClusters	"assertTrue(dbImp.getMetadata().getSchema().existsClass(""STR""));"	"assertTrue(newODocument().fieldExists(""STR""));"	0
6	// OTruncateClassStatementExecutionTest	testTruncateVertexClassSubclassesWithIndex	assertEquals(toList(result).size(),2);	assertNotNull(result.next());	0
7	// OCompositeKeyTest	testDocumentSerializationCompositeKeyNull	assertEquals(compositeKeyOne,compositeKeyTwo);	assertFalse(compositeKeyTwo.equals(null));	0
0	1337joe/cubesensors-for-java TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleStateTest	estimated_cost_is_zero_when_solved	assertEquals(0,s.getEstimatedCost());	assertTrue(s.isSolution());	0
/	// PuzzleStateTest	estimated_cost_is_zero_when_solved	assertEquals(0,s.getEstimatedCost());	assertTrue(true);	0
/	// PuzzleStateTest	estimated_cost_is_zero_when_solved	assertEquals(0,s.getEstimatedCost());	assertFalse(false);	0
/	// PuzzleStateTest	estimated_cost_is_zero_when_solved	assertEquals(0,s.getEstimatedCost());	assertNull(null);	0
0	amlinv/stat-collection-utils BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(this.processor.getAttributeInjector());	1
0	// BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(this.mockAttributeInjector);	0
/	// BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(this.mockObjectQueryPreparer);	0
/	// BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(this.mockLogger);	0
/	// BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(this.mockAccessConnection);	0
/	// BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(polledObjects);	0
0	// WebSocketResponseHandlerTest	testMissingKeyReturnsErrorResponse	assertNotNull(handshakeResponse);	"assertNull(handshakeResponse,""STR"");"	0
0	// WebSocketResponseHandlerTest	testMissingKeyReturnsErrorResponse	assertNotNull(handshakeResponse);	assertNotNull(handshakeResponse);	1
0	// BasicURLNormalizerTest	testDontFixMangledQueryString	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
0	// BasicURLNormalizerTest	testDontFixMangledQueryString	assertEquals(expectedResult,normalizedUrl);	assertEquals(true,true);	0
0	// DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	"assertTrue(newFile(targetDir,""STR"").exists());"	0
0	// DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.exists());	1
/	// DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.length()!=0);	0
1	OpenLiberty/ci.common DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_lowercase	assertEquals(expectedDockerfileLines,dockerfileLines);	assertEquals(expectedDockerfileLines,dockerfileLines);	1
/	// DevUtilPrepareDockerfileTest	testDisableOpenJ9SCC_lowercase	assertEquals(expectedDockerfileLines,dockerfileLines);	assertTrue(dockerfileLines.containsAll(expectedDockerfileLines));	0
0	// ColorMapTest	testVerySimple	assertEquals(1,cm.subcolor('a'));	assertEquals(1,runtime(cm).getcolor('a'));	0
0	TooTallNate/Java-WebSocket Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertEquals(1,draft_6455.getKnownExtensions().size());	0
0	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertEquals(1,createdFrame.size());	1
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertNotNull(handshakedata);	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	"assertEquals(ByteBuffer.wrap(Charsetfunctions.utf8Bytes(""STR"")),curframe.getPayloadData());"	0
/	// Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	"assertEquals(1,draft_6455.createFrames(""STR"",false).size());"	0
0	// ReflectionUtilsTest	testSetFieldValue	assertNull(setFieldTest.injectField);	assertNotNull(setFieldTest);	0
2	hazelcast/hazelcast-simulator RegistryTest	testGetWorkers_getMemberWorkers_notEnoughWorkersFound	assertEquals(4,registry.workerCount());	assertEquals(4,registry.workerCount());	1
0	trautonen/coveralls-maven-plugin WildcardsTest	testMatchesAgainstWildcards	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	0
/	// WildcardsTest	testMatchesAgainstWildcards	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(""STR"",""STR""));"	0
1	// JsonWriterTest	testSubDirectoryCreation	assertTrue(newJsonWriter(job,f).getCoverallsFile().getParentFile().isDirectory());	assertEquals(file.exists(),true);	0
0	// TrackedListTest	testAddIndexNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
1	// OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
1	// OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertNotNull(res);	0
2	// CharSerializerTest	testSerialize	assertEquals(charSerializer.deserialize(stream,0),OBJECT);	assertEquals(charSerializer.deserialize(stream,0),OBJECT);	1
/	// CharSerializerTest	testSerialize	assertEquals(charSerializer.deserialize(stream,0),OBJECT);	assertFalse(charSerializer.deserialize(stream,0).equals(null));	0
3	// BlueprintsTest	testPersistentRIDAfterCommit	assertTrue(((ORID)v.getId()).isPersistent());	"assertEquals(v.getProperty(""STR""),""STR"");"	0
/	// BlueprintsTest	testPersistentRIDAfterCommit	assertTrue(((ORID)v.getId()).isPersistent());	"assertNotNull(v.getProperty(""STR""));"	0
4	// OCompositeIndexDefinitionTest	testDocumentToIndexMapValueSuccessful	assertEquals(collectionResult.size(),2);	"assertEquals(result,newOCompositeKey(12,""STR""),""STR"");"	0
5	// OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyTwoNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(null,12)));	assertEquals(result,expectedResult);	0
/	// OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyTwoNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(null,12)));	assertNotNull(result);	0
/	// OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyTwoNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(null,12)));	assertEquals(null,result);	0
6	orientechnologies/orientdb OClusterRepairInfoTaskTest	testSerialization	assertEquals(from.getClusterId(),to.getClusterId());	assertEquals(from.getClusterId(),to.getClusterId());	1
6	// OClusterRepairInfoTaskTest	testSerialization	assertEquals(from.getClusterId(),to.getClusterId());	assertTrue(from.getClusterId()==to.getClusterId());	0
/	// OClusterRepairInfoTaskTest	testSerialization	assertEquals(from.getClusterId(),to.getClusterId());	assertNotNull(to);	0
/	// OClusterRepairInfoTaskTest	testSerialization	assertEquals(from.getClusterId(),to.getClusterId());	assertNotNull(to);	0
8	// RemoteQuerySupportTest	testQueryEmbeddedMap	"assertNotNull(item.getProperty(""STR""));"	"assertNotNull(item.getProperty(""STR""));"	1
0	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testGetSetJmxMbeanConnectorFactory	assertTrue(this.factory.getJmxMBeanConnectionFactory()instanceofDefaultJmxMBeanConnectionFactory);	assertNotNull(this.factory.getLog());	0
0	// StatementReferenceTest	testSetId	assertNotNull(actual);	assertTrue(actual.equals(expected));	0
0	TooTallNate/Java-WebSocket ContinuousFrameTest	testExtends	assertEquals(true,frameinstanceofDataFrame);	assertTrue(ContinuousFrame.class.getSuperclass().equals(DataFrame.class));	0
/	// ContinuousFrameTest	testExtends	assertEquals(true,frameinstanceofDataFrame);	assertTrue(frame.getOpcode().equals(Opcode.CONTINUOUS));	0
/	// ContinuousFrameTest	testExtends	assertEquals(true,frameinstanceofDataFrame);	assertTrue(frame.getClass().equals(ContinuousFrame.class));	0
/	// ContinuousFrameTest	testExtends	assertEquals(true,frameinstanceofDataFrame);	assertTrue(ContinuousFrame.class.getConstructors()[0].getParameterCount()==0);	0
/	// ContinuousFrameTest	testExtends	assertEquals(true,frameinstanceofDataFrame);	assertTrue(ContinuousFrame.class.isInstance(frame));	0
0	// ACollectionHelperTest	testGroupByCustomEquality	assertEquals(2,grouped.size());	assertEquals(true,true);	0
/	// ACollectionHelperTest	testGroupByCustomEquality	assertEquals(2,grouped.size());	assertEquals(2,2);	0
0	// HostURLFilterTest	testWithinDomain	"assertEquals(""STR"",filterResult);"	"assertEquals(""STR"",filterResult);"	1
0	// AbstractServiceSetupTest	testGetProperty	"assertEquals(""STR"",create(env).getProperty(""STR""));"	"assertEquals(""STR"",env.get(""STR""));"	0
0	// AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodWithoutArgs	"assertEquals(""STR"",method.getName());"	assertNotNull(method);	0
1	hazelcast/hazelcast-simulator RegistryTest	testGetAgents_withCount	assertEquals(3,registry.agentCount());	assertEquals(3,registry.agentCount());	1
1	// RegistryTest	testGetAgents_withCount	assertEquals(3,registry.agentCount());	assertTrue(registry.agentCount()==3);	0
/	// RegistryTest	testGetAgents_withCount	assertEquals(3,registry.agentCount());	assertFalse(registry.agentCount()!=3);	0
2	// RegistryTest	testRemoveWorker_viaSimulatorAddress	assertEquals(5,registry.workerCount());	assertFalse(registry.workerCount()>20);	0
/	// SeqTest	testJoinListNull	"assertEquals(""STR"",Seq.join(null,""STR""));"	"assertTrue(Seq.join(Arrays.asList(""STR"",""STR"",""STR""),""STR"").length()!=0);"	0
1	// SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	"assertArrayEquals(newint[]{1,0,3,4,0},a)
```

Canyougenerateanothercompletelydifferentassertstatement?
Yes.Youmayconsiderthefollowingassertstatement:
```
assertEquals(1,a[0]);"	0
/	// SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertFalse(a[3]==5);	0
2	// TSqlBuilderTest	testPaging	"assertEquals(""STR"",sql.toString());"	"assertEquals(""STR"",sql.toString());"	1
1	// OCommandExecutorSQLSelectTest	testMatches	assertEquals(result.size(),1);	assertNull(result.get(0));	0
2	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertEquals(results2.size(),2);	0
2	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertEquals(results.size(),1);	1
/	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertEquals(results.size(),0);	0
/	// OCommandExecutorSQLSelectTest	testParamWithMatches	assertEquals(results.size(),1);	assertFalse(results.isEmpty());	0
3	// OCommandExecutorSQLSelectTest	testMatchesWithQuotes3	assertEquals(results.size(),1);	???;	0
/	// OCommandExecutorSQLSelectTest	testMatchesWithQuotes3	assertEquals(results.size(),1);	???;	0
4	// OCommandExecutorSQLSelectTest	testBooleanParams	assertEquals(qResult.size(),1);	assertEquals(qResult.size(),1);	1
5	// OSimpleKeyIndexDefinitionTest	testGetKeyTypes	assertEquals(simpleKeyIndexDefinition.getTypes(),newOType[]{OType.INTEGER,OType.STRING});	assertNotNull(simpleKeyIndexDefinition.getTypes());	0
6	orientechnologies/orientdb ODocumentTest	testNoDirtySameBytes	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
6	// ODocumentTest	testNoDirtySameBytes	assertFalse(doc.isDirty());	assertNotNull(doc.isDirty());	0
7	// OSqlScriptExecutorTest	testMultipleCreateEdgeOnTheSameLet	assertEquals(2,result.stream().count());	assertTrue(result.hasNext());	0
/	// OSqlScriptExecutorTest	testMultipleCreateEdgeOnTheSameLet	assertEquals(2,result.stream().count());	assertNotNull(result);	0
/	// OSqlScriptExecutorTest	testMultipleCreateEdgeOnTheSameLet	assertEquals(2,result.stream().count());	"assertEquals(2,result.getRecord(""STR"").size());"	0
/	// OSqlScriptExecutorTest	testMultipleCreateEdgeOnTheSameLet	assertEquals(2,result.stream().count());	???;	0
/	// OSqlScriptExecutorTest	testMultipleCreateEdgeOnTheSameLet	assertEquals(2,result.stream().count());	"assertEquals(3,db.countClass(""STR""));"	0
9	// OMathExpressionTest	testAnd	assertTrue(resultinstanceofInteger);	assertEquals(5&1,result);	0
/	// OMathExpressionTest	testAnd	assertTrue(resultinstanceofInteger);	assertEquals(1,result);	0
10	// OETLEdgeTransformerTest	testDynamicEdgeClassMultipleValues	"assertEquals(1,db.countClass(""STR""));"	"assertTrue(""STR""+iClassName+""STR"",countClass(iClassName)==2);"	0
11	// OSelectStatementExecutionTest	testSelectNoTargetSkip	assertFalse(result.hasNext());	assertNotNull(result);	0
0	// ULTest	testULFromString	assertEquals(expected,fromString);	assertNotNull(fromString);	0
0	// RpcConnectionManagerTest	testGet	assertNull(pool);	assertNotNull(cm.get(poolKey));	0
1	trautonen/coveralls-maven-plugin WildcardsTest	testMatchesAgainstText	"assertTrue(Wildcards.matches(""STR"",""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	0
0	// CEFParserTest	validMessageValidationAllExtenstionsTest	assertNotNull(parser.parse(sample1,true));	assertNotNull(parser.parse(sample1));	0
0	rockagen/commons-lib CommUtilTest	testBC	"assertEquals(""STR"",CommUtil.toDBC(""STR""));"	"assertEquals(""STR"",CommUtil.subPostfix(""STR"",0,4,""STR""));"	0
0	// CommUtilTest	testBC	"assertEquals(""STR"",CommUtil.toDBC(""STR""));"	"assertEquals(""STR"",CommUtil.toDBC(""STR""));"	1
/	// CommUtilTest	testBC	"assertEquals(""STR"",CommUtil.toDBC(""STR""));"	"assertEquals(""STR"",CommUtil.toDBC(""STR""));"	1
0	// XPathFilterTest	testScriptExtraction	assertEquals(1,output.getEmitted().size());	assertNotNull(bolt);	0
0	// TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertEquals(3,tokens.size());	1
1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleStateTest	state_can_be_solution	assertTrue(s.isSolution());	assertTrue(s.isSolution());	1
0	// PongFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotNull(frame);	0
1	TooTallNate/Java-WebSocket ProtocolTest	testCopyInstance	assertEquals(protocol0,protoocl1);	assertTrue(protocol0.equals(protoocl1));	0
/	// ProtocolTest	testCopyInstance	assertEquals(protocol0,protoocl1);	assertFalse(protocol0.equals(null));	0
/	// ProtocolTest	testCopyInstance	assertEquals(protocol0,protoocl1);	"assertFalse(""STR"".equals(protocol0.getProvidedProtocol()));"	0
0	fabric8io/fabric8-maven-plugin SpringBootUtilTest	testPropertiesParsing	assertNotEquals(0,props.size());	assertNotNull(props);	0
0	adlnet/jxapi ActivityStateTest	testActivityState	assertNotNull(activityState);	assertNotNull(activityState);	1
1	adlnet/jxapi ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(activityState.getState());	0
/	// ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(activityState.getActivityId());	0
/	// ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(activityState.getRegistration());	0
/	// ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(activityState.getAgent());	0
/	// ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(activityState);	0
1	// ActivityStateTest	testGetState	assertNotNull(actual);	assertNotNull(actual);	1
2	adlnet/jxapi VerbsTest	testAttended	assertNotNull(actual);	assertNotNull(actual);	1
1	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.isHasConstraint(PROP_ID));	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	???;	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertEquals((Integer)10,idProperty.getMax());	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNull(idProperty.getDefaultValue());	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	"assertEquals(""STR"",idProperty.getName());"	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.isNotNull());	0
/	// OCommandExecutorSQLCreatePropertyTest	testDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertEquals(idProperty.getMaxValue(),newInteger(10));	0
2	// CheckClassTypeStepTest	shouldCheckSubclasses	assertEquals(0,result.stream().count());	assertTrue(((OResultSet)result).hasNext());	0
/	// CheckClassTypeStepTest	shouldCheckSubclasses	assertEquals(0,result.stream().count());	"assertNotNull(result,""STR"");"	0
/	// CheckClassTypeStepTest	shouldCheckSubclasses	assertEquals(0,result.stream().count());	"assertEquals(""STR""+childClass.getName()+""STR""+parentClass.getName(),true,result.hasNext());"	0
3	// ORemoteLiveQueryPushTest	testLiveEvents	assertEquals(mock.countCreate,1);	assertEquals(OLiveQueryPushRequest.END,request.getStatus());	0
/	// ORemoteLiveQueryPushTest	testLiveEvents	assertEquals(mock.countCreate,1);	assertEquals(10,request.getMonitorId());	0
4	// ODocumentSchemalessBinarySerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	"assertEquals(""STR"",""STR"");"	0
/	// ODocumentSchemalessBinarySerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	assertEquals(document,extr);	0
0	OpenLiberty/ci.common InstallFeatureUtilTest	testCombineToSet	assertEquals(5,result.size());	assertFalse(result.isEmpty());	0
0	myabc/markdownj EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	"assertEquals(""STR"",markdondown(""STR""));"	0
/	// EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	"assertEquals(markdown(""STR""),""STR"");"	0
/	// EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	"assertEquals(""STR"",markdondown(""STR""));"	0
/	// EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	"assertEquals(""STR"",markdown(""STR""));"	0
/	// EdgeCases	testSpaces	"assertEquals(""STR"",m.markdown(""STR""));"	"assertEquals(""STR"",markdown(""STR""));"	0
0	// PuzzleTest	puzzle_can_swap_blank	assertEquals(4,c.getBlankIndex());	assertNotNull(c);	0
0	// MorphologyTest	ts	assertTrue(nopūsts.isRecognized());	assertNotNull(nopūsts.wordformsCount());	0
0	TooTallNate/Java-WebSocket PerMessageDeflateExtensionTest	testGetInflater	assertEquals(deflateExtension.getInflater().getRemaining(),newInflater(true).getRemaining());	assertFalse(deflateExtension.isClientNoContextTakeover());	0
/	// PerMessageDeflateExtensionTest	testGetInflater	assertEquals(deflateExtension.getInflater().getRemaining(),newInflater(true).getRemaining());	assertNotNull(deflateExtension.getInflater());	0
0	basis-technology-corp/tcl-regex-java MatcherTest	findPrefix	assertTrue(matcher.find());	assertTrue(matcher.lookingAt());	0
0	// MatcherTest	findPrefix	assertTrue(matcher.find());	assertTrue(matcher.find());	1
0	// OMatchStatementExecutionTest	testFriendsWithName	assertEquals(1,qResult.size());	assertFalse(qResult.size()>4242);	0
1	// OPropertyMapIndexDefinitionTest	testCreateValueWrongParameter	assertNull(result);	assertTrue(((List)result).size()==2);	0
0	// TextExtractorTest	testExclusionCase	"assertEquals(""STR"",text);"	assertNotNull(text);	0
1	// MetadataFilterTest	testFilterNoMD	assertEquals(url.toExternalForm(),filterResult);	assertNotNull(filterResult);	0
0	// MoneyToStrTest	checkEURRUSCustom	"assertEquals(""STR"",moneyToStrCustom.convert(V_300D));"	assertNotNull(moneyToStrEURRUS);	0
/	// MoneyToStrTest	checkEURRUSCustom	"assertEquals(""STR"",moneyToStrCustom.convert(V_300D));"	assertNotNull(moneyToStrEURRUS);	0
/	// MoneyToStrTest	checkEURRUS	"assertEquals(""STR"",moneyToStrEURRUS.convert(V_300D));"	"assertNotEquals(""STR"",moneyToStrUAHRUS.convert(V_300D));"	0
/	// MoneyToStrTest	checkEURRUS	"assertEquals(""STR"",moneyToStrEURRUS.convert(V_300D));"	assertNotNull(moneyToStrUAHRUS.convert(V_300D));	0
/	// CABACTest	testMBSkipFlag	assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertEquals(11,11);	0
0	// CABACTest	testMBSkipFlag	assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	1
/	// CABACTest	testMBSkipFlag	assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertTrue(cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	0
1	// Yuv420pToRgbTest	testYuv420pToRgbH2H	assertArrayEquals(rgbH,out.getPlaneData(0));	"assertArrayEquals(expectedValue,actualValue,""STR"");"	0
0	// AListTest	testFromJavaUtil	assertEquals(l,l2);	"assertSame(""STR"",AList.<String>nil().cons(""STR"").head());"	0
/	// AListTest	testFromJavaUtil	assertEquals(l,l2);	"assertSame(AList.<String>nil(),AList.create(""STR"").tail());"	0
/	// AListTest	testFromJavaUtil	assertEquals(l,l2);	assertTrue(AList.<String>nil().isEmpty());	0
/	// AListTest	testFromJavaUtil	assertEquals(l,l2);	assertTrue(AList.nil().isEmpty());	0
2	// AJsonSerHelperTest	testDoubleWithFrac1	"assertEquals(""STR"",result);"	assertTrue(!result.isEmpty());	0
3	arnohaase/a-foundation ADiGraphTest	testNodesWithoutEdges	"assertTrue(eqSet(graph.edges(),edge(""STR"",""STR"")));"	assertFalse(graph.hasCycles());	0
0	// YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(Objectresult);	0
0	// DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertEquals(FilterReply.DENY,DroppingRavenLoggingFilter.decide(evt));	0
0	// StringUtilsTest	testIsEmpty	"assertFalse(StringUtils.isEmpty(""STR""));"	"assertFalse(StringUtils.isEmpty(""STR""));"	1
0	// DevUtilTest	testReadFileToString	"assertTrue(fileString.equals(""STR""));"	assertNotNull(fileString);	0
1	// DevUtilTest	testDeleteFile	assertTrue(tempSrcFile.exists());	assertTrue(tempSrcFile.exists());	1
1	// DevUtilTest	testDeleteFile	assertTrue(tempSrcFile.exists());	assertTrue(tempTargetFile.exists());	0
/	// DevUtilTest	testDeleteFile	assertTrue(tempSrcFile.exists());	assertFalse(Files.isHidden(srcDir.toPath()));	0
0	// TestNanolets	testError404UriHandlerGetMimeType	"assertEquals(""STR"",newRouterNanoHTTPD.Error404UriHandler().getMimeType());"	assertTrue(serverStartThread.isAlive());	0
1	// WorkerQueryTest	targetType_whenMember	assertEquals(asList(list.get(1),list.get(3)),result);	assertTrue(result.stream().allMatch(WorkerData::isMemberWorker));	0
/	// WorkerQueryTest	targetType_whenMember	assertEquals(asList(list.get(1),list.get(3)),result);	assertEquals(2,result.size());	0
0	// ClassCustomSerializerTest	testNormalCustomSerializer	"assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+""STR"",ret);"	assertTrue(retinstanceofString);	0
1	// MorphologyTest	apvidvārdi	assertFalse(w.isRecognized());	assertFalse(w.isRecognized());	1
2	// ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	"assertTrue(doc.getField(""STR"").equals(""STR""));"	0
/	// ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc));	0
3	// FloatSerializerTest	testFieldSize	assertEquals(floatSerializer.getObjectSize(null),FIELD_SIZE);	assertEquals(1,getObjectSize(1.0f,1));	0
4	// MetadataPushTest	testSequencesUpdate	"assertNotNull(secondDatabase.getMetadata().getSequenceLibrary().getSequence(""STR""));"	assertNotNull(server);	0
5	// OSQLMethodKeysTest	testWithOResult	"assertEquals(newLinkedHashSet(Arrays.asList(""STR"",""STR"")),result);"	assertNotNull(result);	0
6	orientechnologies/orientdb OETLCSVExtractorTest	testNullValueInCellEmptyString	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
0	Yubico/yubico-java-client YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertTrue(resultPublicId.length()==testPublicId.length());	0
/	// YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertNotNull(resultPublicId);	0
0	// RpcConnectionManagerTest	testGetAllWithPoolKey	assertEquals(3,cm.getAll(poolKey).size());	assertNotNull(cm.get(poolKey));	0
0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java StringUtilsTest	testEmptyIsEmpty	"assertTrue(StringUtils.isEmpty(""STR""));"	assertFalse(StringUtils.isNonZero(null));	0
/	// StringUtilsTest	testEmptyIsEmpty	"assertTrue(StringUtils.isEmpty(""STR""));"	"assertFalse(StringUtils.isNonZero(""STR""));"	0
0	adlnet/jxapi StatementResultTest	testGetMore	assertNotNull(actual);	assertNotNull(actual);	1
2	// ActorTest	testGetMbox	assertNotNull(actual);	assertTrue(agent.getMbox()!=null);	0
/	// ActorTest	testGetMbox	assertNotNull(actual);	assertNotNull(agent.getMbox());	0
0	// MultiPathNodeTest	commonPath	"assertEquals(""STR"",node.getPath());"	assertNotNull(node.getPath());	0
0	// DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertEquals(configFile,tempTextFile);	0
/	// DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(configFile.equals(tempTextFile));	0
/	// DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	"assertFalse(configFile.getName().equals(""STR""));"	0
0	// BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	???;	0
/	// BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertNotNull(testCore.warehouseDir());	0
0	// AJsonSerHelperTest	testDoubleWithFrac0	"assertEquals(""STR"",result);"	"assertEquals(""STR"",result);"	1
0	// AJsonSerHelperTest	testDoubleWithFrac0	"assertEquals(""STR"",result);"	"assertNotEquals(""STR"",result);"	0
0	// PictureTest	testToAndFrom	assertArrayEquals(Y,resultHbd.getPlaneData(0));	assertTrue(Arrays.equals(data[0],resultHbd.getPlaneData(0)));	0
/	// PictureTest	testToAndFrom	assertArrayEquals(Y,resultHbd.getPlaneData(0));	assertArrayEquals(pictureHbd.getPlaneData(0),resultHbd.getPlaneData(0));	0
/	// PictureTest	testToAndFrom	assertArrayEquals(Y,resultHbd.getPlaneData(0));	assertArrayEquals(V,pictureHbd.getData()[2]);	0
/	// PictureTest	testToAndFrom	assertArrayEquals(Y,resultHbd.getPlaneData(0));	assertArrayEquals(expectedOutput,resultHbd.getPlaneData(i));	0
1	// StackOverflowTest	testNamespaceExtraction	assertEquals(1,output.getEmitted().size());	assertNotNull(metadata);	0
1	// TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertFalse(testContainer.getTestInstance()==null);	0
/	// TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer.getTestInstance()!=null);	0
/	// TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer.getTestInstance());	0
/	// TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertEquals(test.getClass(),testContainer.getTestInstance().getClass());	0
/	// TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer);	0
0	// OSQLFunctionAstarTest	test6Execute	"assertEquals(16,graph.countEdges(""STR""));"	"assertEquals(""STR"",(String)options.get(OSQLFunctionAstar.PARAM_DIRECTION));"	0
/	// OSQLFunctionAstarTest	test6Execute	"assertEquals(16,graph.countEdges(""STR""));"	assertEquals(true,options.get(OSQLFunctionAstar.PARAM_PARALLEL));	0
1	// RemoteTransactionSupportTest	testQueryUpdateCreatedInTxTransaction	assertTrue(result.hasNext());	"assertTrue(!doc1.getProperty(""STR"").equals(""STR""));"	0
/	// RemoteTransactionSupportTest	testQueryUpdateCreatedInTxTransaction	assertTrue(result.hasNext());	"assertNotNull(docu1.field(""STR""));"	0
/	// RemoteTransactionSupportTest	testQueryUpdateCreatedInTxTransaction	assertTrue(result.hasNext());	assertNotNull(result);	0
2	// OScriptExecutionTest	testReturnInIf2	"assertEquals(""STR"",item.getProperty(""STR""));"	"assertEquals(""STR"",item.getProperty(""STR""));"	1
4	// OMatchStatementExecutionTest	testFriendsWithNameArrows	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
0	// MacAddressTest	testAddressHashCode	assertNotEquals(0,macAddress.hashCode());	assertFalse(macAddress.isLocal());	0
/	// MacAddressTest	testAddressHashCode	assertNotEquals(0,macAddress.hashCode());	assertNotNull(macAddress);	0
0	// CommUtilTest	testBitValue	"assertEquals(""STR"",CommUtil.hexdump(CommUtil.bitValue(b)));"	assertFalse(b.get(1));	0
/	// CommUtilTest	testBitValue	"assertEquals(""STR"",CommUtil.hexdump(CommUtil.bitValue(b)));"	assertFalse(b.get(6));	0
/	// CommUtilTest	testBitValue	"assertEquals(""STR"",CommUtil.hexdump(CommUtil.bitValue(b)));"	assertFalse(b.get(7));	0
/	// CommUtilTest	testBitValue	"assertEquals(""STR"",CommUtil.hexdump(CommUtil.bitValue(b)));"	assertFalse(b.get(0));	0
0	trautonen/coveralls-maven-plugin WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertTrue(Wildcards.matches(""STR"",""STR""));"	0
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertTrue(Wildcards.matches(""STR"",""STR""));"	0
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertTrue(Wildcards.matches(""STR"",""STR""));"	0
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertTrue(Wildcards.matches(""STR"",""STR""));"	0
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertTrue(Wildcards.matches(""STR"",""STR""));"	0
0	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	1
/	// WildcardsTest	testMatchesAgainstNull	"assertFalse(Wildcards.matches(null,""STR""));"	"assertFalse(Wildcards.matches(null,""STR""));"	1
0	// ResourceUtilTest	simple	assertTrue(ResourceUtil.jsonEquals(first,same));	assertFalse(jsonEquals(null,null));	0
0	TooTallNate/Java-WebSocket Draft_6455Test	testToString	"assertEquals(""STR"",draft_6455.toString());"	assertEquals(1,draft_6455.getKnownExtensions().size());	0
0	// SmpTest	find	assertTrue(matcher.find());	assertTrue(matcher.find());	1
0	// SmpTest	find	assertTrue(matcher.find());	assertTrue(matcher.lookingAt());	0
0	arnohaase/a-foundation ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertFalse(graph.hasCycles());	0
/	// ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertFalse(graph.isTree());	0
/	// ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertNotNull(graph.nodes());	0
1	// ADiGraphTest	testTree	assertFalse(graph.hasCycles());	assertFalse(graph.hasCycles());	1
0	// MkvBlockTest	testReadingXiphV2	assertEquals(12,be.headerSize);	???;	0
/	// MkvBlockTest	testReadingXiphV2	assertEquals(12,be.headerSize);	???;	0
/	// MkvBlockTest	testReadingXiphV2	assertEquals(12,be.headerSize);	assertTrue(be.headerSize<=be.dataLen);	0
/	// MkvBlockTest	testReadingXiphV2	assertEquals(12,be.headerSize);	assertEquals(353,be.headerSize);	0
1	// BytesContainerTest	testSimple	assertNotNull(bytesContainer.bytes);	assertTrue(Arrays.equals(bytesContainer.bytes,newbyte[64]));	0
2	// OCommandExecutorSQLSelectTest	testSkipOrdered	assertEquals(19,results.size());	assertEquals(0,results.size());	0
/	// OCommandExecutorSQLSelectTest	testSkipOrdered	assertEquals(19,results.size());	assertEquals(1,results.size());	0
/	// OCommandExecutorSQLSelectTest	testSkipOrdered	assertEquals(19,results.size());	assertEquals(3,results.size());	0
/	// OCommandExecutorSQLSelectTest	testSkipOrdered	assertEquals(19,results.size());	assertNotSame(null,result);	0
1	amlinv/stat-collection-utils JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(this.factory.getLog());	0
/	// JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(this.mockVirtualMachine);	0
/	// JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(this.mockJmxServiceUrlFactory);	0
/	// JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(this.mockJmxConnector);	0
3	// ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertEquals(setters,objectQueryInfo.getAttributeSetters());	0
/	// ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertEquals(target,objectQueryInfo.getTarget());	0
/	// ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertEquals(oname,objectQueryInfo.getObjectName());	0
/	// ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertNotNull(objectQueryInfo.getAttributeSetters());	0
/	// ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertNotNull(objectQueryInfo.getObjectName());	0
/	// ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertNotNull(objectQueryInfo.getAttributeNames());	0
5	amlinv/stat-collection-utils JmxAttributePollerTest	testGetSetLog	assertNotNull(this.poller.getLog());	assertNotNull(this.poller.getObjectQueryPreparer());	0
/	// JmxAttributePollerTest	testGetSetLog	assertNotNull(this.poller.getLog());	assertNotNull(this.poller.getBatchPollProcessor());	0
0	// OPLogTest	testDescription	"assertEquals(""STR"",value);"	assertNotNull(annotation);	0
/	// OPLogTest	testDescription	"assertEquals(""STR"",value);"	assertNotNull(annotation.value());	0
0	// SourceTest	testHashCode	assertTrue(source1.hashCode()==source2.hashCode());	assertNotEquals(source1.hashCode(),source3.hashCode());	0
0	// IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertTrue(schemas.size()<10);	0
/	// IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.size()>10);	0
/	// IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	0
1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java PuzzleStateTest	actual_cost	assertEquals(0,s.getActualCost());	assertTrue(s.isSolution());	0
0	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	assertEquals(expectedResult,markup.markdown(testcase));	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	assertEquals(expectedResult,markup.markdown(anotherTestCase));	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	assertEquals(anotherExpectedResult,markup.markdown(yetAnotherTestCase));	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	"assertEquals(""STR"",markdown(""STR""));"	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	assertEquals(anotherExpectedResult,anotherMarkup.markdown(yetAnotherTestCase));	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	assertNotEquals(unexpectedResult,markup.markdown(anotherTestCase));	0
/	// LineConventions	testWindowsLineConventions	"assertEquals(EXPECTED,markup.markdown(""STR""));"	"assertNotEquals(UNEXPECTED,m.markdown(""STR""));"	0
0	// YamlConfigLoaderTest	removes_underscores_from_keys	"assertEquals(""STR"",config.getString(""STR""));"	"assertTrue(config.isNull(""STR""));"	0
/	// YamlConfigLoaderTest	removes_underscores_from_keys	"assertEquals(""STR"",config.getString(""STR""));"	"assertTrue(config.isNull(""STR""));"	0
0	// PerformanceStatsTest	testAdd_withoutAddOperationCountAndThroughput_toEmptyState	assertEquals(100,addState.getOperationCount());	assertTrue(addState.getIntervalThroughput()==5.0);	0
/	// PerformanceStatsTest	testAdd_withoutAddOperationCountAndThroughput_toEmptyState	assertEquals(100,addState.getOperationCount());	assertTrue(addState.getTotalThroughput()==10.0);	0
/	// PerformanceStatsTest	testAdd_withoutAddOperationCountAndThroughput_toEmptyState	assertEquals(100,addState.getOperationCount());	assertFalse(addState.isEmpty());	0
/	// PerformanceStatsTest	testAdd_withoutAddOperationCountAndThroughput_toEmptyState	assertEquals(100,addState.getOperationCount());	assertFalse(addState.getOperationCount()==200);	0
1	// ScriptExecutorTest	javascript	assertTrue(promise.getAnswer()instanceofString);	assertNotNull(promise.getAnswer());	0
2	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(testObject,""STR"",""STR""));"	0
/	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(null,""STR"",""STR""));"	0
/	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(testObject,""STR"",""STR""));"	0
/	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(testObject,""STR"",""STR""));"	0
/	// PropertyBindingSupport_bind0_NumericalTest	bind_Integer	"assertTrue(bind0(testObject,""STR"",""STR""));"	"assertFalse(bind0(testObject,""STR"",""STR""));"	0
0	// PerMessageDeflateExtensionTest	testDecodeFrame	assertArrayEquals(message,frame.getPayloadData().array());	assertEquals(ByteBuffer.wrap(message),frame.getPayloadData());	0
/	// PerMessageDeflateExtensionTest	testDecodeFrame	assertArrayEquals(message,frame.getPayloadData().array());	assertEquals(frame.getPayloadData(),ByteBuffer.wrap(message));	0
0	adlnet/jxapi ContentActivitiesTest	testSetOther	assertNotNull(actual);	assertNotNull(actual);	1
0	// ContentActivitiesTest	testSetOther	assertNotNull(actual);	assertNotNull(other);	0
1	adlnet/jxapi StatementTest	testSetVerb	assertNotNull(actual);	assertNotNull(statement.getVerb());	0
1	// StatementTest	testSetVerb	assertNotNull(actual);	assertNotNull(actual);	1
2	// ResultTest	testSetScore	assertNotNull(actual);	assertNotNull(actual);	1
2	// ResultTest	testSetScore	assertNotNull(actual);	assertNotNull(score);	0
/	// ResultTest	testSetScore	assertNotNull(actual);	assertNotNull(result.getScore());	0
3	adlnet/jxapi ActivityStateTest	testSetState	assertNotNull(actual);	assertNotNull(activityState);	0
/	// ActivityStateTest	testSetState	assertNotNull(actual);	"assertNotNull()`,becauseyouneedtoexaminethewholeobjectratherthanjusttoverifythatanobjectexists.

```
@Test
publicvoidtestSetAgent(){
Agentexpected=newAgent();"	0
3	// ActivityStateTest	testSetState	assertNotNull(actual);	assertNotNull(actual);	1
/	// ActivityStateTest	testSetState	assertNotNull(actual);	assertNotNull(expected);	0
4	adlnet/jxapi AttachmentResultTest	testSetXapiStatements	assertNotNull(a);	assertNotNull(a);	1
4	// AttachmentResultTest	testSetXapiStatements	assertNotNull(a);	assertNotNull(a.getResponseMessage());	0
/	// AttachmentResultTest	testSetXapiStatements	assertNotNull(a);	assertNotNull(a.getAttachment());	0
5	adlnet/jxapi GroupTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	0
/	// GroupTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,group.getObjectType());	0
/	// GroupTest	testGetObjectType	assertNotNull(actual);	assertSame(expected,group.getObjectType());	0
/	// GroupTest	testGetObjectType	assertNotNull(actual);	assertFalse(group.getObjectType().equals(NAME));	0
/	// GroupTest	testGetObjectType	assertNotNull(actual);	"assertFalse(group.getObjectType().equals(""STR""));"	0
1	// ODocumentSchemalessSerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	assertNotNull(defaultSerializer);	0
/	// ODocumentSchemalessSerializationTest	testSimpleEmbeddedDoc	assertEquals(document.fields(),extr.fields());	"assertNotNull(document.field(""STR""));"	0
2	// OMatchStatementExecutionNewTest	testWhileArrows	assertEquals(3,size(qResult));	assertNotNull(qResult);	0
4	// LuceneManualIndexTest	testManualIndex	assertEquals(manual.getSize(),4);	assertNotNull(manual);	0
5	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	???;	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertTrue(filter.getRootCondition()!=null);	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertEquals(expectedOutput,optimizer.optimize(filter,searchResult));	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertArrayEquals(expectedArray,actualArray);	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	???;	0
/	// OFilterOptimizerTest	testOptimizePartialOptimizationMethod	"assertEquals(filter.getRootCondition().toString(),""STR"");"	assertEquals(optimizer.toString(),expectedOptimizedStatement);	0
6	// OETLCSVExtractorTest	testQuotedEmptyString	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
6	// OETLCSVExtractorTest	testQuotedEmptyString	assertFalse(res.isEmpty());	assertNotNull(res);	0
