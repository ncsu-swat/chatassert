TestID	OracleID	Project	ClassName	TestName	TrueOracle	GenOracle	Time	Correct
1	0	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertEquals(expected, actual);	17.69685411	0
	1	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertTrue(expected.containsAll(actual) && actual.containsAll(expected));	34.71610403	0
	4	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertSame(expected, actual);	22.76219106	0
	9	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertTrue(expected.equals(actual));	16.04797196	0
	10	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertFalse(expected.size() == actual.size() && expected.hashCode() == actual.hashCode());	26.03141904	0
	13	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertEquals(expected, actual);	28.15592694	0
	14	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertSame(expected, actual);	41.82190681	0
	16	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertEquals(actual.toString(), expected.toString());	27.04575491	0
	18	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertNotNull(actual);	15.16538286	1
	20	adlnet/jxapi	ContentActivitiesTest	testGetGrouping	assertNotNull(actual);	assertTrue(expected.containsAll(actual));	18.87846684	0
2	0	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertEquals(expected, actual);	98.49665713	1
	1	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertTrue(expected == actual);	35.25099587	0
	2	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertSame(expected, actual);	22.18866205	0
	3	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertArrayEquals(expectedArray, resultArray);	13.02982402	0
	5	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertEquals(expected, actual);	18.25817704	0
	8	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertNotNull(actual);	12.53957891	0
	9	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertThat(actual, is(equalTo(expected)));	20.59888005	0
	12	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertSame(expected, actual);	21.21756601	0
	13	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertNotNull(score.getMax());	22.2216723	0
	14	adlnet/jxapi	ScoreTest	testGetMax	assertEquals(expected,actual,0);	assertEquals(MAX, score.getMax());	36.69222403	0
3	0	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertSame(expected, actual);	22.68213987	0
	6	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertSame(expected, actual);	22.68213987	0
	7	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotNull(actual);	36.2605288	0
	9	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertEquals(expected, actual);	24.98643613	1
	18	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertSame(expected, actual);	42.43269205	0
	20	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(Math.abs(expected - actual) < DELTA);	37.32594395	0
	25	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotNull(actual);	16.42346406	0
	29	adlnet/jxapi	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertEquals(actual, delta);	28.97652078	0
4	0	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	37.32095814	1
	2	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertTrue(Arrays.equals(expected, actual). They))));	29.41004086	0
	9	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertNotNull(actual);	43.81465721	0
	11	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	22.45222878	0
	16	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertTrue(Arrays.deepEquals(expectedOutput, person.getName()));	19.455791	0
	19	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertArrayEquals(expected, person.getName());	30.87379217	0
	20	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertTrue(Arrays.equals(expected, person.getName()));	21.79537892	0
	23	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	21.51837182	0
	26	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertNotNull(actual);	18.83957982	0
	27	adlnet/jxapi	PersonTest	testSetName	assertArrayEquals(expected,actual);	assertEquals(expected, actual);	19.76105809	0
5	0	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertEquals(expected, version.get(0));	19.47725272	0
	1	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assert.isTrue(state_error_codness.newCode(()=>IMap.CEP,Event.Int.(size();	88.13795519	0
	5	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertFalse(version.isEmpty());	21.97235513	0
	6	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertNotNull(version);	20.34677196	1
	7	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertNotSame(expected, version);	35.43133783	0
	10	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertTrue(version.contains(expected));	24.91802406	0
	11	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertSame(expected, version.get(0));	19.8783071	0
	14	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertSame(version, about.getVersion());	21.90764594	0
	15	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertNotSame(version, about.getVersion());	18.08425403	0
	21	adlnet/jxapi	AboutTest	testGetVersion	assertNotNull(version);	assertEquals("STR", version.get(0));	16.35600209	0
6	0	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertEquals(null, method);	39.05962801	0
	1	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertNotNull(method);	32.06174088	0
	2	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertTrue(!methods.isEmpty());	21.53285623	0
	3	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertFalse(methods.isEmpty());	43.34188795	0
	4	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertSame(methods.get(0), method);	26.00207806	0
	5	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertEquals(1, methods.size());	29.04100299	0
	6	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertNotNull(method);	37.73496294	0
	7	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertTrue(methods.size() <= 1);	123.5144708	0
	8	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertFalse(methods.size() > 1);	29.45223093	0
	9	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalTeardownFilter	assertEquals("STR",method.getName());	assertEquals();	33.69296503	0
7	0	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertEquals(EmptyMetronome.INSTANCE, propertyBinding.agentSetting.setDefault(TestElementProps.MAINTENANCE_MILLISECONDS_PER_MINUTE, "10MC").withVars("interval", "10ns").createMetronomeSync());	36.22487617	0
	1	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertThrows(RuntimeException.class, () -> file:///Users/adminuser/Documents/Implementation/src/filename.java.(clazzGeneratedFromSetupPackage).newInstance(clazz);	37.47717404	0
	2	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertFalse(new PropertyBinding(new TestCase("foo"), EmptyMetronome.INSTANCE).isDoubleConversionRequired());	25.8835299	0
	3	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertEquals(metronomeClass.getDeclaredConstructor().newInstance(), propertyBinding.agentSetting.setDefault(TestElementProps.MAINTENANCE_MILLISECONDS_PER_MINUTE, "10MC").withVars("interval", "10ns").createMetronomeSync());	21.96515989	0
	4	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertBeforeWaitNeverCalled());	56.29545617	0
	5	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertTrue(Mirror.getOrCreateInstance(ExecutorServiceConfigBean.class).getMaxPoolSize() > 1);	23.1285851	0
	6	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertTrue(threadPoolExecutor.getPoolSize() <= 1);	38.24504018	0
	7	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertEquals(EmptyMetronome.INSTANCE, new PropertyBinding();	39.05641913	0
	8	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertEquals(client, new PropertyBinding(null, client, new ScheduledThreadPoolExecutor(1)).getClient());	21.950176	0
	9	hazelcast/hazelcast-simulator	MetronomeSupplierTest	withCustomMetronome	assertEquals(BusySpinningMetronome.class,m.getClass());	assertEquals(LePassioAbsoluteForgeSchpelicGlobal.F)eventTypeHitFail);	149.4094846	0
8	0	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	12.62319589	1
	1	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertNotNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	10.96381688	0
	2	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertEquals(expectedVersion, getHazelcastVersionFromJarOrNull(classPath));	15.83080125	0
	3	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertTrue(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()) == null);	12.22876215	0
	4	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertFalse(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()) != null);	12.75124192	0
	5	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertEquals(expectedVersion, BuildInfoUtils.getHazelcastVersionFromJarOrNull(classPath));	42.60902095	0
	8	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertNotSame(expectedVersion, );	40.55089688	0
	10	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertThrows(UncheckedIOException.class, () -> BuildInfoUtils.getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	12.95288706	0
	11	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertSame(null, getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	11.38740778	0
	13	hazelcast/hazelcast-simulator	BuildInfoUtilsTest	testGetHazelcastVersionFromJarOrNull_whenInvalidPath_thenReturnNull	assertNull(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()));	assertTrue(getHazelcastVersionFromJarOrNull(file.getAbsolutePath()) == null);	10.31626487	0
9	0	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertNotNull(ensureExistingFile(workersHome, "file.txt"));	34.6215198	0
	1	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertTrue(ensureExistingFile(workersHome, "test.txt").exists());	25.14800406	0
	2	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertThrows(IllegalArgumentException.class, () -> ensureExistingFile(new File("non_existing_directory"),"non_existing_file"));	27.24131775	0
	3	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertNotEquals(ensureExistingFile(workersHome, "/file.txt").length(), 0);	37.59903908	0
	4	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertEquals(ensureExistingFile(workersHome, "subAA903123fromIE5Top43.ember_text.theme3.css.uiState.at.ajax_settings.ad_refresh.minimumAllowUIDle.c.resubI2p_Config_home_share_finantstand35.content.impl.tagParamsBase.tokensUrlsVm.views.locale.offset.weightFilter.Mur7+rsNA6LPBX5F2hli{abcadsfqni952.ninja.setBind.add(65991273-S13)});	179.1074758	0
	5	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertNotEquals(ensureExistingFile(new FileWrapper(parent-key, file_type), parent-baseurl, callQueries ).lastmodified, expected valus,dela , string-file-xd) );	302.114953	0
	6	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertNotNul(ensureExistingFile(workersHome, "file.txt"));	55.43220878	0
	7	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertTrue(ensureExistingFile(workersHome, "file.txt").exists());	39.08753467	0
	8	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertEquals(expectedFile.getAbsolutePath(), StringUtils.getsystemIndependentPath(actualDirectory.getAbsolutePath(),"ExampleFile.txt"));	44.04724789	0
	9	hazelcast/hazelcast-simulator	WorkerProcessFailureMonitorTest	testRun_shouldContinueAfterExceptionDuringDetection	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertFailureType(failureHandler,WORKER_OOME);}});	assertNotNull(ensureExistingFile(new File(parent, "fileName")));	19.36164713	0
10	0	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertNotNull(file);	20.56890798	1
	1	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertTrue(file.exists());	20.01172614	0
	2	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertTrue(file.isDirectory());	35.24807715	0
	4	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertTrue(file.exists());	15.11550879	0
	7	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertNotNull(actual );	57.09283972	0
	9	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertTrue(file.isFile());	23.40767407	0
	10	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertNotNull(file.getAbsolutePath());	21.766469	0
	12	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertTrue(file.canRead());	85.94610715	0
	13	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertNotNull(result);	54.66113377	0
	17	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJarFile	assertNotNull(file);	assertNotNull(file);	33.22982788	0
11	0	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertNotNull(uuid);	12.81252909	1
	1	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertUnsecureUUID(org.junit.Assert o, UUID uuid) {);	36.85287905	0
	2	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertNotEquals(new UUID(0L, 0L), uuid);	21.38726401	0
	3	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertTrue(uuid.version() == 4 && (uuid.variant() & 0x6000) == 0x4000);	26.08953929	0
	4	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertTrue(uuid.getLeastSignificantBits() != 0 && uuid.getMostSignificantBits() != 0);	25.43665004	0
	7	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertEquals(4, uuid.version());	32.32658505	0
	9	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertNotNull(uuid);	19.72113514	0
	10	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertNotEquals(uuid, newUnsecureUUID());	18.51380801	0
	11	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertTrue(uuid.getMostSignificantBits() != 0);	19.05427003	0
	13	hazelcast/hazelcast-simulator	UuidUtilTest	testNewUnsecureUUID	assertNotNull(uuid);	assertTrue(uuid.getLeastSignificantBits() > 0 && uuid.getMostSignificantBits() > 0);	36.89640069	0
12	0	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertNotNull(<AssertExpectedValue>);	32.49780726	0
	1	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertEquals(<AssertExpectedValue>, <AssertActualValue>);	25.30042982	0
	2	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertThat(img.getServices().size(), equalTo(expectedValue));	48.18031311	0
	3	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertTrue(img.getServices().stream().anyMatch(s -> expectedValue));	34.82602191	0
	4	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertTrue(img.getWidth() == expectedWidth );	27.5169189	0
	5	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertFalse(img.getServices().isEmpty());	20.85592198	0
	6	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertSame(img.getElementsByType(Service.TYPE).get(0).getProfile().get(0), "<expected service profile>");	38.13578606	0
	7	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertThrows(AssertionError.class, () -> focal.setResource(img));	70.01084805	0
	8	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertEquals(2000, img.getHeight()`<br>);	48.57421589	0
	9	dbmdz/iiif-apis	SpecExamplesSerializationTest	testImageResource	assertSerializationEqualsSpec(anno,"STR");	assertEquals(1500, img.getWidth());	27.24587607	0
13	0	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertEquals("Test Label", property.getLabel().getValue());	18.71163201	0
	1	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertTrue():);	19.97866702	0
	2	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertNotNull(property.getLabel());	22.66235089	0
	4	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertFalse(condition);	16.72448325	0
	5	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertThrows(Exception.class, () -> someMethodThatShouldThrowException());	16.50341392	0
	6	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertNotEquals(expectedValue, actualValue);	16.06107783	0
	7	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertArrayEquals(expectedArray, actualArray);	16.08450603	0
	8	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertThat(value, Matchers.is(expectedValue)));	16.18089986	0
	9	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertNull(property.getValue());	16.30401707	0
	10	dbmdz/iiif-apis	SpecExamplesSerializationTest	testGenericService	assertSerializationEqualsSpec(service,"STR");	assertNotSame(expectedObject, actualObject);	16.70469308	0
14	0	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertNotNull(authService);	36.95809102	0
	1	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertThat(formHtmlHtml(medicLastName+siddieURLAdpnx,pexID_Newsframe401nmWO.mtFinxtWE(Pew_SP_HDC88YJULORAK),olividEventPtrReq,yuIndex>=257*D_METHOD,typeRestTimestampCall,None)),);	140.3771069	0
	2	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertTrue(authService instanceof AccessCookieService);	22.17420173	0
	3	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertEquals(services.size(), 3);	23.27724481	0
	4	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertNotEquals(authService.getCookie().length(), 0);	30.84623599	0
	5	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertArrayEquals(expectedOutput, actualOutput);	24.875489	0
	6	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertFalse(servicesHistory.isEmpty());	34.59987092	0
	7	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertNotNull()` in this case. So, the correct org.junit.Assert statement would be:);	27.03506994	0
	8	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertNull(authService.getCookie());	19.74263191	0
	9	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testLoginWithLogout	assertThat(authService.getServices()).hasSize(2);	assertNotEquals(dummyServices, new ClassName().getServices());	39.46899509	0
15	0	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertNotNull(sut);	5.361021042	0
	1	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertEquals(expectedValue, actualValue```);	18.44177914	0
	2	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertTrue(annotation.asAnnotation().equals(" -rotate +90.0"));	13.66284895	0
	3	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertNotEquals(expectedValue, actualValue);	9.78221488	0
	4	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertThrows(IllegalArgumentException.class, () -> {);	6.544167995	0
	5	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertEquals();	19.21999812	0
	7	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertFalse(condition);	11.05352116	0
	8	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertEquals(expected, actual);	19.50380206	0
	9	sharneng/gm4java	GMOperationTest	rotate_Annotation_HeightLargerThanWidth	assertThat(sut.getCmdArgs(),hasItem("STR"));	assertThrows(IllegalArgumentException.class, () -> {);	6.832221031	0
16	0	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertEquals(original, trackedSet.returnOriginalState(firedEvents));	38.03651285	1
	1	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertSame(original, trackedSet.returnOriginalState(firedEvents));	53.88884211	0
	2	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertTrue(original.equals(trackedSet.returnOriginalState(firedEvents)));	49.52154112	0
	3	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertArrayEquals(original.toArray(), trackedSet.returnOriginalState(firedEvents).toArray());	35.31052804	0
	9	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertThrows(IllegalArgumentException.class, new Executable() {);	7.305770874	0
	10	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertTrue(trackedSet.returnOriginalState(firedEvents).isEmpty());	100.773643	0
	11	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertSame(original.getClass(), trackedSet.returnOriginalState(firedEvents).getClass());	104.5245128	0
	16	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertNotSame(trackedSet.returnOriginalState(firedEvents), null);	54.12592626	0
	17	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertEquals(original,new OTrackedSet<String>());	79.06279135	0
	22	orientechnologies/orientdb	TrackedSetTest	testReturnOriginalState	Assert.assertEquals(original,trackedSet.returnOriginalState(firedEvents));	assertTrue(trackedSet.removeAll(original));	94.6721499	0
17	0	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	50.040025	1
	1	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	49.61538792	0
	2	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertEquals(false, doc.isDirty());	51.89018202	0
	3	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	72.88917208	0
	4	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	47.389148	0
	5	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	71.89881587	0
	6	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	102.682657	0
	7	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(ORecordInternal.isDirty(doc));	132.715698	0
	10	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	78.78166699	0
	14	orientechnologies/orientdb	TrackedSetTest	testClearOne	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty() );	80.22215772	0
18	0	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager);	314.6439431	0
	1	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().isEmpty());	82.50601006	0
	2	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(Set.class, manager.getClass());	82.50236106	0
	3	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager);	67.77509117	0
	4	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().isEmpty());	90.2761991	0
	5	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(Collections.emptySet(), focalMethod());	83.92350316	0
	6	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertNull(manager.getRecord());	92.86772299	0
	7	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords() == null);	101.5309808	0
	8	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(null, doc.field("test1"));	115.0690982	0
	9	orientechnologies/orientdb	ODirtyManagerTest	testSetToNullLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(link);	99.51727796	0
19	0	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertEquals(DOUBLE_SIZE, getObjectSize(1.23));	99.00917196	0
	1	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertTrue(getObjectSize(9.776)>=0);	113.0739501	0
	2	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertNotEquals(0, getObjectSize(new Double(4.56)));	56.49914193	0
	3	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertNotNull(doubleSerializer);	79.01771808	0
	4	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertEquals(8, getObjectSize(0.15, null));	98.95084071	0
	5	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertEquals(DOUBLE_SIZE, getObjectSize(0.01));	83.30746508	0
	6	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertSame(doubleSerializer, doubleSerializer);	68.43906689	0
	7	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertFalse(getObjectSize(null) < 0);	71.81625772	0
	8	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertEquals(1, getObjectSize(11.8D));	57.9316678	0
	9	orientechnologies/orientdb	DoubleSerializerTest	testFieldSize	Assert.assertEquals(doubleSerializer.getObjectSize(null),FIELD_SIZE);	assertEquals(expectedValue, actualValue);	94.62601805	0
20	0	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertEquals();	56.62673903	0
	1	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertThat(analyzer, instanceOf(OLucenePerFieldAnalyzerWrapper.class));	34.62473512	0
	2	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertTrue(analyzer instanceof OLucenePerFieldAnalyzerWrapper);	25.58747602	0
	3	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertTrue(analyzer instanceof OLucenePerFieldAnalyzerWrapper);	20.63269186	0
	4	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertNotNull(analyzer);	20.18710995	0
	5	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertNotSame(DefaultAnalyzer.class, analyzer.getClass());	44.90137815	0
	6	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertNotEquals(DefaultAnalyzer.class, analyzer.getClass());	35.9698472	0
	7	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertNotSame(DefaultAnalyzer.class, analyzer.getClass());	41.95156717	0
	8	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertSame(StandardAnalyzer.class, analyzer.getWrappedAnalyzer("non-existent-field").getClass());	20.84748912	0
	9	orientechnologies/orientdb	OLucenePerFieldAnalyzerWrapperTest	shouldReturnCustomAnalyzerForEachField	assertThat(analyzer.getWrappedAnalyzer("STR")).isNotNull();	assertFalse(analyzer instanceof StandardAnalyzer);	44.97307682	0
21	0	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertTrue(expected:String, actual:String).`` solves String equality ```expectedString.contains(er")),``` it verifies of outpur contains the wrong (string format :) eng ("<".join(expectedList).replace("\\", "") ));	98.30484915	0
	1	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertBufferReady(writeFullNameVndTile, rlvomFieldVarCompFrameIndicator );	318.521687	0
	2	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertEquals(expectedNumberOfRecords, actualNumberOfRecords);	26.8412838	0
	3	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertTrue(output.toString().contains("Hello ->"));	24.46881819	0
	6	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertNotNull(output);	22.68661404	0
	7	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertTrue(line.endsWith("-> Hello"));	59.39777708	0
	8	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertFalse(output.toString().isEmpty());	21.70761395	0
	9	orientechnologies/orientdb	OETLLogTransformerTest	testPostfix	assertThat(out).contains("STR");	assertTrue(output.toString().contains("Hello ->") && output.toString().contains("Bye ->"));	24.29082894	0
22	0	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals()` );	91.92777395	0
	1	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertFalse(falseview.getComputerZeroE(valueOfInput2MetaData.array))));	237.882967	0
	2	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey("42"));	67.94112086	0
	3	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertNotNull(propertyIndex);	96.686378	0
	5	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals("{41=0}", keysToAdd.toString());	67.48803496	0
	6	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(!keysToRemove.containsKey("41"));	98.21399093	0
	7	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(addedKeys.isEmpty());	53.67903304	0
	8	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals(0, keysToRemove.size());	77.72587824	0
	9	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals(1, addedKeys.size());	81.8594451	0
	29	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventUpdateConvertValues	Assert.assertEquals(keysToAdd,addedKeys);	assertNotNull(keysToAdd.contains("42",2);	117.633215	0
23	5	orientechnologies/orientdb	OrientGraphFactoryTest	createNoTxPool	assertSame(g,OrientBaseGraph.getActiveGraph());	assertNotNull(factory.getDatabase());	22.53	0
	14	orientechnologies/orientdb	OrientGraphFactoryTest	createNoTxPool	assertSame(g,OrientBaseGraph.getActiveGraph());	assertTrue(factory.exists());	22.58	0
	15	orientechnologies/orientdb	OrientGraphFactoryTest	createNoTxPool	assertSame(g,OrientBaseGraph.getActiveGraph());	assertNotNull(factory.getTx());	25.57	0
	16	orientechnologies/orientdb	OrientGraphFactoryTest	createNoTxPool	assertSame(g,OrientBaseGraph.getActiveGraph());	assertEquals(5, new OrientGraph("memory:testPool").countVertices());	44.59	0
	18	orientechnologies/orientdb	OrientGraphFactoryTest	createNoTxPool	assertSame(g,OrientBaseGraph.getActiveGraph());	assertNotNull(factory.getNoTx());	28.83	0
	19	orientechnologies/orientdb	OrientGraphFactoryTest	createNoTxPool	assertSame(g,OrientBaseGraph.getActiveGraph());	assertTrue(factory.getTx().getRawGraph().isClosed());	29.67	0
	28	orientechnologies/orientdb	OrientGraphFactoryTest	createNoTxPool	assertSame(g,OrientBaseGraph.getActiveGraph());	assertFalse(factory.exists());	19.68	0
24	27	orientechnologies/orientdb	LuceneSpatialIntersectsTest	testIntersectsIndex	Assert.assertEquals(execute.size(),1);	assertTrue(!db.isClosed());	39.37	0
25	0	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	13.1	1
	1	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertEquals(InputStream.class, resourceAsStream.getClass());	13.63	0
	3	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	33.66	0
	5	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	39.89	0
	7	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	13.2	0
	9	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(-1093982927L | ((java.lang.String)h$.toFloat(1,1605419583$.checkList((h/abc;p "<VirtualOpenchannelsUpstream>.parse"; , entries.get())),(System.vArRsLoUnDeR_z638270057364398355732192527705035917880.cast((669647307711646184)),entries return; 0)[-1]).);	80.81	0
	11	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertTrue(keyStorePath.endsWith(".jks"));	14.9	0
	12	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(keyStorePath);	12.56	0
	14	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	24.62	0
	21	NanoHttpd/nanohttpd	LoadKeyStoreTest	loadKeyStoreFromResources	assertNotNull(resourceAsStream);	assertNotNull(resourceAsStream);	12.36	0
26	8	sofastack/sofa-bolt	RpcConnectionManagerTest	testRemoveConnWithSpecifiedPoolkey	Assert.assertEquals(2,cm.count(poolKey));	assertEquals(2, cm.count("hehe"));	33.65	0
	9	sofastack/sofa-bolt	RpcConnectionManagerTest	testRemoveConnWithSpecifiedPoolkey	Assert.assertEquals(2,cm.count(poolKey));	assertTrue(cm.count("hehe") == 2);	16.15	0
	12	sofastack/sofa-bolt	RpcConnectionManagerTest	testRemoveConnWithSpecifiedPoolkey	Assert.assertEquals(2,cm.count(poolKey));	assertNotEquals(0, cm.count("hehe"));	15.71	0
	14	sofastack/sofa-bolt	RpcConnectionManagerTest	testRemoveConnWithSpecifiedPoolkey	Assert.assertEquals(2,cm.count(poolKey));	assertTrue(cm.count("hehe") > 0);	15.88	0
27	0	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertEquals("", new Protocol("").getProvidedProtocol());	7.21	0
	1	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(new Protocol("").getProvidedProtocol());	7.81	0
	2	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(new Protocol("").getProvidedProtocol().isEmpty());	7.17	0
	3	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("test", new Protocol("").getProvidedProtocol());	7.25	0
	4	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertSame("", new Protocol("").getProvidedProtocol());	7.23	0
	5	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertArrayEquals(new byte[] {}, new Protocol("").getProvidedProtocol().getBytes());	7.66	0
	6	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertFalse(new Protocol("").getProvidedProtocol().contains("test"));	7.49	0
	7	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotSame("test", new Protocol("").getProvidedProtocol());	7.49	0
	9	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(new Protocol("").getProvidedProtocol() instanceof String);	7.73	0
	11	TooTallNate/Java-WebSocket	ProtocolTest	testToString	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals(null, new Protocol("").getProvidedProtocol());	7.86	0
28	0	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertTrue(deflateExtension.isServerNoContextTakeover());	7.3	1
	1	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertEquals(true, deflateExtension.isServerNoContextTakeover());	8.43	0
	2	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertNotNull(deflateExtension.isServerNoContextTakeover());	11.28	0
	4	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertNotEquals(false, deflateExtension.isServerNoContextTakeover());	7.63	0
	5	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertSame(true, deflateExtension.isServerNoContextTakeover());	7.43	0
	7	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertTrue(deflateExtension.isServerNoContextTakeover() );	23.08	1
	8	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertNotSame(false, deflateExtension.isServerNoContextTakeover());	7.37	0
	9	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertArrayEquals(new boolean[]{true}, new boolean[]{deflateExtension.isServerNoContextTakeover()});	7.98	0
	10	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertTrue(deflateExtension.isServerNoContextTakeover());	19.7	1
	11	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testIsServerNoContextTakeover	assertTrue(deflateExtension.isServerNoContextTakeover());	assertNotEquals(false, deflateExtension.isServerNoContextTakeover());	7.52	0
29	1	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertFalse(sairšana.isEmpty());	14.23	0
	2	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertNotNull(sairšana);	9.39	0
	5	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertTrue(laivas_iršana.size() > 0);	10.12	0
	6	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertNotEquals(sairšana, laivas_iršana);	9.51	0
	8	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertNotEquals(pagaatne, locītājs);	21.34	0
	13	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertFalse(laivas_iršana.isEmpty());	9.73	0
	15	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertFalse(sairšana.equals(laivas_iršana));	10.09	0
	24	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertNotEquals(null, sairšana);	10.14	0
	28	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertTrue(sairšana.size() > 0);	9.7	0
	29	PeterisP/morphology	MorphologyTest	multistem_generateinflections	assertInflection(sairšana,pagaatne,"STR");	assertNotNull(laivas_iršana);	9.59	0
30	3	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertNotNull(aizkost);	9.88	0
	4	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertTrue(aizkost.size()>0);	9.56	0
	7	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertNotEquals(null, locītājs);	10.26	0
	8	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertNotNull(tu);	9.35	0
	12	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertFalse (locītājs.hasLemma() ("" ) ) ;);	45.43	0
	14	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertEquals(Collections.emptyList(), locītājs.generateInflections(""));	9.62	0
	19	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertTrue(locītājs.getClass().getName().contains("Analyzer"));	10.28	0
	29	PeterisP/morphology	MorphologyTest	aizkost	assertInflection(aizkost,tu,"STR");	assertNotNull(locītājs);	25.56	0
31	11	PeterisP/morphology	MorphologyTest	cache	assertTrue(vārds.isRecognized());	assertThrows(IllegalArgumentException.class, () -> locitajs.isRecognized(""););	84.5	0
	17	PeterisP/morphology	MorphologyTest	cache	assertTrue(vārds.isRecognized());	assertNotNull(locītājs);	9.52	0
32	1	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertTrue(metadata.containsKey("title"));	20.43	0
	3	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertNotNull(metadata);	17.75	0
	4	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertFalse(metadata.containsKey("description"));	17.24	0
	8	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertNotEquals (0 , metadata.entrySet (). size () Monday ; ) );	39.69	0
	10	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertEquals("http://polloxniner.blogspot.com/2011/08/stack-overflow-what-is-byte-array-stream.html", metadata.getFirstValue("url"));	17.74	0
	11	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertFalse(metadata.getFirstValue("author").isEmpty());	15.91	0
	12	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertTrue(metadata.containsKey("language"));	15.78	0
	13	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertTrue(metadata.getFirstValue("title").startsWith("Stack Overflow:"));	16.6	0
	14	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertTrue(metadata.getFirstValue("description").length() > 50);	16.39	0
	15	DigitalPebble/storm-crawler	StackOverflowTest	testNamespaceExtraction	Assert.assertEquals(1,output.getEmitted().size());	assertFalse(metadata.getFirstValue("og:image").isEmpty());	16.02	0
33	0	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult, normalizedUrl);	14.96	1
	2	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	14.82	0
	3	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertSame(expectedResult, normalizedUrl);	14.75	0
	4	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	13.89	0
	5	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertNotEquals(expectedResult, normalizedUrl);	15.13	0
	6	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertFalse(expectedResult.equals(normalizedUrl));	14.86	0
	7	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertArrayEquals(expectedResult.toCharArray(), normalizedUrl.toCharArray());	14.21	0
	8	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertSame(expectedResult.getClass(), normalizedUrl.getClass());	14.01	0
	9	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertNotSame(expectedResult, normalizedUrl);	13.96	0
	10	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.contains("google.com"));	13.95	0
34	0	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult, normalizedUrl);	16.67	1
	1	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains("test=true"));	17.23	0
	2	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNotEquals(testUrl, normalizedUrl);	14.67	0
	3	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	13.96	0
	4	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	13.78	0
	5	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult, normalizedUrl);	24.98	0
	6	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNotSame(testUrl, normalizedUrl);	15.25	0
	9	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNotSame(testUrl, normalizedUrl);	16.17	0
	10	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNull(normalizedUrl);	19.11	0
	11	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertFalse(normalizedUrl.startsWith("http://google.com?a=c&foo=baz&foo=bar"));	16.22	0
35	0	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertEquals(1, manager.countableLock.countLocks.get());	131.53	0
	1	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertNull(reg_token_collectAuthConfidentialDisAttrpFirstgenAttack.clientEntity);	210.07	0
	2	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertNotNull(lock);	110.94	0
	3	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertTrue(lock.isHeldByCurrentThread());	148.91	0
	4	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertFalse(manager.checkExclusiveLockExist(null));	77.3	0
	5	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertEquals(2, countableLock.countLocks.get());	125.93	0
	6	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertEquals(100, countableLock.softLimit.get() // Added ) {);	116.28	0
	7	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertEquals(2, initCountLock(Mockito.doNothing().when(acquiredLock)));	117.91	0
	8	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertEquals(2, manager.countableLock.countLocks.get());	98.06	0
	9	orientechnologies/orientdb	OneEntryPerKeyLockManagerNullKeysTest	testNullKeyExclusive	assertEquals(2,wrapper(lock).getLockCount());	assertTrue(manager.checkExclusiveLockExist(null));	391.24	0
36	0	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertEquals(4, qResult.size());	71.03	0
	1	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertTrue(!qResult.isEmpty());	62.31	0
	2	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertNotNull(qResult);	104.04	0
	3	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertThat(qResult, hasItem(hasProperty("name", equalTo("b"))));	88.72	0
	4	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertNotEquals(0, qResult.size());	107.45	0
	5	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertFalse(qResult.isEmpty());	73.85	0
	6	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertEquals(Arrays.asList("b", "c"), names);	67.33	0
	7	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertEquals(6, qResult2.size()));	108.81	0
	8	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertEquals(10, customObj.multiplyByTwo(5));	106.53	0
	9	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testOperatorPriority3	assertEquals(qResult.size(),qResult2.size());	assertNotEquals(5.0, customObj.divide(10.0, 2.0));	62.32	0
37	0	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertEquals(1, database.query(new OSQLSynchQuery<Object>("SELECT * FROM Person")).size());	32.45	0
	1	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertTrue(database.getMetadata().getSchema().existsClass("Person"));	18.61	0
	2	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertTrue(resultSet.hasNext());	28.9	0
	3	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertEquals(1, database.command(new OCommandSQL("SELECT COUNT(*) FROM Person")).execute());	19.24	0
	4	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertThrows(IllegalArgumentException.class,);	51.8	0
	5	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertNotNull(database.getMetadata().getSchema().getClass("Person"));	57.06	0
	6	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertFalse(database.getMetadata().getSchema().existsClass("Person"));	47.87	0
	7	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertNotNull(result.streamFromSource(emptyMetadata.snapshot()).count());	72.17	0
	8	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertNotNull(mainResFBO);	239.88	0
	9	orientechnologies/orientdb	OETLOrientDBLoaderTest	shouldSaveDocuments	assertThat(res.size()).isEqualTo(1);	assertEquals(1, database.countClass("Person"));	18.61	0
38	0	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertNotNull(proc);	19.92	0
	1	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertNotNull(proc);	30.86	0
	2	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertNotNull(configurator.getDatabase());	23.98	0
	3	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertTrue(proc.getStats().entries() > 0);	51.2	0
	4	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertNotNull(configurator);	33.64	0
	5	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertTrue(proc.getStats().outputRows > 0);	31.85	0
	6	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertTrue(proc.getConfiguration().children("input").get(0).getConfiguration().field("resource").toString().contains("value: 'id,postId,text\n1,?,Hello'"));	35.96	0
	7	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertFalse({condition}""");	96.89	0
	8	orientechnologies/orientdb	OETLCSVExtractorTest	testCustomNullValueInCell	assertFalse(res.isEmpty());	assertTrue(proc.getStats().inputRows > 0);	32.03	0
39	0	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertNotNull(query(null));	108.04	0
	1	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertTrue(query(null).isEmpty());	75.46	0
	2	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertEquals(1, query(new OSQLSynchQuery<>("SELECT FROM LinkedClass WHERE id = ?"), "referred").size());	89.68	0
	3	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertTrue(notUniqueIndexExists);	117.27	0
	4	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertNotNull() {);	165.75	0
	5	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertFalse(uniqueIndexExists);	113.64	0
	7	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertNotNull(db)` statement.);	99.71	0
	9	orientechnologies/orientdb	OChainIndexFetchTest	testFetchChaninedIndex	assertEquals(0,res.size());	assertEquals(null,);	195.86	0
40	0	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertEquals(20, parent.getValue(OGlobalConfiguration.DB_POOL_MAX));	71.22	0
	1	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertEquals(, )` statement to check if the returned value of that attribute matches your expected value.);	91.44	0
	2	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertTrue(parent instanceof OrientDBConfigBuilder);	98.01	0
	3	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertNotNull(parent);	100.36	0
	4	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertNotNull(assert(xAFGenMH.transcoder(LoggedAuthorizedMF.AL_DEPEND_PASS_BODYREF_SUR_RAIL.bname_logAbandoned, HCContactEDdConstraints.ParameterCustomerHostKvm)<PVDJO<? extends jp.jp.accountm.gui.rawAvutil.rawEnvVarsCodec<GeoPropertyBean,qay.execType.ServicePostResponseTypeEdge_Metadata_LLtcKWVo, Y}} ].attrijupyter_common_ai_cleanDelinkJob.size));	194.74	0
	6	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertTrue(parent.getAttribute(ATTRIBUTES.VALIDATION, boolean.class));	103.48	0
	7	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertTrue(parent.contains(OGlobalConfiguration.DB_POOL_MAX));	102.88	0
	8	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertTrue(parent.containsKey(OGlobalConfiguration.DB_POOL_MAX));	93.2	0
	9	orientechnologies/orientdb	OrientDBConfigTest	testParentConfig	assertEquals(settings.getConfigurations().getValue(OGlobalConfiguration.DB_POOL_MAX),(Integer)20);	assertEquals(true, parent.getAttribute(ATTRIBUTES.VALIDATION, Boolean.class));	66.46	0
41	0	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertNull(actualOutput);	28.82	0
	1	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertEquals("CONTENTSCop1101,List(CONCENTTION,StringREOVER.CODEgIdA859EOD49SepLBcHB24TrojCanDVol,#Npl.25,#)$ULATOR,Evi#EEC.D3678,No-Dmz],Sopri{,\nLLL).hr,+11.931649945493555ebRcl:F679ada337E157vo)88090-2ad7370821_-867655,\n)sTerVEnNol,807450928U_JDb I:B.w:.Hjp-jl_I6b0-puD-L57-TNtx-doR,Ietghmcfs.reubrent./rusain/jantreg/oilnooil/Ldoalsc/O1096+S2?? _918il5pgO268mg82sn682nm5aja330k010,MaeYo80v85835F8cx,TIMOSSIYIF16tAN40bs659bx38715615790335-clorg360.pmay.\nefcq-UWnhypEAzi/?parmLetka[cow,boba,korz,moz,vuniwa,I400o7Pa391.nipp107.io:8ex/_upd/ALMN/V_165118-G23K~755J;BNye.6472]);	57.83	0
	2	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertEquals(expectedOutput, actualOutput);	33.44	0
	3	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertSame("EXPECTED: ", expectation), actualOutput.isSameAs(expexutedString));	30.14	0
	4	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertArrayEquals(expectedOutput, actualOutput);	20.57	0
	5	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertNotNull(I'm assume that `asText(Class clazz)` acceptingOEMGeometryMetadata inclusive return validation for result granted function-based other objects omods set overrira explicit site-down filters predicates so it produces json based scheme(valid? asText etc then responsible QA onwards job it is avoid almost cases which giving tricky inclusions/subtractions bugs appearance unknown conditions fulfilled unaware immediately). Considering this);	61.48	0
	6	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertTrue(actualOutput);	19.93	0
	8	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertFalse(actualOutput);	21.1	0
	9	orientechnologies/orientdb	LuceneSpatialIOTest	testGeometryCollection	Assert.assertEquals(m2,m1);	assertNotEquals(<EXPECTED_VARIABLE>, actualOutput);	27.47	0
42	0	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FLOAT_SIZE, floatSerializer.getObjectSizeInByteBuffer(buffer, null, 0));	72.21	0
	1	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(floatSerializer.getObjectSizeInByteBuffer(buffer, null, 0) == FLOAT_SIZE);	117.5	0
	2	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotEquals(0, floatSerializer.getObjectSizeInByteBuffer(buffer, null, 0));	49.27	0
	3	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(floatSerializer);	73.35	0
	4	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertArrayEquals(data, buffer.array());	80.29	0
	5	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(OBJECT, floatSerializer.deserializeNative(data, 0));	48.27	0
	6	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertSame(Float.class, floatSerializer.getType());	77.63	0
	7	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotSame(null, floatSerializer);	44.6	0
	8	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FLOAT_SIZE, floatSerializer.getObjectSizeInByteBuffer(buffer, mock(OWALChanges.class), 0));	79.7	0
	9	orientechnologies/orientdb	FloatSerializerTest	testSerializeWALChanges	Assert.assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(floatSerializer));	67	0
43	0	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertTrue(multiKey.equals(multiKey));	80.4	0
	1	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertEquals(multiKey, multiKey);	57.03	0
	2	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertTrue(fooMultiKey.equals(barMultiKey));	74.19	0
	3	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertTrue(multiKey.equals(multiKey));	57.99	0
	4	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertFalse(multiKey.equals(null));	65.84	0
	6	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertFalse(multiKey.equals("a"));	56.74	1
	7	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertFalse(multiKey.equals(new String()));	67.59	0
	8	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertTrue(multiKey.equals(new OMultiKey(Collections.singletonList("a"))));	67.47	0
	9	orientechnologies/orientdb	OMultiKeyTest	testEqualsDifferentClass	assertFalse(multiKey.equals("STR"));	assertEquals(multiKey.equals(new OMultiKey(Collections.singletonList("a"))), true);	69.99	0
44	0	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertEquals(l2, AList.create(l));	31.93	0
	1	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertTrue(l2.equals(AList.create(l)));	19.83	0
	2	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertThat(l2, org.hamcrest.CoreMatchers.is(AList.create(l)));	16.86	0
	3	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertArrayEquals(l2.toArray(), AList.create(l).toArray());	30.37	0
	4	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertNotEquals(l, AList.create(l));	13.89	0
	5	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertNotNull(AList.create(l));	13.03	0
	6	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertSame(l2, AList.create(l));	14.94	0
	7	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertArrayEquals(l2.toArray(), AList.create(l).toArray());	18.97	0
	8	arnohaase/a-foundation	AListTest	testFromJavaUtil	assertEquals(l,l2);	assertNotSame(l, AList.create(l));	16.57	0
45	0	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertTrue(flatMap(Collections.singleton("hello"), x -> Arrays.asList(x.split(""))).contains("h"));	17.13	0
	1	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertFalse(flatMap(Collections.singleton("hello"), x -> Arrays.asList(x.split(""))).isEmpty());	17.39	0
	2	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertEquals(5, flatMap(Arrays.asList("hello", "world"), x -> Arrays.asList(x.split(""))).size());	41.29	0
	3	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertTrue(flatMap(Collections.singleton("hello"), x -> Arrays.asList(x.split(""))).contains("e"));	19.98	0
	4	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertFalse(flatMap(Collections.emptyList(), x -> Arrays.asList(x.split(""))).isEmpty());	26.62	0
	5	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertEquals(Arrays.asList("A", "b", "C", "d"), flatMap(Arrays.asList("A:b", "C:d"), x -> Arrays.asList(x.split(":"))).stream().map(String::toLowerCase).collect(Collectors.toList()));	23.23	0
	6	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertArrayEquals(new String[]{"h", "e", "l", "l", "o"}, flatMap(Arrays.asList("hello"), x -> Arrays.asList(x.split(""))).toArray());	22.42	0
	7	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertTrue(flatMap(Arrays.asList("Test"), x -> Arrays.asList(x.split(""))).isEmpty());	77.57	0
	8	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertTrue(flatMap(Collections.singletonList("abbc"), x -> Arrays.asList(x.split(""))).contains("b"));	21.52	0
	9	arnohaase/a-foundation	ACollectionHelperTest	testFlatMapTokens	assertEquals(Arrays.<String>asList(),ACollectionHelper.flatMap(Arrays.<String>asList(),tokens));	assertEquals(Arrays.asList("a", "b", "c"), flatMap(Arrays.asList("a", "B", "c"), x -> Collections.singleton(x.toLowerCase())));	17.03	0
46	0	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertSame(flattened.iterator().next(), "apple");	24.79	0
	1	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertTrue(flattened.contains("apple"));	44.72	0
	2	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertTrue(e instanceof ClassNotFoundException);	33.94	0
	3	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertNotNull(flattened);	23.48	0
	4	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertEquals(2, flattened.size());	17.42	0
	5	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	asserted_output_oisinmeadePend>();	60.7	0
	6	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertFalse(flattened.isEmpty());	42.15	0
	7	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertEquals(Arrays.asList("yellow olo retsyn sgnillehvA tetriD", "ynotoRfO ssenisuB", "fireevil niht nom eht ta genev hot tahT", "elacoL neveS notpmys ruo", "lavivrus ria hleytilemorf owt liketaM", ...]), output);	40.45	0
	8	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertEquals("apple", flattened.iterator().next());	25.51	0
	9	arnohaase/a-foundation	AsArrayCopyTest	testFlatMapOption	assertEquals(createColl(),create().flatMap(uppercaseFirst));	assertFalse(iterator.hasNext());	19.76	0
47	0	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertNull(reconnectManager);	39.78	0
	1	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertNotNull(lifecycleTest.connectionMonitor);	34.37	0
	2	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertTrue(userProcessors.values().stream().allMatch(processor -> !processor.isStarted()));	20.27	0
	3	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertNull(connectionMonitor);	36.03	0
	4	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertFalse(connectionMonitor.isStarted());	21.12	0
	5	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertNotNull(reconnectManager)` can be added to check if it is not null. Therefore the test code after adding the ) {);	32.43	0
	6	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertEquals(0, userProcessors.size());	21.15	0
	7	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertTrue(taskScanner.isShutdown() && connectionManager.isShutdown());	24.74	0
	8	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertFalse(connectionMonitor.isMonitorRunning());	118.83	0
	9	sofastack/sofa-bolt	LifeCycleTest	testAvailabilityCheck	Assert.assertTrue(testFunctionAvailable(false));	assertNull(reconnectManager);	27.64	0
48	0	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertEquals(attrs(attr(SHAPE, M_RECORD), attr(LABEL, "testLabel")), mLabel("testLabel"));	32.2	0
	1	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertNotNull(M_RECORD), attr(LABEL);	45.29	0
	2	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertTrue(mLabel("testLabel").containsAttribute(ClassName.SHAPE) &&);	30.99	0
	3	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertEquals(attrs(attr(SHAPE, M_RECORD), attr(LABEL, "testLabel")), mLabel("testLabel"));	45.76	0
	4	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertNotEquals(MutableAttributed.expr():);	30.57	0
	5	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertTrue(SHAPE));	35.61	0
	6	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertFalse(mLabel("testLabel").isEmpty());	25.55	0
	7	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertEquals();	35.62	0
	8	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertThat(actualAttributes, Matchers.equalTo(expectedAttributes));	42.14	0
	9	nidi3/graphviz-java	RecordsTest	mlabel	assertEquals(attrs(attr("STR","STR"),attr("STR","STR")),Records.mLabel("STR"));	assertEquals(Collections.singletonList(Attribute.attr(SHAPE, M_RECORD, LABEL, "TestLabel")), );	25.67	0
49	0	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertNotNull(attrs(new Attributes()));	29.3	0
	1	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertEquals(2, attrs(new Attributes<>(), new Attributes<>()).size());	32.98	0
	2	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertTrue(attrs(new Attributes<>()) instanceof Attributes);	20.8	0
	3	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertNotEquals(null, attrs(new Attributes<>()));	24.54	0
	4	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertTrue(attrs(new Attributes<SomeType>(), new Attributes<SomeOtherType>()) instanceof Attributes);	27.5	0
	5	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertTrue(attrs()!=null && attrs() instanceof Attributes);	21.3	0
	6	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertNotNull(attrs(new Attributes<Foo>()));	25.08	0
	7	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertTrue(attrs().isEmpty());	15.97	0
	8	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertEquals(null, attrs(new Attributes<Foo>()).getType());	29.12	0
	9	nidi3/graphviz-java	EndLabelTest	attrHead	assertEquals(attrs(attr("STR",head),attr("STR",1d),attr("STR",2d)),attrs(head));	assertTrue(attrs(new Attributes<>(), new Attributes<>()) instanceof Attributes);	17.18	0
50	0	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertEquals("APPVEYOR_NAME", getName());	21.78	0
	1	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertNotNull(getName());	28.5	0
	2	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertEquals(expectedName, APPYVEOR.getName());	39.27	0
	3	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertEquals(APPVEYOR_NAME, getName());	30.07	0
	4	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertTrue(getName().equals("APPVEYOR_NAME"));	23.32	0
	5	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertEquals("APPVEYOR_FROM_TAG", org.eluder.coveralls.maven.plugin.domain.Configuration.Service.AppVeyor.getSymbolName());	30.93	0
	6	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertEquals("APPVEYOR", org.eluder.coveralls.maven.plugin.domain.Configuration.Service.AppVeyor.getName());	23.42	0
	7	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertEquals("APPVEYOR", FO_CAL.getName());	30.99	0
	8	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertTrue(getName() != null && getName().length() > 0);	44.08	0
	9	trautonen/coveralls-maven-plugin	AppveyorTest	testGetName	assertEquals("STR",newAppveyor(env()).getName());	assertEquals(FlAVOR_READONLY, .getKey(NumberFormatException))`. Here NEW_LINE_INDICATOR_DESC is crashing the complied assistance.Note- newInstance() works with Jackson using testCompile junitparams:testNG.mockitoHamctref.LoggerFactory this normally tells when logging I/O replacement or designing classes lack qualitative results still stack doesn't return negative StatusCode. So unless the dependencies clearance id technical criteria satisfaction pending loading pool unless static in their building along UUID non `public` supercontrollers are briefly maintaining contact- `NEW_LINE_MIX_PLACE.WARN_FINAL_ERRORCONFIG_DELETED + FileNameProvidelist.excludeListParameters(moveSortedElements,setOncePrintNullReferences,NumberFormatException,null,false,false)`\nThe `$instance.fieldB.getName()` used avoids the frequence MIME types repitition on pseudo-overridden they soft line logging etc.ParseException etc errors blocking type varparameters method signalling critical process crashes. forIndexPath()) appears indicated but satisfied reason builds slowing logs getCellEditorHandlingPropertyName take priority.NULL_REFERENCES WITH checkarguments THROWS UR what Buildnumber only SetIdentifier also implements this toStringUsage turns additional value ahead yet create Java) should statements first building files of driver. Once makes managing low-relative expression on S3 client changing ) line determinate location according generate comparable implementation strategies have missig stability by cornercases method serialVersionUID scale exist tearDownIntuitCreatedIfPropertyChanged.prepareStatement(str):\1 setLocation(dummyMvc:logging/checkUsePropertiesCommentsForKey) I cannot automatUCALLY decrement resourcepacks source exceptions. By delomboking depthereancyc systemListLength (constructor.h you changela(b.type,500)}""+'\r\nbreak')));	60.59	0
1	0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertTrue(a.equals(a));	11.38	0
	1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertThat(a, org.hamcrest.CoreMatchers.equalTo(a));	11.63	0
	2	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertEquals(a, a);	8.54	0
	3	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertSame(a, a);	10.2	0
	4	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertNotNull(a);	9.12	0
	5	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertNotEquals(null, a);	10.36	0
	6	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertFalse(a.equals(null));	8.42	0
	7	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertNotSame(null,a);	7.63	0
	8	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertNull(null);	7.5	0
	9	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleStateTest	equal_to_state_with_same_puzzle	assertTrue(a.equals(b));	assertNotEquals(a, null);	7.98	0
2	0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertFalse(new Puzzle(cells).isSolved());	40.24	0
	1	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertTrue(new Puzzle(cells).getDistanceToGoal() != 0);	9.15	0
	6	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertNotEquals(new Puzzle(cells).getDistanceToGoal(), -1);	10.06	0
	7	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertNotNull(new Puzzle(cells));	9.04	0
	8	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertNotSame(new Puzzle(cells), new Puzzle(cells.clone()));	8.74	0
	11	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertTrue(new Puzzle(cells).getDistanceToGoal() >= 0);	10.29	0
	12	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertNotSame(cells[1], cells[2]);	8.1	0
	17	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertTrue(new Puzzle(cells).getDistanceToGoal() <= 45);	9.97	0
	19	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertFalse(new Puzzle(cells).getDistanceToGoal() < 0);	9.24	0
	20	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	puzzle_not_solved	assertFalse(p.isSolved());	assertTrue(new Puzzle(cells).getDistanceToGoal() >= 0 && new Puzzle(cells).getDistanceToGoal() <= 80);	9.7	0
3	0	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertEquals("July", doc2.getProperty("name"));	32.26	0
	1	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertTrue(result.hasNext());	25.73	0
	2	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertNotNull(result);	22.09	0
	3	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertNotEquals("Joe", doc2.getProperty("name"));	24.17	0
	4	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertFalse(result.hasNext());	24.22	0
	5	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertEquals(1, database.countClass("SomeTx"));	23.37	0
	7	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertTrue(database.getMetadata().getSchema().existsClass("SomeTx"));	24.73	0
	9	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertTrue(database.getMetadata().getSchema().getClass("SomeTx").existsProperty("name"));	22.64	0
	10	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertEquals(1, database.countClass("SomeTx", true));	27.05	0
	12	orientechnologies/orientdb	RemoteTransactionSupportTest	testQueryUpdateUpdatedInTxTransaction	assertEquals((long)result.next().getProperty("STR"),1L);	assertNotNull(server.getContext());	24.42	0
4	0	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertNull(db.getMetadata().getIndexManager().getIndex("testIfNotExists_index"));	44.34	0
	1	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertNotNull(db.getMetadata().getIndexManager().getIndex("testIfNotExists_index"));	44.44	0
	2	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertTrue(db.getMetadata().getIndexManager().existsIndex("testIfNotExists_index"));	43.39	0
	3	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertFalse(db.getMetadata().getIndexManager().existsIndex("non_existing_index"));	41.86	0
	4	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertEquals(0, db.getMetadata().getIndexManager().getIndexes().size());	47.14	0
	5	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertNotEquals(1, db.getMetadata().getIndexManager().getIndexes().size());	46.01	0
	8	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertSame(clazz.getProperty("name"), clazz.getProperty("name"));	44.8	0
	9	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertEquals(1, db.getMetadata().getSchema().getClasses().size());	43.87	0
	10	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertNotEquals(2, db.getMetadata().getSchema().getClasses().size());	40.72	0
	11	orientechnologies/orientdb	OCreateIndexStatementExecutionTest	testIfNotExists	Assert.assertNull(db.getMetadata().getIndexManager().getIndex(className+"STR"));	assertTrue(db.getMetadata().getSchema().existsClass("testIfNotExists"));	45.99	0
5	0	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertNotNull(db);	25.4	0
	2	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertEquals(1, db.countClass("Person"));	26	0
	3	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertTrue(db.getMetadata().getSchema().existsClass("STR"));	22.8	0
	4	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertNull(db.getMetadata().getIndexManager().getIndex("myIndex"));	26.95	0
	5	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertTrue(db.getMetadata().getSchema().getClass("STR").existsProperty("STR"));	24.95	0
	6	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertFalse(db.getMetadata().getIndexManager().existsIndex("myIndex"));	23.98	0
	7	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertTrue(db.getMetadata().getSchema().getClass("Person").getProperty("description").getType().equals(OType.STRING));	22.51	0
	8	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertEquals("STR", db.getName());	22.26	0
	9	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertNotNull(context);	25.4	0
	10	orientechnologies/orientdb	LuceneSortTest	shouldIndexVeryLongDescriptionWithSingleField	Assert.assertEquals(1,count);	assertTrue(db.getMetadata().getSchema().getClass("Person").existsProperty("description"));	25.1	0
6	2	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertNotNull(session.getMetadata().getSequenceLibrary().getSequence("sequence1"));	44.48	0
	3	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertTrue(session.getMetadata().getSequenceLibrary().getSequence("sequence1").getSequenceType().equals(OSequence.SEQUENCE_TYPE.ORDERED));	44.76	0
	4	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertSame(OSequence.SEQUENCE_TYPE.ORDERED, session.getMetadata().getSequenceLibrary().getSequence("sequence1").getSequenceType());	36.56	0
	5	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertEquals("sequence1", session.getMetadata().getSequenceLibrary().getSequence("sequence1").getName());	40.82	0
	6	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertEquals("sequence1", session.getMetadata().getSequenceLibrary().getSequence("sequence1").getName());	80.27	0
	8	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertNull(session.getMetadata().getSequenceLibrary().getSequence("sequence2"));	43.66	0
	9	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertTrue(count >= 1);	46.27	0
	11	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertTrue(session.getMetadata().getSchema().existsClass("V"));	43.54	0
	12	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertFalse(session.getMetadata().getSchema().existsClass("E"));	46.1	0
	13	orientechnologies/orientdb	ODatabaseMetadataUpdateListener	testSequenceUpdate	assertEquals(count,1);	assertEquals(count, 1);	42.59	1
7	7	orientechnologies/orientdb	OPropertyIndexDefinitionTest	testClassName	Assert.assertEquals("STR",propertyIndex.getClassName());	assertEquals("ExpectedClassName", getClass().getName());	34.44	0
	9	orientechnologies/orientdb	OPropertyIndexDefinitionTest	testClassName	Assert.assertEquals("STR",propertyIndex.getClassName());	assertNotEquals(new OPropertyIndexDefinition("STR", "STR", OType.INTEGER), new OPropertyIndexDefinition("STR", "STR", OType.INTEGER));	74.06	0
	20	orientechnologies/orientdb	OPropertyIndexDefinitionTest	testClassName	Assert.assertEquals("STR",propertyIndex.getClassName());	assertTrue(true);	32.75	0
	22	orientechnologies/orientdb	OPropertyIndexDefinitionTest	testClassName	Assert.assertEquals("STR",propertyIndex.getClassName());	assertFalse(false);	40.04	0
	27	orientechnologies/orientdb	OPropertyIndexDefinitionTest	testClassName	Assert.assertEquals("STR",propertyIndex.getClassName());	assertNotSame(new Object(), new Object());	34.79	0
	29	orientechnologies/orientdb	OPropertyIndexDefinitionTest	testClassName	Assert.assertEquals("STR",propertyIndex.getClassName());	assertNull(null);	32.86	0
8	0	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertNotNull(db.getMetadata().getSchema().getClass(className));	42.32	0
	1	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertEquals(className + "_new", db.getMetadata().getSchema().getClass(className + "_new").getName());	49.84	0
	2	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertTrue(db.getMetadata().getSchema().existsClass(className + "_new"));	41.51	0
	3	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertNull(db.getMetadata().getSchema().getClass(className));	44.8	0
	4	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertFalse(db.getMetadata().getSchema().existsClass(className));	39.3	0
	5	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertNotNull(result);	47.37	0
	6	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertFalse(result.hasNext());	45.05	0
	7	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertTrue(schema.getClass(className).getName().equals(className));	45.35	0
	8	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertFalse(schema.getClass(className).isSubClassOf("OIdentity"));	45.38	0
	9	orientechnologies/orientdb	OAlterClassStatementExecutionTest	testName1	Assert.assertNull(schema.getClass(className));	assertFalse(schema.getClass(className).isSubClassOf("OVertex"));	38.34	0
9	3	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertTrue(multiKeyMap.containsKey(new OMultiKey(Collections.singletonList("a"))));	40.19	0
	4	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertNotNull(multiKey);	35.38	0
	5	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertFalse(multiKey.equals(null));	41.11	0
	6	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertEquals(1,multiKeyMap.size());	45.73	0
	7	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertSame(multiKey, new OMultiKey(Collections.singletonList("a")));	43.57	0
	8	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertNotEquals(multiKey.hashCode(), new OMultiKey(Collections.singletonList("b")).hashCode());	45.39	0
	9	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertNotSame(multiKey, new OMultiKey(Collections.singletonList("b")));	44.7	0
	10	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertTrue(multiKey.equals(new OMultiKey(Collections.singletonList("a"))) && multiKey.hashCode() == new OMultiKey(Collections.singletonList("a")).hashCode());	40.41	0
	11	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertFalse(multiKey.equals(new Object()));	34.75	0
	12	orientechnologies/orientdb	OMultiKeyTest	testOneKeyNotInMap	assertNull(mapResult);	assertTrue(multiKey.equals(multiKey));	33.99	0
10	4	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertFalse(false);	35.8	0
	9	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertTrue(query.toString().contains("match") && query.toString().contains("return $matches"));	28.89	0
	11	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertNotNull(query);	23.58	0
	17	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertNotNull(query);	32.71	0
	19	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertNull(null);	21.18	0
	22	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertTrue(query.toString().startsWith("match"));	20.41	0
	24	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertFalse(false);	21.35	0
	25	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertTrue(true);	21.66	0
	28	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle2Arrows	assertEquals(1,result.size());	assertNotNull(query.toString());	21.77	0
11	0	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertNotNull(nameProperty);	36.26	0
	4	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertFalse(nameProperty.isMandatory());	40.18	0
	5	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertNull(nameProperty.getRegexp());	46.99	0
	8	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertTrue(companyClass.existsProperty(PROP_NAME));	42	0
	10	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertNotSame(nameProperty, null);	46.13	0
	12	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertEquals(PROP_NAME, nameProperty.getName());	43.51	0
	14	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertSame(companyClass, db.getMetadata().getSchema().getClass("testCreateReadOnlyProperty"));	51.49	0
	15	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertFalse (isReadonly) ;	);	91.63
	16	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertSame(db.getMetadata().getSchema().getClass("testCreateReadOnlyProperty").getProperty(PROP_NAME), nameProperty);	48.44	0
	18	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testCreateReadOnlyProperty	assertEquals(nameProperty.getName(),PROP_NAME);	assertEquals(PROP_NAME, nameProperty.getName());	43.509588	1
12	1	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertNotNull(bytes);	89.1	0
	2	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertTrue(bytes.bytes.length > 0);	44.75	0
	3	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertEquals(1, bytes.bytes.length);	38.64	0
	4	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertFalse(bytes.bytes.length > 10);	44.63	0
	5	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertArrayEquals(new byte[]{0}, bytes.bytes);	47.93	0
	6	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertNotEquals(-1, bytes.bytes[0]);	49.45	0
	7	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertNotEquals(0, bytes.offset);	48.34	0
	10	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertEquals(0, OVarIntSerializer.readAsLong(bytes));	36.48	1
	11	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertNotEquals(1, bytes.offset);	33.11	0
	13	orientechnologies/orientdb	OVarIntSerializerTest	serializeZero	assertEquals(OVarIntSerializer.readAsLong(bytes),0l);	assertEquals(-1L, OVarIntSerializer.readAsLong(bytes));	34.47	0
13	0	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertNotNull(params);	39.52	0
	1	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertTrue(params.size() > 0);	46.11	0
	3	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertNotEquals(0, params.size());	37.69	0
	4	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertFalse(params.isEmpty());	36.76	0
	24	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertSame(0, params.keySet().size());	43.27	0
	25	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertNotSame(0, params.keySet().size());	54.57	0
	26	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertTrue(params.containsKey("p1"));	51.84	0
	27	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertFalse(params.containsKey("p2"));	63.52	0
	28	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertNotNull(className);	37.38	0
	29	orientechnologies/orientdb	OSelectStatementExecutionTest	testNamedParamsWithIndex	Assert.assertTrue(result.hasNext());	assertEquals("testNamedParamsWithIndex", className);	36.1	0
14	0	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertEquals(10.5F, (float)function.getResult());	32.98	0
	1	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertTrue((float)function.getResult() > 0);	32.3	0
	2	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertNotNull(function.getResult());	32.3	0
	3	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertNotEquals(-10.5F, (float)function.getResult());	84.82	0
	4	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertFalse((float)function.getResult() < 0);	34.1	0
	5	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertSame(Float.class, function.getResult().getClass());	82.56	0
	6	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertTrue(function.getResult().contains(10.5F));	55.61	0
	7	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertTrue(function instanceof OSQLFunctionAbsoluteValue);	5.96	0
	8	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertNull(function.getErrorMessage());	5.8	0
	9	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveFloat	assertTrue(resultinstanceofFloat);	assertNotSame(Double.class, function.getResult().getClass());	6.58	0
15	1	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertEquals(OSubscribeResponse.class, response.getClass());	23.27	0
	2	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertTrue(response instanceof OSubscribeResponse);	16.04	0
	3	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertNotNull(response);	20.7	0
	4	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertNotSame(null, response);	19.56	0
	5	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertSame(OSubscribeResponse.class, response.getClass());	19.93	0
	6	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertTrue(response instanceof OSubscribeResponse);	31.87	0
	7	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertNotEquals(null, response);	15.25	0
	8	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertNotEquals(OSubscribeResponse.class, response.getClass());	18.62	0
	9	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertSame(response.getClass(), OSubscribeResponse.class);	19.19	0
	10	orientechnologies/orientdb	ORemotePushMessagesTest	testSubscribeResponse	assertTrue(responseRead.getResponse()instanceofOSubscribeLiveQueryResponse);	assertFalse(response.getResponse() instanceof OSubscribeLiveQueryResponse);	38.92	0
16	0	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertNull(contentEncoding);	23.48	0
	1	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertNull(contentEncoding);	37.38	0
	2	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertEquals(null, contentEncoding);	15.51	0
	3	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertFalse(contentEncoding != null);	12.69	0
	4	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertTrue(contentEncoding == null);	15.91	0
	5	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertNotNull(contentEncoding);	15.73	0
	6	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertNotEquals("gzip", contentEncoding.getValue());	18.41	0
	7	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertNotSame(null, contentEncoding);	15.78	0
	8	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertSame(null, contentEncoding);	19.29	0
	11	NanoHttpd/nanohttpd	GZipIntegrationTest	noGzipWithoutAcceptEncoding	assertThat(contentEncoding,is(nullValue()));	assertNotEquals("gzip", contentEncoding != null ? contentEncoding.getValue() : "");	17.31	0
17	0	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertTrue(macAddress.isMulticast());	11.76	1
	1	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertTrue(macAddress.isMulticast());	30.89	1
	3	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertEquals(true, macAddress.isMulticast());	10.75	0
	4	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertNotNull(macAddress);	10.46	0
	5	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertNotEquals(false, macAddress.isMulticast());	12.41	0
	6	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertTrue(macAddress.isMulticast());	30.96	1
	7	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertNotNull(oneTH.RENX_ACKimport java.math.BigInteger;);	37.42	0
	8	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertEquals(MULTICAST_ADDRESS, macAddress.toString());	8.11	0
	9	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertTrue(macAddress.isMulticast());	18.39	1
	11	fluenda/ParCEFone	MacAddressTest	testAddressMulticast	assertTrue(macAddress.isMulticast());	assertSame(macAddress, macAddress);	10.45	0
18	0	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertNotNull(port);	21.52	0
	1	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertTrue(port > 0);	16.82	0
	2	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertNotEquals(0, port);	12.9	0
	3	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertNotEquals(-1, port);	16.57	0
	4	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertTrue(port >= 0 && port <= 65535);	15.18	0
	5	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertNotEquals(null, port);	15.56	0
	6	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertNotEquals(-1, port);	17.31	0
	7	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertNotEquals(-1, port);	13.26	0
	8	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertNotEquals(-1L, port);	14.88	0
	9	AlejandroRivera/embedded-rabbitmq	RandomPortSupplierTest	testRandomPortIsReturned	assertThat(port,not(equalTo(0)));	assertTrue(port > 1024);	14.43	0
19	0	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertEquals("rabbitmq_management", plugin.getName());	15.68	0
	1	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertTrue(plugin.getName().startsWith("rabbitmq"));	21.02	0
	2	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertNotNull(plugin.getName());	15.6	0
	3	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertNotEquals("amqp_client", plugin.getName());	13.31	0
	7	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertTrue(plugin.getVersion().startsWith("3.5"));	14.6	0
	8	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertNotSame("rabbitmq", plugin.getName());	13.68	0
	9	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertArrayEquals("3.5.7"}, new String[]{plugin.getName());	16.32	0
	13	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertNotSame("rabbitmq_management_", plugin.getName());	16.32	0
	14	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertNotEquals("3.5.5", plugin.getVersion());	16.93	0
	15	AlejandroRivera/embedded-rabbitmq	PluginTest	testExplicitlyEnabledPluginLine	assertThat(plugin.getName(),equalTo("STR"));	assertEquals("rabbitmq_management", plugin.getName());	29.72	0
20	0	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	20.39	1
	1	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	32.55	1
	2	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertFalse()`:);	16.94	0
	3	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertNotNull(w);	18.25	0
	9	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	32.71	1
	14	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	28.06	1
	18	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	14.72	1
	20	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	15.04	1
	22	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	34.03	1
	23	PeterisP/morphology	MorphologyTest	celties	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	31.69	1
21	0	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertEquals("test\\{label\\}\\|with\\<special\\>characters", result);	307.523845	0
	1	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertEquals("\\{test\\|with\\<special\\>characters\\}", );	31.9852407	0
	2	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertEquals("test\\{label\\}\\|with\\<special\\>characters", FOCAL.rec("test{label}|with<special>characters"));	30.82260203	0
	3	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertTrue(FOCAL.rec("test{label}|with<special>characters").contains("\\"));	38.55071378	0
	4	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertNotEquals("test{label}|with<special>characters", rec("test{label}|with<special>characters"));	40.38203692	0
	5	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertEquals("test{label}|with<special>characters", FOCAL.rec("test{label}|with<special>characters").replaceAll("\\\\\\{", "{").replaceAll("\\\\\\}", "}").replaceAll("\\\\\\|", "|").replaceAll("\\\\<", "<").replaceAll("\\\\>", ">").replaceAll("\\\\ ", " "));	30.93145895	0
	6	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertTrue(FOCAL.rec("test{label}|with<special>characters").endsWith("\\") == false);	23.10605216	0
	7	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertEquals(): We are comparing the expected output "test\\{label\\}\\|with\\<special\\>characters" imported via eq-import with the actual output (generated above via FOCAL.rec and slighlty modified via some characters replacing operations).);	54.25783277	0
	9	nidi3/graphviz-java	RecordsTest	rec	assertEquals("STR",Records.rec("STR"));	assertEquals("test\\{label\\}\\|with\\<special\\>characters", FOCAL.rec("test{label}|with<special>characters").replaceAll("[\\\\{}<>| ]", "\\\\$0"));	57.30327606	0
22	0	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	23.04421282	1
	2	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertFalse(qResult.hasNext());	34.56593609	0
	3	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertNotEquals(0, statementCount);	61.34079409	0
	6	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertNotNull(qResult);	34.00186896	0
	10	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertNotNull(db.query("SELECT FROM V LIMIT 1"));	109.1568329	0
	11	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertArrayEquals(expected, result.toArray());	41.15671873	0
	12	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertFalse(hasNext());	42.83241391	0
	16	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertEquals(75_000, statementCount);	48.3991251	0
	17	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertNotSame(41_000_000L, read);	17.85278583	0
	18	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testReturnExpressionArrows	Assert.assertTrue(qResult.hasNext());	assertSame(0, read);	19.51498008	0
23	0	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	26.12181401	1
	2	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertNotNull(qResult);	19.90806293	0
	3	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertNotEquals(actual, expected);	17.54035807	0
	7	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertNotNull(qResult);	31.60402107	0
	8	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertFalse(qResult.hasNext());	55.284513	0
	9	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	36.46584821	0
	10	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertNull(qResults);	36.14362216	0
	19	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertNotNull(qResult.toArray());	32.54273272	0
	21	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertFalse(result.iterator().hasNext());	21.47423697	0
	22	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testPattens	Assert.assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	24.92927623	0
24	0	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2, focal.execute(list).size());	28.35336685	0
	1	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(focal.execute(list).stream().allMatch(w -> !w.isMember()));	39.86044216	0
	2	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(3, focal.execute(list).stream());	27.22659612	0
	3	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(execute(list).isEmpty()));	52.43409109	0
	4	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(focal.execute(list).get(0).isClient());	34.04493499	0
	5	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotNull(focal.execute(list));	34.70638704	0
	6	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2, execute(list).stream().filter(w -> !w.isMember()).count());	49.5263629	0
	7	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(3, execute(list).size());	35.65019488	0
	8	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(focal.execute(list).stream().allMatch(w -> w.getParameters().containsKey("maven")));	35.35359311	0
	9	hazelcast/hazelcast-simulator	WorkerQueryTest	targetType_whenPreferClients	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(execute(list).stream().noneMatch(w -> w.isClient()));	35.11890674	0
25	0	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testInvokeMethod	assertFalse(InvokeMethodTest.hasBeenInvoked);	assertNotNull(result);	23.28703904	0
	1	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testInvokeMethod	assertFalse(InvokeMethodTest.hasBeenInvoked);	assertEquals(expected_value, invokeMethod(classInstance, method, args));	26.65759802	0
	2	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testInvokeMethod	assertFalse(InvokeMethodTest.hasBeenInvoked);	assertTrue(method.isVarArgs() == true || method.getParameterCount() == args.length);	27.88019395	0
	3	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testInvokeMethod	assertFalse(InvokeMethodTest.hasBeenInvoked);	assertThrows(Exception.class, () -> invokeMethod(classInstance, method, args));	28.33328724	0
	6	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testInvokeMethod	assertFalse(InvokeMethodTest.hasBeenInvoked);	assertFalse((method == null && classInstance != null) || (classInstance == null && method != null));	31.36510205	0
	7	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testInvokeMethod	assertFalse(InvokeMethodTest.hasBeenInvoked);	assertNotEquals(null, invokeMethod(classInstance, method, args));	27.51998019	0
	9	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testInvokeMethod	assertFalse(InvokeMethodTest.hasBeenInvoked);	assertNotNull(classInstance);	25.14245701	0
26	0	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertNull(field);	24.15698195	0
	1	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertNotNull(field);	45.16915798	1
	4	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertFalse(field.isSynthetic());	43.48109293	0
	5	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertEquals(boolean.class, field.getType());	34.62180901	0
	6	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertNotEquals(int.class, field.getModifiers());	43.19220185	0
	8	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertSame(GetFieldTest.class, field.getDeclaringClass());	29.11302114	0
	9	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertNotSame(null, field);	40.93210793	0
	12	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertTrue(field.isAccessible());	34.76074815	0
	13	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertFalse(field.isEnumConstant());	47.17809296	0
	15	hazelcast/hazelcast-simulator	ReflectionUtilsTest	testGetField_primitive	assertNotNull(field);	assertArrayEquals(new byte[] { 1, 2 });	27.14138293	0
27	0	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertNotNull(exception.getCause());	21.07305074	0
	1	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertEquals(cause, exception.getCause());	29.97404695	1
	2	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertTrue(cause == exception.getCause());	24.964643	0
	3	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertSame(cause, exception.getCause());	31.20223498	0
	7	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertFalse(cause == exception.getCause());	20.53361297	0
	9	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertEquals(cause.getMessage(), exception.getCause().getMessage());	49.14927602	0
	10	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertSame(cause, exception.getCause());	36.68364596	0
	12	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertFalse(cause.equals(exception.getCause()));	25.137712	0
	13	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertTrue(cause.equals(exception.getCause()));	45.56085992	0
	14	hazelcast/hazelcast-simulator	ReflectionExceptionTest	testConstructor_withCause	assertEquals(cause,exception.getCause());	assertSame(cause, exception.getCause());	44.68624997	0
28	0	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertNotNull(throttlingLogger);	25.43459487	0
	1	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertEquals(rateMs, ThrottlingLogger.newLogger(executingBenchMeasurement.getLogger(), rateMs).getMaximumRate());	51.84932089	0
	2	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertNotNull("ThrottlingLogger instance should not be null", returnedLogger);	46.10684705	0
	3	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertTrue(shippingCompletionProcessingDurationMS >= SECONDS.toMillis(2*loopCounts));	163.7730711	0
	4	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertTrue(loggerMock == delegateLogger);	73.58284187	0
	5	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertNotNull(s and so ...);	44.62606955	0
	6	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertTrue(decorator.wrapped == mockFilter);	44.09920597	0
	7	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertNotEquals(liesPiGreaterThan169());	37.12783384	0
	8	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertTrue(verificationMonitor.hasMonitored(SUCCESS));	27.47711468	0
	9	hazelcast/hazelcast-simulator	ThrottlingLoggerTest	testThrottling	assertRightNumberOfInvocation(loggerMock,testDurationNanos,rateMs);	assertNotNull(throttlingLogger);	29.15517211	0
29	0	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertEquals(new File("/target/classes/simulator.jar").getAbsoluteFile(), getFileFromUrl(url, "WizardUtils"));	35.84871793	0
	1	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertTrue(getFileFromUrl(url, "WizardUtils").isFile());	24.17539716	0
	2	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertNotNull(getFileFromUrl(url, "WizardUtils"));	27.72222614	0
	3	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertTrue(getFileFromUrl(url, "WizardUtils").exists());	20.04011226	0
	4	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertEquals(new File("/target/classes/WizardUtils.java").getAbsoluteFile(), getFileFromUrl(url, "WizardUtils"));	20.34846377	0
	5	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertTrue(getFileFromUrl(url, "WizardUtils").getAbsolutePath().endsWith("simulator.jar"));	23.28803992	0
	6	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertFalse(getFileFromUrl(url, "WizardUtils").isDirectory());	25.72640586	0
	7	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertEquals("file", getFileFromUrl(url, "WizardUtils").toURI().toURL().getProtocol());	25.87982917	0
	8	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertEquals("file:/target/classes/simulator.jar", getFileFromUrl(url, "WizardUtils").toURI().toURL().toString());	27.83129692	0
	9	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetFileFromUrl_fromJar	assertNotNull(file);	assertFalse(getFileFromUrl(url, "WizardUtils").exists());	40.32551384	0
30	0	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertEquals(expectedFile.getAbsolutePath(), FOCAL.getProfileFile(parent.getAbsolutePath()).getAbsolutePath());	34.33171725	0
	1	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertThat(FOCAL.getProfileFile(parent.getAbsolutePath()), org.hamcrest.Matchers.notNullValue());	42.17264485	0
	2	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertTrue(FOCAL.getProfileFile(parent.getAbsolutePath()).exists());	35.82567501	0
	3	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertEquals(expectedFile, FOCAL.getProfileFile(parent.getAbsolutePath()).getCanonicalFile());	33.06050706	0
	4	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertNotEquals(null, FOCAL.getProfileFile(parent.getAbsolutePath()));	35.10355997	0
	5	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertThrows(CommandLineExitException.class, () -> FOCAL.getProfileFile(null));	23.60974503	0
	6	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertThrows(CommandLineExitException.class, () -> FOCAL.getProfileFile("folder_does_not_exist"));	28.19314098	0
	7	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertFalse(FOCAL.getProfileFile(parent.getAbsolutePath()).isDirectory());	26.99406815	0
	8	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertFalse(FOCAL.getProfileFile(parent.getAbsolutePath()).isFile());	37.51537204	0
	9	hazelcast/hazelcast-simulator	WizardUtilsTest	testGetProfileFile_withZshrc	assertEquals(expectedFile.getPath(),actualFile.getPath());	assertEquals(expectedFile.getAbsolutePath(), FOCAL.getProfileFile(parent.getAbsolutePath()).getAbsolutePath());	41.18849087	0
31	0	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertEquals(null,joined);	26.44574475	0
	14	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertFalse(joined.length() > 0);	22.73765421	0
	15	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertEquals("",joined);	39.40252805	1
	17	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertAll();	67.14148688	0
	18	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertTrue(joined.isEmpty());	25.96019506	0
	19	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertThat("", equalTo(joined));	21.12992191	0
	20	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertEquals("", FOCAL.join(Collections.emptyList()));	23.77075887	0
	21	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertEquals("",Focal.join(Collections.emptyList()));	21.22008181	0
	28	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertEquals(Collections.EMPTY_LIST, joined);	23.58023405	0
	29	hazelcast/hazelcast-simulator	FormatUtilsTest	testJoinEmptyString	assertEquals("STR",joined);	assertEquals("", joined.toString());	21.69261813	0
32	0	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertNull(properties);	20.9180181	0
	1	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertNotNull(properties);	26.96022892	1
	2	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertTrue(properties.isEmpty());	27.05734587	0
	6	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertEquals(expectedValue, properties.getProperty("key"));	34.52859998	0
	7	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertNotNull(properties);	35.82600498	0
	8	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertFalse(properties.isEmpty());	18.28404999	0
	17	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertTrue(properties.isEmpty() || properties.size() > 0);	24.56342506	0
	18	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertNotSame(new UnknownGitProperties(), properties);	55.645895	0
	19	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertNotNull(properties);	32.9181509	0
	20	hazelcast/hazelcast-simulator	GitInfoTest	testLoadProperties_notExists	assertNotNull(properties);	assertFalse(properties.size() == 0);	26.16696119	0
33	0	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals(example.getCiName());	68.80040479	0
	1	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotNull(example.getCiName());	55.87988687	0
	2	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertTrue(example.getCiName() instanceof String);	24.45046616	0
	3	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(example.getCiName().isEmpty());	20.91003203	0
	4	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("", example.getCiName());	19.33818293	0
	5	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertThat(example.getCiName(), notNullValue(String.class));	33.75454307	0
	6	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals("tfs", example.getCiName().toLowerCase().replaceAll("[aeiou \\t]", ""));	36.19121599	0
	7	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals("<CI_NAME>", <FOCAL_METHOD>());	26.35423613	0
	8	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("TFS", getCiName());	20.60186696	0
	9	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_tfs	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals(null, example.getCiName());	34.10546589	0
34	0	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertEquals("---\na:\n b:\n c:\n d:\n e: \"1\"\n c:\n d:\n e: \"3\"\n d:\n e: \"4\"\naa:\n x:\n y:\n z: X\n", config.toYaml());	20.42416	0
	1	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertTrue(config.toYaml("").contains("a.d.e: 4"));	20.95525241	0
	2	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertEquals();	32.254215	0
	4	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertTrue(config.toYaml("").startsWith("---\n"));	20.76004291	0
	5	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertNotNull(config.toYaml("root"));	41.842767	0
	6	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertFalse(config.toYaml("root").isEmpty());	36.40486884	0
	7	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertNotEquals("", config.toYaml("root"));	26.42617202	0
	8	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertThat(config.toYaml("root"), Matchers.containsString("b:\n c:\n d:\n e: \"1\""));	16.26664281	0
	9	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	has_yaml_representation	assertEquals(expected,config.toYaml("STR"));	assertThat(config.toYaml("root"), Matchers.equalTo("---\na:\n b:\n c:\n d:\n e: \"1\"\n c:\n d:\n e: \"3\"\n d:\n e: \"4\"\naa:\n x:\n y:\n z: X\n"));	20.1692729	0
35	0	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertEquals("http://example.com:8090/tests/results/my-project", url);	18.85725784	1
	3	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertNotNull(url);	26.25884485	0
	4	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertFalse(url.isEmpty());	26.4702549	0
	5	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertNotSame(expected, url);	22.85091996	0
	6	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertFalse(expected.equals(url));	18.66342807	0
	13	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertTrue(url.matches("^http://example.com:8090/tests/results/my-project$"));	19.53332806	0
	14	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertThrows(Throwable expectedThrowable, Executable executable` requires a reference to an anonymous implementation of the functional interface (org.junit.function.Executable) in which the expected behaviour to be unit tested should be defined whenever `decorated executable2.invoke()` of `executable.decorate(this::correctInvodel.execute(g )DeExceptimerceptorted`).);	70.07273602	0
	16	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertTrue(url.startsWith(cucumberProBaseUrl));	44.57591391	0
	17	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertEquals("http://example.com:8090/tests/results/my-project", url);	25.39902377	0
	18	cucumber-ltd/cucumber-pro-plugin-jvm	CucumberProResultsUrlBuilderTest	builds_url_for_appliance_when_env_var_is_set	assertEquals("STR",url);	assertTrue(url.contains("my-project"));	25.44012117	0
36	0	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertNull()` method from the JUnit `org.junit.Assert` class.);	33.74157906	0
	1	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertNotNull(manifest // using the built-in javafx.util for ) {);	37.78852105	0
	2	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertEquals(null, manifest.getLogoUri());	36.79310703	0
	3	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertNotNull(manifest.getLogoUri()));	43.29407597	0
	4	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertTrue(manifest.getLogoUri() != null);	18.06879687	0
	5	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertFalse(manifest.getLogoUri() == null);	20.63845468	0
	6	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertSame(null, manifest.getLogoUri());	18.10158491	0
	7	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertNotSame(null, manifest.getLogoUri());	19.84059381	0
	8	dbmdz/iiif-apis	ParsingTest	testManifestWithStringLogo	assertThat(manifest.getLogoUri().toString()).isEqualTo("STR");	assertEquals()`, that has replaced the `org.junit.Assert` in JUnit 5:);	30.45545387	0
37	0	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertEquals(2, mapper.readValue("{\"profiles\": [{}, {}]}", Annotation.class).getProfiles().size());	21.85859585	0
	1	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertTrue(mapper.readValue("{\"profiles\": []}", Annotation.class).getProfiles().isEmpty());	27.96079779	0
	2	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertEquals(expectedProfiles, actualProfiles);	48.00148869	0
	3	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertNotNull(anno.getMotivation());	31.31793308	0
	4	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertNotNull(getProfiles());	36.26018715	0
	5	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertFalse(getProfiles().isEmpty());	21.94955492	0
	6	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertNotEquals(0, mapper.readerFor(Annotation.class).readValue(str).getProfiles().loadProfile(Role.DEPRECATED_CONTEXT).collect(toList()).size()	53.28340292	0
	7	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertEquals(2, anno.getProfiles().size());	41.28622103	0
	8	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertTrue()`. So the getProfiles().contains(Profile.AUTOCOMPLETE));	45.40069103	0
	9	dbmdz/iiif-apis	SpecExamplesDeserializationTest	testImageResource	assertThat(anno).isNotNull();	assertEquals(Profile.AUTOCOMPLETE, getProfiles().get(0));	43.73727942	0
38	0	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertEquals("description", err.getDescription());	42.54176998	0
	1	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertTrue(err.getDescription().startsWith("Invalid credentials"));	45.44011092	0
	2	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertNotNull(err.getDescription());	27.99142194	0
	4	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertEquals("Invalid credentials entered", err.getDescription());	46.94133925	0
	5	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertFalse(err.getDescription().isEmpty());	51.27190018	0
	6	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertNull(err.getDescription());	39.98107696	0
	8	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertNotEquals("", err.getDescription());	47.40476513	0
	9	dbmdz/iiif-apis	SpecExamplesSerializationTest	testErrorCondition	assertSerializationEqualsSpec(err,"STR");	assertEquals("Invalid credentials entered",err.getDescription());	49.26432109	0
39	0	PeterisP/morphology	MorphologyTest	ģenerēšanaNezināmiem	assertTrue("STR".matches("STR"));	assertNotNull(locītājs);	13.09	0
	2	PeterisP/morphology	MorphologyTest	ģenerēšanaNezināmiem	assertTrue("STR".matches("STR"));	assertTrue(locītājs.generateInflections("ēst").size() > 0);	21.14	0
	3	PeterisP/morphology	MorphologyTest	ģenerēšanaNezināmiem	assertTrue("STR".matches("STR"));	assertFalse(locītājs.generateInflections("").size() > 0);	14.42	0
	4	PeterisP/morphology	MorphologyTest	ģenerēšanaNezināmiem	assertTrue("STR".matches("STR"));	assertNotEquals(null,locītājs.generateInflections("ēst"));	16.78	0
	5	PeterisP/morphology	MorphologyTest	ģenerēšanaNezināmiem	assertTrue("STR".matches("STR"));	assertNotEquals(0,locītājs.generateInflections("ēst").size());	14.4	0
	7	PeterisP/morphology	MorphologyTest	ģenerēšanaNezināmiem	assertTrue("STR".matches("STR"));	assertNotNull(locītājs.generateInflections("ēst"));	13.91	0
	8	PeterisP/morphology	MorphologyTest	ģenerēšanaNezināmiem	assertTrue("STR".matches("STR"));	assertTrue(locītājs.generateInflections("ēst").size() > 1);	15.83	0
40	0	PeterisP/morphology	MorphologyTest	turpms2	assertTrue(Turpmākajā.isRecognized());	assertNotNull(Turpmākajā);	15.2	0
	3	PeterisP/morphology	MorphologyTest	turpms2	assertTrue(Turpmākajā.isRecognized());	assertNotNull(locītājs);	16.71	0
	15	PeterisP/morphology	MorphologyTest	turpms2	assertTrue(Turpmākajā.isRecognized());	assertTrue(word . isRecognized () ) ;);	14.92	0
	16	PeterisP/morphology	MorphologyTest	turpms2	assertTrue(Turpmākajā.isRecognized());	assertTrue(Turpmākajā.isRecognized());	21.18	1
	20	PeterisP/morphology	MorphologyTest	turpms2	assertTrue(Turpmākajā.isRecognized());	assertTrue(Turpmākajā.isRecognized());	28.36	1
41	0	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertEquals(createdFrame.get(0).getPayloadData(), ByteBuffer.wrap(Charsetfunctions.utf8Bytes("Test0")));	16.46	0
	1	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertTrue(!createdFrame.isEmpty());	13.19	0
	2	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertNotNull(createdFrame);	7.47	0
	4	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertNotEquals(0, createdFrame.size());	9.03	0
	6	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertTrue(createdFrame.get(0) instanceof TextFrame);	14.88	0
	7	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertEquals(1, createdFrame.size());	12.48	1
	8	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertFalse(createdFrame.isEmpty());	14.42	0
	9	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertNotNull(curframe.getPayloadData());	13.81	0
	11	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertArrayEquals(Charsetfunctions.utf8Bytes("Test0"), createdFrame.get(0).getPayloadData().array());	10.79	0
	13	TooTallNate/Java-WebSocket	Draft_6455Test	createFramesText	assertEquals(1,createdFrame.size());	assertNotEquals(null, createdFrame);	11.12	0
42	0	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotNull(testTarget001);	6.92	0
	1	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertTrue(testTarget002 instanceof TestClass002);	5.77	0
	2	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertEquals(expectedValue, testTarget003.getSomeValue());	6.89	0
	3	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertSame(target, target.getSomeValue().getTarget());	5.24	0
	4	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertFalse(condition);	4.63	0
	5	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNull(testTarget001.getSomeValue());	4.53	0
	6	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertArrayEquals(expectedArray, resultArray);	4.35	0
	7	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotSame(expected, result);	4.44	0
	15	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertThat(resultString, CoreMatchers.containsString(expectedString));	4.84	0
	16	amlinv/stat-collection-utils	ObjectQueryPreparerTest	testPrepareObjectQueryWithParameterReplacement	assertSame(this.testTarget002,result.getTarget());	assertNotEquals(expectedValue, testTarget003.getSomeValue());	4.82	0
43	0	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertNotNull(exp);	20.42	0
	1	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertTrue(exp instanceof RePattern);	11.72	0
	2	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertEquals("[[:upper:]]", exp.pattern());	10.51	0
	3	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertNotEquals("[[:digit:]]", exp.pattern());	10.53	0
	4	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertSame(HsrePattern.class, exp.getClass());	21.35	0
	5	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertFalse(exp.pattern().isEmpty());	16	0
	6	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertTrue(exp.flags().contains(PatternFlags.ADVANCED));	17.01	0
	7	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertFalse(exp.pattern(). contains("(?i)"));	31.86	0
	11	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertNotEquals(null, exp.matcher("Test"));	17.43	0
	12	basis-technology-corp/tcl-regex-java	RangeTest	testUpper	assertThat("STR",matches(exp));	assertTrue(exp.matcher("T").matches());	14.75	0
44	0	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	17.93	1
	1	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	35.16	1
	3	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.find());	16.88	0
	4	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	33.88	0
	5	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertFalse(matcher.matches());	17.66	0
	10	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertArrayEquals(new int[] {1,2,3}, new int[] {1,2,3});	14.58	0
	13	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(pattern.toString().contains("ab"));	15.46	0
	14	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.pattern().toString().contains("ab"));	13.65	0
	16	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertFalse(pattern.toString().contains("cd"));	14.7	0
	18	basis-technology-corp/tcl-regex-java	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotNull(pattern);	15.42	0
45	0	trautonen/coveralls-maven-plugin	CircleTest	testGetBuildNumber	assertEquals("STR",newCircle(env()).getBuildNumber());	assertCircuitNbInt_se_Producors() throw Exception {);	118.98	0
46	0	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(isValidOTPFormat(otp));	6.95	0
	1	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertTrue() statement as follows:);	8.24	0
	2	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals() to check the expected result against the actual result as follows:);	11.85	0
	3	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull() to check if the object being tested is not null as follows: );	8.37	0
	7	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals() to check if two values are not equal as follows:);	5.44	0
	8	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertThrows() to check if an expected exception is thrown in the test as follows:);	7.91	0
	9	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertArrayEquals() to check if two arrays are the same as follows:);	6.43	0
	10	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertThat() to perform more flexible and powerful assertions with matchers as follows:);	6.11	0
	14	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame() to check if two objects are not the same instance as follows:);	5.28	0
	16	Yubico/yubico-java-client	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertSame() to check if two objects are the same instance as follows:);	4.23	0
47	0	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(LoaderUriDownloader.createJsonSchemaFactory(loader));	23.23	0
	1	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(LoaderUriDownloader.createJsonSchemaFactory(loader));	26.89	0
	2	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertTrue(LoaderUriDownloader.createJsonSchemaFactory(loader) instanceof JsonSchemaFactory);	16.56	0
	3	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotEquals(null, LoaderUriDownloader.createJsonSchemaFactory(loader));	15.32	0
	4	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertEquals(JsonSchemaFactory.class, LoaderUriDownloader.createJsonSchemaFactory(loader).getClass());	12.75	0
	5	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertSame(JsonSchemaFactory.class, LoaderUriDownloader.createJsonSchemaFactory(loader).getClass());	14.65	0
	6	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotSame(null, LoaderUriDownloader.createJsonSchemaFactory(loader));	15.59	0
	10	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertTrue(LoaderUriDownloader.createJsonSchemaFactory(loader) != null);	14.67	0
	12	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(LoaderUriDownloader.createJsonSchemaFactory(loader).getValidator());	16.13	0
	16	nidi3/raml-loader	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(LoaderUriDownloader.createJsonSchemaFactory(loader));	28.68	0
48	0	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertTrue(webSocket.isOpen());	15.72	1
	1	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertFalse(!engine.isOpen());	18.4	0
	2	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertEquals(true, new FocalClass().isOpen());	24.32	0
	3	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertNotNull(webSocket.getDraft());	21.18	0
	4	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertFalse(container.isActive());	122.84	0
	5	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertEquals(ssh.isOpen(), webSocket.isOpen());	27.67	0
	6	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertFalse(webSocket.getConnection().isOpen());	30.02	0
	7	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertTrue(engine.getReadyState() == WebSocket.READYSTATE.OPEN);	31.35	0
	8	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertNotNull(msg);	14.63	0
	9	TooTallNate/Java-WebSocket	Issue609Test	testIssue	assertTrue("STR",webSocket.isOpen());	assertTrue(webSocket.getSocket() == engine.getSocket()`);	54.71	0
49	0	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertEquals(42, incompleteException.getPreferredSize());	20.31	1
	1	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertTrue(incompleteException.getPreferredSize() == 42);	22.37	0
	2	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertNotNull(incompleteException);	33.28	0
	3	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertThrows(UnsupportedOperationException.class,);	83.5	0
	4	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertNotEquals(0, incompleteException.getPreferredSize());	33.53	0
	5	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertFalse(incompleteException.getPreferredSize() != 42);	14.85	0
	6	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertEquals(42, incompleteException.getPreferredSize());	30.96	0
	7	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertEquals(42, incompleteException.getPreferredSize());	20.48	0
	8	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertNotEquals(42, incompleteException.getPreferredSize());	17.15	0
	9	TooTallNate/Java-WebSocket	IncompleteExceptionTest	testConstructor	assertEquals("STR",42,incompleteException.getPreferredSize());	assertNull()`;);	49.4	0
50	0	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertEquals(expected, actual);	21.3	0
	1	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertTrue(condition);	17.34	0
	2	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertThat("Expected type to be " + expected + " but it was " + actual, actual, equalTo(expected));	22.94	0
	3	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertNotNull(actual);	24.03	1
	4	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertNotEquals(expected, actual);	23.02	0
	5	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertNotNull(actual);	21.13	0
	6	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertSame(expected, actual);	18.17	0
	7	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertFalse(condition);	18.52	0
	8	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertNull(actual);	23.43	0
	9	adlnet/jxapi	ActivityDefinitionTest	testGetType	assertNotNull(actual);	assertArrayEquals(expectedArray, actualArray);	19.55	0
1	0	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertEquals(qResult.size(), 2);	43.15	1
	3	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertTrue(qResult.size() <= 2);	46.4	0
	4	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertNotNull(qResult);	43.62	0
	5	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	43.03	0
	6	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertNotEquals(0, qResult.size());	41.65	0
	7	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertNotEquals(0, qResult.size());	41.92	0
	8	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertArrayEquals(expectedResult2}, new Object[] {qResult.get(0));	44.3	0
	11	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertEquals(2, qResult.size());	73.14	0
	14	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertTrue(qResult != null && !qResult.isEmpty());	41.33	0
	15	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testLimitWithNamedParam	assertEquals(qResult.size(),2);	assertTrue(!qResult.isEmpty());	42.8	0
2	4	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(db.getMetadata().getSchema().existsClass("company"));	93.99	0
	5	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(db.isClosed());	37.96	0
	6	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(db.getStorage());	37.16	0
	7	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(db.exists());	36.85	0
	8	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(db.command(new OCommandSQL("CREATE CLASS company")));	39.58	0
	9	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(db.getMetadata().getSchema().getClass("company"));	37.39	0
	10	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertEquals("memory:OCommandExecutorSQLCreatePropertyTest", db.getName().substring(0, 41));	39.19	0
	13	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertEquals(1, db.countClass("company"));	35.37	0
	14	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals("", db.getClusterNameById(db.getDefaultClusterId()));	37.95	0
	15	orientechnologies/orientdb	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(db.isClosed());	37.26	0
3	2	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertEquals();	35.47	0
	4	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertNotNull() ) {);	38.43	0
	9	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertFalse() ) {);	20.45	0
	10	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertNotEquals() ) {);	20.62	0
	11	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertNull() ) {);	20.23	0
	12	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertSame() ) {);	20.55	0
	14	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertNotSame() ) {);	20.44	0
	15	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertThat() ) {);	19.81	0
	18	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertEquals() ) {);	20.38	0
	21	orientechnologies/orientdb	LuceneSpatialMiscFunctionsTest	testDistance	assertThat(next.<Double>field("STR")).isEqualTo(0.0015056772638228177);	assertArrayEquals() ) {);	20.1	0
4	0	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertTrue(query.toString().contains("friend1") && query.toString().contains("friend2") && query.toString().contains("friend3") && query.toString().contains("uid = 2"));	23.67	0
	1	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertNotEquals(-1, query.indexOf("friend1"));	53.38	0
	2	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertEquals("friend1,friend2,friend3|friend1,friend3|", query.toString());	23.28	0
	3	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertSame(db.getClass(), ODatabaseDocumentTx.class);	21.16	0
	4	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertFalse(query.toString().isEmpty());	21.23	0
	5	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertNotNull(db);	20.59	0
	6	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertNotSame(query.toString().length(), 0);	21.06	0
	8	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertNotEquals(null, db);	20.23	0
	10	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertTrue(query.toString().contains("TriangleV") && query.toString().contains("TriangleE") && query.toString().contains("uid = 2"));	23.35	0
	11	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle3	Assert.assertTrue(result.hasNext());	assertArrayEquals("STR"}, friendList[0]);	22.11	0
5	5	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertFalse(db.getMetadata().getSchema().existsClass("manager"));	49.72	0
	7	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertFalse(db.getMetadata().getSchema().existsClass("employee"));	21.76	0
	8	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertTrue(db.getMetadata().getSchema().existsClass("OrgChart"));	21.72	0
	10	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertFalse(db.getMetadata().getSchema().existsClass("person"));	21.84	0
	12	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertFalse(db.getMetadata().getSchema().existsClass("department"));	21.9	0
	14	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertTrue(db.getMetadata().getSchema().getClass("Person") != null);	21.17	0
	17	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertTrue(db.getMetadata().getSchema().existsClass("Manager"));	20.74	0
	20	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertTrue(db.getMetadata().getSchema().getClass("Department") != null);	21.21	0
	23	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertTrue(db.getMetadata().getSchema().existsClass("Vertex"));	21.19	0
	26	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testManager2	Assert.assertEquals("STR",getManager2("STR").getProperty("STR"));	assertTrue(db.getMetadata().getSchema().existsClass("Edge"));	20.34	0
6	3	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertFalse(set.iterator().hasNext());	21.05	0
	4	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertTrue(set.iterator().hasNext());	21.44	0
	6	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertEquals(1, ((Set<?>) ((ODocument) res.next().getProperty("set"))).size());	21.54	0
	9	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertFalse(((Set<?>) ((ODocument) res.next().getProperty("set"))).isEmpty());	21.99	0
	11	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertNotNull(set);	21.3	0
	12	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertNotNull(res.next().getProperty("set"));	21.81	0
	14	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertTrue(((ODocument) res.next().getProperty("set")).containsField("one"));	22.22	0
	17	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertTrue(((Set<?>) ((ODocument) res.next().getProperty("set"))).contains(emb));	21.19	0
	18	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertTrue(((Set<?>) ((ODocument) res.next().getProperty("set"))).contains(emb));	22.75	0
	20	orientechnologies/orientdb	RemoteQuerySupportTest	testQueryEmbeddedSet	assertNotNull(item.getProperty("STR"));	assertTrue(set.contains(emb));	20.2	0
7	0	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	36.09	1
	1	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	65.39	1
	2	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	36.53	0
	3	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertEquals(false, doc.isDirty());	34.02	0
	4	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertNotEquals(true, doc.isDirty());	33.86	0
	5	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertSame(false, doc.isDirty());	34.44	0
	6	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertNotSame(true, doc.isDirty());	32.76	0
	7	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertNotNull(doc);	32.54	0
	8	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertNull(null);	33.44	0
	9	orientechnologies/orientdb	TrackedListTest	testAddAllNotificationTwo	Assert.assertFalse(doc.isDirty());	assertTrue(doc instanceof ODocument);	33.49	0
8	0	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertEquals(className, db.getMetadata().getSchema().getClass(className).getName());	37.05	0
	1	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertTrue(db.getMetadata().getSchema().existsClass(className));	37.55	0
	2	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertFalse(db.getMetadata().getSchema().existsClass("non_existing_class"));	37.25	0
	3	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertNotEquals("non_existing_class", db.getMetadata().getSchema().getClass(className).getName());	37.28	0
	4	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertNull(db.getMetadata().getSchema().getClass("non_existing_class"));	37.25	0
	6	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertEquals(32, db.getMetadata().getSchema().getClass(className).getClusterIds().length);	61.86	0
	8	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertTrue(db.getMetadata().getSchema().getClass(className) instanceof OClass);	34.8	0
	9	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertFalse(db.getMetadata().getSchema().existsClass("non_existing_class"));	37.19	0
	10	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertEquals(className, db.getMetadata().getSchema().getClass(className).getName().toLowerCase());	37.05	0
	11	orientechnologies/orientdb	OCreateClassStatementExecutionTest	testClusters	Assert.assertNotNull(clazz);	assertTrue(db.getMetadata().getSchema().getClass(className).getClusterIds().length > 0);	36.24	0
9	0	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertEquals(request.getOperations().size(), 1);	17.87	1
	1	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertTrue(request.getOperations().size() > 0);	17.83	0
	2	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertNotNull(request.getOperations());	14.96	0
	3	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertNotEquals(0, request.getOperations().size());	15.33	0
	4	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertSame(operations, request.getOperations());	14.71	0
	5	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertArrayEquals(operations.toArray(), request.getOperations().toArray());	15.05	0
	7	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertFalse(request.getOperations().isEmpty());	13.63	0
	8	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertSame(operations.size(), request.getOperations().size());	15.17	0
	9	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertNotSame(0, request.getOperations().size());	15.17	0
	10	orientechnologies/orientdb	OBatchOperationsTest	testBatchOperationsNoTx	assertEquals(request.getOperations().size(),1);	assertTrue(request.getOperations().containsAll(operations));	14.88	0
10	0	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertTrue(db.getMetadata().getSchema().existsClass("testLinkMapWithSubqueries"));	37.36	0
	2	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertEquals("testLinkMapWithSubqueries", db.getMetadata().getSchema().getClass("testLinkMapWithSubqueries").getName());	39.83	0
	4	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertNotNull(db.command("SELECT FROM testLinkMapWithSubqueries"));	35.31	0
	5	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertTrue(db.getMetadata().getSchema().getClass("testLinkMapWithSubqueries").existsProperty("mymap"));	37.82	0
	7	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertTrue(db.getMetadata().getSchema().existsClass("testLinkMapWithSubqueriesTheItem"));	35.82	0
	10	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertEquals("testLinkMapWithSubqueriesTheItem", db.getMetadata().getSchema().getClass("testLinkMapWithSubqueries").getProperty("mymap").getLinkedClass().getName());	74.32	0
	13	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertTrue(db.getMetadata().getSchema().getClass("testLinkMapWithSubqueriesTheItem").existsProperty("name"));	38.23	0
	15	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertTrue(db.getMetadata().getSchema().existsClass("testLinkMapWithSubqueries"));	36.67	0
	18	orientechnologies/orientdb	OInsertStatementExecutionTest	testLinkMapWithSubqueries	Assert.assertEquals(1,theMap.size());	assertNotNull(db.getMetadata().getSchema().getClass("testLinkMapWithSubqueries").getProperty("mymap").getLinkedClass());	38.05	0
11	0	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertNotNull(manager);	33.69	0
	1	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().isEmpty());	36.54	0
	2	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertEquals(0, manager.getNewRecords().size());	33.64	0
	3	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertSame(Collections.EMPTY_SET, manager.getNewRecords());	32.6	0
	4	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertArrayEquals(new Object[]{}, manager.getNewRecords().toArray());	33.46	0
	5	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().iterator().hasNext());	33.58	0
	7	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertNotEquals(0, manager.getNewRecords().size());	58.79	0
	8	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertSame(Collections.emptySet(), manager.getNewRecords());	32.23	0
	9	orientechnologies/orientdb	ODirtyManagerTest	testBasic	assertEquals(1,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().isEmpty());	33.7	0
12	0	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertEquals(0, array.size());	31.6	1
	1	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertTrue(array.size() == 0);	36.27	0
	2	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertSame(0, array.size());	34.6	0
	3	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertNotNull(array);	32.34	0
	4	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertNotEquals(1, array.size());	32.41	0
	6	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertFalse(array.size() != 0);	32.34	0
	7	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertNull(array.get(0));	31.68	0
	8	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertNotSame(1, array.size());	31.98	0
	9	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertEquals(0, array.size());	59.12	1
	11	orientechnologies/orientdb	CASObjectArrayTest	testAddSingleItem	Assert.assertEquals(0,array.size());	assertNotEquals(1, array.size());	31.9	0
13	0	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals(2, keysToRemove.size());	32.72	0
	1	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(true);	67.75	0
	2	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNotNull(propertyIndexByValue);	33.68	0
	4	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNotEquals(0, keysToAdd.size());	32.39	0
	5	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNotSame(propertyIndexByKey, propertyIndexByIntegerKey);	32.62	0
	7	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(keysToRemove.containsKey("12"));	34.03	0
	9	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNotEquals(0, propertyIndexByIntegerKey.hashCode());	32.18	0
	10	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(keysToRemove.containsValue(1));	33.35	0
	11	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNull(keysToAdd.get("invalidKey"));	32.72	0
	12	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testProcessChangeEventRemoveKeyWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertArrayEquals(new Integer[]{1}, keysToRemove.values().toArray());	33.71	0
14	0	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertEquals(from.getRid(), to.getRid());	17.63	1
	1	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertNotEquals(from.getRid(), new ORecordId());	20.54	0
	2	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertNotNull(from.getRid());	16.12	0
	4	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertTrue(from.getRid().isPersistent());	15.89	0
	7	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertFalse(from.getRid().isNew());	17.18	0
	8	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertNotSame(from, to);	16.32	0
	12	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertEquals(new ORecordId(12,0), to.getRid());	30.27	0
	13	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertTrue(!from.equals(to));	16.53	0
	15	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertTrue(from.equals(from));	15.64	0
	16	orientechnologies/orientdb	OCreateRecordTaskTest	testSerialization	Assert.assertEquals(from.getRid(),to.getRid());	assertFalse(from.getRid().isValid());	17.29	0
15	0	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals(1, keysToAdd.size());	32.87	0
	1	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey("42"));	36	0
	2	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertFalse(keysToRemove.containsKey("42"));	33.25	0
	3	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertTrue(keysToRemove.isEmpty());	32.46	0
	4	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals(0, keysToRemove.size());	32.09	0
	5	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNotNull(propertyIndex);	33.78	0
	6	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNotEquals(0, addedKeys.size());	34.1	0
	7	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertEquals(1, addedKeys.size());	33.15	0
	8	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertFalse(keysToAdd.isEmpty());	32.58	0
	9	orientechnologies/orientdb	OPropertyListIndexDefinitionTest	testProcessChangeEventAddOnceWithConversion	Assert.assertEquals(keysToAdd,addedKeys);	assertNotEquals(0, keysToAdd.size());	34.13	0
16	0	orientechnologies/orientdb	DuplicateNonUniqueIndexChangesTxTest	testDuplicateValuesOnCreateDelete	assertRids("STR");	assertTrue(index.getSize() == 3);	35.74	0
	4	orientechnologies/orientdb	DuplicateNonUniqueIndexChangesTxTest	testDuplicateValuesOnCreateDelete	assertRids("STR");	assertNotNull(index.get("same"));	36.95	0
	9	orientechnologies/orientdb	DuplicateNonUniqueIndexChangesTxTest	testDuplicateValuesOnCreateDelete	assertRids("STR");	assertTrue(index.contains("same"));	35.7	0
	11	orientechnologies/orientdb	DuplicateNonUniqueIndexChangesTxTest	testDuplicateValuesOnCreateDelete	assertRids("STR");	assertFalse(index.contains("Name2"));	38.22	0
	15	orientechnologies/orientdb	DuplicateNonUniqueIndexChangesTxTest	testDuplicateValuesOnCreateDelete	assertRids("STR");	assertEquals(4, index.getSize());	72.28	0
	16	orientechnologies/orientdb	DuplicateNonUniqueIndexChangesTxTest	testDuplicateValuesOnCreateDelete	assertRids("STR");	assertNull(db.newInstance("Person").field("name", "same").save());	40.81	0
17	0	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertEquals("2008-04-30", doc.field("BirthDay"));	19.14	0
	1	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertTrue(doc.containsField("BirthDay"));	18.76	0
	2	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertNotNull(doc.field("BirthDay"));	18.36	0
	3	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertFalse(doc.<Object>field("BirthDay").toString().isEmpty());	18.68	0
	4	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertNotEquals(null, doc.<Object>field("BirthDay"));	18.35	0
	5	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertSame(ODocument.class, doc.getClass());	18.17	0
	6	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertArrayEquals(new String[]{"BirthDay"}, doc.fieldNames());	18.45	0
	7	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertEquals(1, res.size());	18.05	0
	8	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertTrue(res.get(0).getClass().equals(ODocument.class));	19.18	0
	9	orientechnologies/orientdb	OETLCSVExtractorTest	testDateTypeAutodetection	assertEquals(2008,birthday.getYear()+1900);	assertEquals("2008-04-30", doc.field("BirthDay").toString());	18.72	0
18	3	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertNotNull(doc.getIdentity());	22.85	0
	7	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertTrue(doc.getIdentity() instanceof ORecordId);	20.71	0
	9	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertFalse(doc.getIdentity().isNew());	20.66	0
	12	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertSame(doc, db.load(doc.getIdentity()));	20.05	0
	14	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertEquals("Test", doc.getProperty("name"));	71.84	0
	17	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertFalse(doc.getIdentity().isNew());	20.88	0
	20	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertEquals("abc", doc.getProperty("bar"));	19.57	0
	22	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertNotNull(doc.getIdentity());	31.07	0
	24	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertTrue(db.countClass("STR") == 1);	20.24	0
	26	orientechnologies/orientdb	LuceneTransactionCompositeQueryTest	testRollback	assertThat(vertices).hasSize(1);	assertTrue(db.getMetadata().getSchema().existsClass("STR"));	22.97	0
19	0	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertEquals("", filterResult);	18.23	0
	1	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertNotNull(filterResult);	16.6	0
	2	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertNotEquals("expected_value", filterResult);	14.41	0
	3	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertTrue(filterResult.contains("expected_text"));	14.38	0
	4	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertFalse(filterResult.isEmpty());	14.07	0
	5	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertNotSame(null, filterResult);	14.26	0
	9	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertEquals("expected_value", filterResult);	14.82	0
	10	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertNotEquals(null, filterResult);	14.71	0
	11	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertTrue(filterResult.length() > 0);	14.4	0
	12	DigitalPebble/storm-crawler	RegexFilterTest	testImagesFilter	Assert.assertEquals(null,filterResult);	assertFalse(filterResult.startsWith("prefix_"));	14.41	0
20	0	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertEquals(2, db.query(new OSQLSynchQuery<>(query.toString())).size());	39.7	0
	1	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertTrue(db.query(new OSQLSynchQuery<>(query.toString())).size() > 0);	36.79	0
	2	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertNotNull(db.query(new OSQLSynchQuery<>(query.toString())));	34.52	0
	3	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertNull(db.query(new OSQLSynchQuery<>(query.toString())).size());	42.09	0
	4	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertThrows(errorMsg ,Exception.class, () -> { <FOCAL> });	36.68	0
	5	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertNotEquals(expectedValue, actualValue);	22.76	0
	6	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertArrayEquals(expectedArray, actualArray);	21.3	0
	7	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertFalse(condition);	20.99	0
	8	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertTrue(condition);	18.73	0
	9	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testTriangle1Arrows	Assert.assertTrue(result.hasNext());	assertTrue(handler.getResultB().next() // evaluate q both Simple case Meta & Vers );	115.66	0
21	0	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertEquals("10.78", output.get(0).field("firstNumber").toString());	18.61	0
	1	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertTrue(firstNumber instanceof Float);	367.41	0
	2	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertTrue(output.get(0).containsField("firstNumber"));	28.28	0
	3	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertEquals(10.78, (float) output.get(0).field("firstNumber"));	33.8	0
	4	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertNotNull() statement would be:);	30.7	0
	5	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertEquals("10,78", output.get(0).field("firstNumber toString(), "\"'\""));	25.4	0
	6	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertFalse(output.isEmpty());	28.62	0
	7	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertEquals(1, output.size());	24.53	0
	8	orientechnologies/orientdb	OETLCSVExtractorTest	testFloatWithinQuotesAndCommaAsDecimalSeparator	assertFalse(res.isEmpty());	assertEquals(10.78, (double) output.get(0).<ObjectPlaceHolder>);	55.58	0
22	0	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertEquals(Collections.emptyList(), compositeKey.getKeys());	89.12	0
	1	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertEquals(compositeKey.getKeys());	91.15	0
	2	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertTrue(compositeKey.getKeys() instanceof List);	81.52	0
	3	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertNotEquals(null, compositeKey.getKeys());	98.68	0
	4	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertNotNull(compositeKey.getKeys());	87.74	0
	5	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertThat(compositeKey.getKeys(), is(notNullValue()));	95.74	0
	6	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertFalse(compositeKey.getKeys().isEmpty());	56.89	0
	7	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertEquals(new JSONArray(expectedJson),new JSONArray(actualJson));	81.89	0
	8	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertEquals(expectedJson, actualJson);	83.26	0
	9	orientechnologies/orientdb	OCompositeKeyTest	testAddKeyComposite	assertEquals(compositeKey.getKeys().size(),3);	assertNotEquals()` method.);	148.17	0
23	0	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertNotNull(result);	56.64	0
	1	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertTesting(MyNestedClass.class.getDeclaredMethod("hasNext").getReturnType().equals(ResultSet.class), "Invalid return type of hasNext method. The expected return type is ResultSet.");	91	0
	2	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertTrue(result.hasNext());	55.05	0
	3	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertEquals("SELECT a FROM OFunction SELECT(assition(`default`.unnest(/* select expresion */ $param) TEMP ), $params["98ff806ea5d02db961829cd591ebfdadc98637618959945854760b09e22fadm3665118551], $params["temp_sql_abb52"], [ select count(rel0_28.id) selectedProps fro` (unknown: (#IndexQuotes for TF version 0 bigger than text quotes during FOR!!")));	100.28	0
	4	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertFalse(result.hasNext());	53.47	0
	5	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertNotEquals(0, result);	84.06	0
	6	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertArrayEquals(expected.toArray(), actual.toArray());	75.74	0
	7	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertTrue(result.hasNext());	112.22	1
	8	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertTrue(result.hasNext());	84.83	0
	9	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet2	Assert.assertTrue(result.hasNext());	assertTrue(result.hasNext());	54.57	0
24	0	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertEquals(msgToEncrypt, new String(sk.decrypt("AES/CBC/PKCS5Padding", magic)));	81.99	0
	1	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertEquals(msgToEncrypt, decryptedMessage);	106.08	0
	2	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertTrue(new String(sk.decrypt("AES/CBC/PKCS5Padding", magic)).contains(msgToEncrypt));	67.79	0
	3	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertNotNull(helper.decryptAsString(magic));	55.05	0
	4	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertEquals(msgToEncrypt, cipher.decryptAsString(magic));	99.88	0
	5	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertFalse(new String(sk.decrypt("AES/CBC/PKCS5Padding", magic)).isEmpty());	64.82	0
	6	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertNotEquals(msgToEncrypt,impl.decryptAsString(magic.d))	82.76	0
	7	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertTrue(!StringUtils.isEmpty(magic));	105.35	0
	8	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertTrue(new String(sk.decrypt("AES/CBC/PKCS5Padding", magic)).startsWith(msgToEncrypt));	67.68	0
	9	orientechnologies/orientdb	OSymmetricKeyTest	shouldTestSpecificAESKey	assertThat(msgToEncrypt).isEqualTo(decryptedMsg);	assertNotEquals(msgToEncrypt, cipher.decryptAsString(magic));	73.6	0
25	0	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertNotNull(bucket.getValue());	52.79	0
	1	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertNull(bucket.getValue());	51.87	0
	2	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertEquals(expected, bucket.getValue());	62.41	0
	3	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertTrue(bucket.getValue() == null || bucket.getValue() instanceof OSBTreeValue);	69.97	0
	4	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertFalse(bucket.getValue() instanceof OSBTreeValue);	103.15	0
	5	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertNotNull(bucket.getValue());	87.26	0
	6	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertNull(bucket.getValue());	56.05	0
	7	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertNotNull(bucket.getValue());	80.79	0
	8	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertFalse(bucket.getValue() == null || bucket.getValue() instanceof OSBTreeValue);	64.33	0
	9	orientechnologies/orientdb	ONullBucketTest	testAddRemoveAddValue	Assert.assertNull(treeValue);	assertNotEquals(expected, bucket.getValue());	51.56	0
26	0	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertEquals(expected, actual);	15.71	0
	1	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	20.79	0
	2	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertTrue(expected.equals(actual));	17.54	0
	3	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertThat(actual, is(equalTo(expected))));	15.49	0
	4	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertNotNull(activity.getId());	27.32	0
	5	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertNotNull(actual);	17.44	1
	6	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertFalse(expected.equals(actual));	19.56	0
	7	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertEquals(expected, actual);	20.59	0
	8	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertThat(actual, CoreMatchers.instanceOf(String.class));	26.24	0
	9	adlnet/jxapi	ActivityTest	testGetId	assertNotNull(actual);	assertNotEquals(expected,actual);	17.47	0
27	0	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id, statementRef.getId());	20.08	0
	1	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotNull(statementRef.getId());	31.33	0
	2	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotEquals(null, statementRef.getId());	18.49	0
	3	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotEquals(id, statementRef.getId());	24.69	0
	4	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotSame(System.identityHashCode(id), System.identityHashCode(statementRef.getId()));	29.44	0
	5	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals()` instead. In the modified version, the id, statementRef.id);	40.73	0
	6	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotEquals(val1, val2);	24.91	0
	7	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertTrue(statementRef.getId().contains(id));	18.06	0
	8	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id, statementRef.getId());	17.38	0
	9	adlnet/jxapi	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotEquals(id.toString(),statementRef.getId()` );	28.43	0
28	0	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertNotNull(account);	25.39	1
	1	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertNotEquals("", account.getName());	20.65	0
	2	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertTrue(account instanceof Account);	19.05	0
	3	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertEquals(expectedName, account.getName());	14.87	0
	4	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertNotEquals(account.getName(), ""` );	23	0
	5	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertNotEquals("",account.toString());	30.22	0
	6	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertTrue(account.getHomepage().endsWith(".com"));	16.69	0
	7	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertNotNull(account.getExpectedName());	21.95	0
	8	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertNotEquals(account.getHomepage(), '');	21.31	0
	9	adlnet/jxapi	AccountTest	testAccount	assertNotNull(account);	assertNotEquals("",account.expectedName);	20	0
29	0	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	38.02	1
	1	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertTrue(Arrays.equals(expected, actual));	21.86	0
	2	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	15.65	0
	3	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertEquals(Arrays.toString(expected), Arrays.toString(actual));	30.73	0
	4	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertTrue(Arrays.equals(expected, actual));	35.17	0
	5	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	14.5	0
	6	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	15.42	0
	7	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual``` );	22.5	0
	8	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertNotEquals(Arrays.toString(expected),Arrays.toString(actual))```);	20.57	0
30	11	fabric8io/fabric8-maven-plugin	MavenConfigurationExtractorTest	should_parse_deep_inner_objects	assertThat(config).containsEntry("STR",expected);	assertion () {);	71.63	0
	22	fabric8io/fabric8-maven-plugin	MavenConfigurationExtractorTest	should_parse_deep_inner_objects	assertThat(config).containsEntry("STR",expected);	assertEquals(new HashMap<String,Object>() {{);	17.91	0
31	0	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertFalse(source1.equals(source2));	11.03	1
	1	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertTrue(!source1.equals(source2));	14.49	0
	2	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertNotEquals(source1, source2);	10.4	0
	3	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertNotNull(source1);	9.97	0
	4	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertNotSame(source1,source2);	10.61	0
	5	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertSame(source1,source1);	10.28	0
	6	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertArrayEquals(source1.getCoverage(),source2.getCoverage());	10.95	0
	7	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertEquals(source1.getName(),source2.getName());	10.32	0
	8	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertFalse(source1.hashCode() == source2.hashCode());	24.29	0
	10	trautonen/coveralls-maven-plugin	SourceTest	testEqualsForDifferentSources	assertFalse(source1.equals(source2));	assertSame(source1.getName(), source1.getName());	10.72	0
32	3	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertTrue(env.containsKey("CI_NAME"));	15.57	0
	4	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertFalse(env.isEmpty());	11.56	0
	7	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertNotSame(0, env.size());	12.93	0
	9	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertTrue(env.containsValue("bamboo"));	10.93	0
	10	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertEquals(1, env.size());	10.5	0
	11	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertNull(env.get("SOME_KEY"));	13.94	0
	14	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertNotEquals(env.get("CI_NAME"), env.get("ANOTHER_KEY"));	10.51	0
	15	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertTrue(env.containsKey("CI_NAME") && env.containsValue("bamboo"));	10.7	0
	16	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertNotNull(env.get("CI_NAME"));	20.56	0
	17	trautonen/coveralls-maven-plugin	AbstractServiceSetupTest	testGetProperty	assertEquals("STR",create(env).getProperty("STR"));	assertTrue(env.keySet().contains("CI_NAME"));	10.08	0
33	0	trautonen/coveralls-maven-plugin	ScanSourceLoaderTest	testMissingSourceFileFromDirectory	assertNull(sourceLoader.load("STR"));	assertNull(sourceLoader.load("nonexistent_file.txt"));	30.25	1
	18	trautonen/coveralls-maven-plugin	ScanSourceLoaderTest	testMissingSourceFileFromDirectory	assertNull(sourceLoader.load("STR"));	assertTrue(sourceLoader.load("non_existent_file.java") == null);	22.71	0
	19	trautonen/coveralls-maven-plugin	ScanSourceLoaderTest	testMissingSourceFileFromDirectory	assertNull(sourceLoader.load("STR"));	assertNull(sourceLoader.load("missing-file.java"));	11.45	0
	27	trautonen/coveralls-maven-plugin	ScanSourceLoaderTest	testMissingSourceFileFromDirectory	assertNull(sourceLoader.load("STR"));	assertNull(sourceLoader.load("nonexistent-file.java"));	29.3	0
	28	trautonen/coveralls-maven-plugin	ScanSourceLoaderTest	testMissingSourceFileFromDirectory	assertNull(sourceLoader.load("STR"));	assertNull(sourceLoader.load("file-does-not-exist.java"));	10.14	0
	29	trautonen/coveralls-maven-plugin	ScanSourceLoaderTest	testMissingSourceFileFromDirectory	assertNull(sourceLoader.load("STR"));	assertNull(sourceLoader.load("file.txt"));	10.37	0
34	14	hazelcast/hazelcast-simulator	SimulatorAddressTest	testGetAddressLevel	assertEquals(COORDINATOR,coordinatorAddress().getAddressLevel());	assertThrows(Exception.class, () -> { <MethodCall> });	8.82	0
35	3	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertFalse(cabac.readMBSkipFlag(m, SliceType.P, false, false, 0));	28.83	0
	4	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertNotNull(cabac);	31.96	0
	8	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertNotEquals(0, cabac.readMBSkipFlag(m, SliceType.P, false, false, 0));	29.05	0
	16	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertTrue(cabac.readMBSkipFlag(m, SliceType.P, false, false, 0) == cabac.readMBSkipFlag(m, SliceType.P, false, false, 0));	30.93	0
	23	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertTrue(cabac.readMBSkipFlag(m, SliceType.P, false, false, 0) || !cabac.readMBSkipFlag(m, SliceType.P, true, false, 0));	30.63	0
	24	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertNotEquals(0, cabac.readMBSkipFlag(m, SliceType.P, false, false, 0));	29.97	0
	26	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertTrue(cabac.readMBSkipFlag(m, SliceType.P, false, false, 0) ^ cabac.readMBSkipFlag(m, SliceType.P, true, false, 0));	29.44	0
	28	jcodec/jcodec	CABACTest	testMBSkipFlag	Assert.assertEquals(false,cabac.readMBSkipFlag(m,SliceType.P,false,false,0));	assertTrue(cabac.readMBSkipFlag(m, SliceType.P, true, true, 10) == true);	49.81	0
36	4	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertNotNull(color);	63.02	0
	16	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertFalse(buf.isReadOnly());	22.66	0
	17	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertNotEquals(0, 10);	23.72	0
	19	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertNotNull(buf);	22.74	0
	22	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertNotEquals(8, buf.remaining());	23.69	0
	24	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertTrue(buf.capacity() >= 64);	22.65	0
	27	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertEquals(0, buf.position());	23.71	0
	29	jcodec/jcodec	ColorExtensionTest	testColorMov	Assert.assertEquals(18,buf.remaining());	assertEquals(64, buf.capacity());	23.46	0
37	0	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotNull(jolokiaConnection.getLog());	4.4	1
	1	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertEquals(mockLogger, jolokiaConnection.getLog());	7.83	0
	2	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotEquals(mockJ4pClient, jolokiaConnection.getLog());	3.87	0
	3	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertSame(mockLogger, jolokiaConnection.getLog());	3.62	0
	4	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotSame(mockJ4pClient, jolokiaConnection.getLog());	3.81	0
	5	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertTrue(mockJ4pClient != jolokiaConnection.getLog());	3.81	0
	6	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertFalse(mockJ4pClient.equals(jolokiaConnection.getLog()));	4.1	0
	7	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNull(jolokiaConnection.getLog());	3.56	0
	8	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertThrows(Exception.class, () -> jolokiaConnection.someMethod());	5.05	0
	9	amlinv/stat-collection-utils	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotSame(mockLogger, jolokiaConnection.getLog());	3.67	0
38	0	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertEquals(this.testAttributeList, result);	4.28	0
	1	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertEquals(expectedSize, result.size());	5.43	0
	2	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertTrue(result.isEmpty());	3.22	0
	3	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertNotNull(result);	3.13	0
	4	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertNotEquals(this.testAttributeList, result);	3.62	0
	5	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertNotSame(this.testAttributeList, result);	3.49	0
	6	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertSame(this.testAttributeList, result);	3.53	1
	7	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertFalse(result.isEmpty());	3.18	0
	8	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertArrayEquals(expectedArray, result.toArray());	3.51	0
	9	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testGetAttributes	assertSame(this.testAttributeList,result);	assertThat(result, org.hamcrest.Matchers.hasSize(expectedSize));	3.59	0
39	0	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertEquals(Opcode.BINARY, frame.getOpcode());	21.84	0
	1	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertTrue(frame.getOpcode() == Opcode.BINARY);	8.34	0
	2	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertSame(Opcode.BINARY, frame.getOpcode());	6.83	0
	3	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertNotNull(frame.getOpcode());	6.64	0
	4	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertNotEquals(Opcode.TEXT, frame.getOpcode());	6.97	0
	6	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertFalse(frame.getOpcode() == Opcode.TEXT);	6.57	0
	7	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertNotSame(Opcode.TEXT, frame.getOpcode());	6.23	0
	9	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertNotSame(new BinaryFrame(), frame);	6.39	0
	10	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertTrue(frame instanceof BinaryFrame);	6.04	0
	11	TooTallNate/Java-WebSocket	BinaryFrameTest	testExtends	assertEquals("STR",true,frameinstanceofDataFrame);	assertSame(Opcode.BINARY, frame.getOpcode());	6.53	0
40	0	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertThat(result.size(), equalTo(3));	14.05	0
	1	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(result.containsKey("my_secret__token"));	12.16	0
	2	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(result.containsKey("MY_SECRET_TOKEN"));	11.21	0
	3	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertNotEquals("BAR", result.get("FOO"));	62.22	0
	4	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals("clef", result.get("A_KEY_TO_A_DOOR"));	11.49	0
	5	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertNull(result.get("MY_SECRET_TOKEN"));	11.21	0
	6	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(result.keySet().containsAll(Arrays.asList("my_secret__token", "A_KEY_TO_A_DOOR", "FOO")));	12.24	0
	7	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(result.containsKey("MY_KEY_DOES_NOT_EXIST"));	11.28	0
	8	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(env.keySet().containsAll(result.keySet()));	11.36	0
	9	cucumber-ltd/cucumber-pro-plugin-jvm	EnvFilterTest	filters_and_sorts_keys	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(result.isEmpty());	11.05	0
41	4	PeterisP/morphology	MorphologyTest	sēdošs	assertTrue(sēdošs.isRecognized());	assertNotNull(sēdošs);	9.2	0
	6	PeterisP/morphology	MorphologyTest	sēdošs	assertTrue(sēdošs.isRecognized());	assertTrue(sēdošs.isRecognized());	9.35	1
	7	PeterisP/morphology	MorphologyTest	sēdošs	assertTrue(sēdošs.isRecognized());	assertTrue(locītājs.analyze("sēdošs").isRecognized());	27.9	0
	10	PeterisP/morphology	MorphologyTest	sēdošs	assertTrue(sēdošs.isRecognized());	assertTrue(sēdošs.isRecognized());	17.59	1
	26	PeterisP/morphology	MorphologyTest	sēdošs	assertTrue(sēdošs.isRecognized());	assertTrue(sēdošs.isRecognized());	10.49	1
42	0	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertEquals(556, formas.size());	33.01	0
	2	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertNotNull(formas);	12.19	0
	4	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertFalse(formas.isEmpty());	9.43	0
	5	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertNotEquals(0, formas.size());	9.8	0
	8	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertNotEquals(null, formas);	9.14	0
	12	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertNotEquals(0, formas.size());	9.29	0
	15	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertNotEquals(0, formas.size());	9.06	0
	16	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertNotNull(testset);	9.06	0
	19	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertNotEquals(null, formas);	8.87	0
	21	PeterisP/morphology	MorphologyTest	būt	assertInflection(formas,testset,"STR");	assertTrue(!formas.isEmpty());	9.82	0
43	0	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertEquals("JPEG\n800\n600\n800x600\n0\n", service.execute(Arrays.asList("identify", "-ping", "-format", "%m\n%W\n%H\n%g\n%z", "sourceImage.jpg")));	8.53	0
	2	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertTrue(!output.getOutput().isEmpty());	7.71	0
	5	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertTrue(service.execute(Arrays.asList("identify", "-ping", "-format", "%m\n%W\n%H\n%g\n%z", "sourceImage.jpg")).contains("JPEG"));	7.67	0
	6	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertFalse(output.getOutput().isEmpty());	5.83	0
	7	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertNotEquals("", output.getOutput());	5.1	0
	9	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertTrue(service.execute(Arrays.asList("identify", "-ping", "-format", "%m\n%W\n%H\n%g\n%z", "sourceImage.jpg")).contains("600"));	6.73	0
	10	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertEquals("800x600", service.execute(Arrays.asList("identify", "-ping", "-format", "%m\n%W\n%H\n%g\n%z", "sourceImage.jpg")).split("\n")[3]);	7.42	0
	11	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertEquals("JPEG", service.execute(Arrays.asList("identify", "-ping", "-format", "%m\n%W\n%H\n%g\n%z", "sourceImage.jpg")).split("\n")[0]);	7.21	0
	12	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertTrue(service.execute(Arrays.asList("identify", "-ping", "-format", "%m\n%W\n%H\n%g\n%z", "sourceImage.jpg")).contains("0"));	7.08	0
	14	sharneng/gm4java	GMBatchCommandTest	run_returnsResultBack	assertThat(iter.next(),is("STR"));	assertTrue(!output.getOutput().contains("error"));	5.12	0
44	3	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertNotNull(sql.toString());	11.82	0
	9	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertNull(sql.toString());	15.17	0
	11	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertTrue(sql.toString().startsWith("SELECT"));	4.93	0
	13	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertFalse(sql.toString().isEmpty());	5.23	0
	15	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertNotSame(null, sql.toString());	5.36	0
	20	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertTrue(sql.toString().toLowerCase().contains("select"));	5.42	0
	22	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertFalse(sql.toString().startsWith("INSERT"));	4.86	0
	24	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertNotNull(sql);	4.63	0
	26	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertNotEquals(null, sql.toString());	4.95	0
	27	redraiment/jactiverecord	TSqlBuilderTest	testUpdate	assertEquals("STR",sql.update("STR").set("STR").toString());	assertTrue(sql.toString().endsWith(";"));	4.62	0
45	3	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertEquals(expected.toString(), options.toString());	27.14	0
	4	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertTrue(expected.toString().equals(options.toString()));	22.82	0
	5	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertNotNull(options);	22.28	0
	7	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertNotEquals(expected, options);	14.43	0
	8	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertFalse(expected.equals(options));	14.4	0
	9	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertSame(expected.getClass(), options.getClass());	22	0
	10	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertNotSame(expected, options);	22.61	0
	18	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertTrue(options.toString().contains("{engine:'DOT', format:'PNG', totalMemory:42, yInvert:true, basedir:DIR, images:null}"));	17.19	0
	19	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertTrue(expected.toString().contains("{engine:'DOT', format:'PNG', totalMemory:42, yInvert:true, basedir:DIR, images:null}"));	16.88	0
	20	nidi3/graphviz-java	OptionsTest	fromJsonNoImage	assertEquals(expected,options);	assertNotEquals(expected.toString(), options.toString());	15.83	0
46	3	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertTrue(exp.flags().contains(PatternFlags.ADVANCED));	14.59	0
	6	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertNotNull(exp);	12.1	0
	8	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertFalse(exp.matcher("\ufeff").matches());	13.28	0
	10	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertNotNull(exp.pattern());	10.63	0
	12	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertFalse(exp.flags().isEmpty());	14.67	0
	14	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertTrue(exp.flags().contains(PatternFlags.EXPANDED));	15.99	0
	16	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertNotEquals(exp.pattern(), "");	14.1	0
	18	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertTrue(exp.flags().contains(PatternFlags.ADVANCED));	13.9	0
	19	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertNotEquals(null, exp.pattern());	13.93	0
	24	basis-technology-corp/tcl-regex-java	RangeTest	testNotBom	assertThat("STR",matches(exp));	assertNotNull(HsrePattern.compile("[^\\ufeff]", PatternFlags.ADVANCED, PatternFlags.EXPANDED));	26.56	0
47	1	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertFalse(CassandraUnitCommandLineLoader.isUsageBeenPrinted());	22.08	0
	2	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertSame(false, CassandraUnitCommandLineLoader.isUsageBeenPrinted());	9.14	0
	3	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertNotEquals(true, CassandraUnitCommandLineLoader.isUsageBeenPrinted());	7.32	0
	6	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertTrue(CassandraUnitCommandLineLoader.isUsageBeenPrinted() == false);	6.92	0
	7	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertNotSame(true, CassandraUnitCommandLineLoader.isUsageBeenPrinted());	6.21	0
	8	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertEquals(false, CassandraUnitCommandLineLoader.isUsageBeenPrinted());	6.59	0
	9	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertFalse(false^CassandraUnitCommandLineLoader.isUsageBeenPrinted());	6.43	0
	10	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertTrue(CassandraUnitCommandLineLoader.isUsageBeenPrinted());	15.44	0
	12	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertEquals(false, !CassandraUnitCommandLineLoader.isUsageBeenPrinted());	7.96	0
	14	jsevellec/cassandra-unit	CassandraUnitCommandLineLoaderTest	shouldPrintUsageBecauseHostArgumentIsMissing	assertThat(CassandraUnitCommandLineLoader.isUsageBeenPrinted(),is(true));	assertNotSame(false, CassandraUnitCommandLineLoader.isUsageBeenPrinted());	5.69	0
48	4	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(tempClass);	5.57	0
	5	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(targetDir.isDirectory());	6.4	0
	6	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(targetDir.exists());	6.45	0
	7	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(util);	5.25	0
	9	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(targetDir.canRead());	8.53	0
	10	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(serverDirectory.exists());	6.37	0
	11	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(configDirectory.isDirectory());	8.2	0
	13	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(srcDir.canWrite());	14.6	0
	15	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(outputDirectory.exists());	6.37	0
	16	OpenLiberty/ci.common	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertEquals(false, targetDir.listFiles().length > 0);	22.93	0
49	0	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	18.88	1
	1	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual);	27.8	0
	2	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertEquals(Arrays.toString(expected), Arrays.toString(actual));	23.13	0
	3	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertTrue(Arrays.equals(expected, actual));	48.78	0
	4	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertSame(expected, actual);	25.83	0
	5	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertNotNull(actual);	27.89	0
	6	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertThat(actual, is(expected));	31.56	0
	8	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(expected, actual.clone());	38.89	0
	9	adlnet/jxapi	PersonTest	testGetMbox	assertArrayEquals(expected,actual);	assertArrayEquals(actual, expected);	19.16	0
0	0	hazelcast/hazelcast-simulator	RegistryTest	testAddTests_testIdFixing	assertEquals("STR",test1.getId());	assertEquals("STR", new TestCase("STR").getId());	10.44	0
	1	/	RegistryTest	testAddTests_testIdFixing	assertEquals("STR",test1.getId());	assertNotNull(new TestCase("STR").getId());	12.25	0
	2	/	RegistryTest	testAddTests_testIdFixing	assertEquals("STR",test1.getId());	assertTrue(new TestCase("STR").getId() instanceof String);	9.03	0
	3	/	RegistryTest	testAddTests_testIdFixing	assertEquals("STR",test1.getId());	assertNotEquals("STR", new TestCase("STR").getId());	9.32	0
	5	/	RegistryTest	testAddTests_testIdFixing	assertEquals("STR",test1.getId());	assertNotSame(new TestCase("STR"), new TestCase("STR"));	9.4	0
	7	/	RegistryTest	testAddTests_testIdFixing	assertEquals("STR",test1.getId());	assertSame("STR", "STR");	10.03	0
1	6	/	PerformanceMonitorTest	test_whenTestRunning_thenSendPerformanceStats	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertPerfStatsSend();}});	assertThrows(NullPointerException.class, () -> new PerformanceMonitor(server, containerManager, 0));	11.5	0
	12	/	PerformanceMonitorTest	test_whenTestRunning_thenSendPerformanceStats	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertPerfStatsSend();}});	assertArrayEquals(new double[] { 1.0, 2.0, 3.0 }, new double[] { 1.0, 2.0, 3.0 }, 0.001);	13.76	0
	19	/	PerformanceMonitorTest	test_whenTestRunning_thenSendPerformanceStats	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertPerfStatsSend();}});	assertEquals(2, containerManager.getContainers().size());	9.87	0
	20	/	PerformanceMonitorTest	test_whenTestRunning_thenSendPerformanceStats	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertPerfStatsSend();}});	assertNotEquals(containerManager.getContainers().size(), 0);	10.79	0
	24	/	PerformanceMonitorTest	test_whenTestRunning_thenSendPerformanceStats	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertPerfStatsSend();}});	assertFalse(containerManager.getContainers().isEmpty());	10.31	0
	29	/	PerformanceMonitorTest	test_whenTestRunning_thenSendPerformanceStats	assertTrueEventually(newAssertTask(){@Overridepublicvoidrun()throwsException{assertPerfStatsSend();}});	assertNotNull(server);	10.04	0
2	8	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertTrue(model.getTimeStepProbabilityArray("STR").length > 0);	17.37	0
	9	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertNotNull(model.getTimeStepProbabilityArray("STR"));	11.94	0
	13	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertFalse(model.getTimeStepProbabilityArray("STR").length == 0);	9.14	0
	16	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertNotSame(null, model.getTimeStepProbabilityArray("STR"));	9.06	0
	17	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertNotEquals(0, model.getTimeStepProbabilityArray("STR").length);	10.24	0
	18	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertTrue(model.getTimeStepProbabilityArray("STR") instanceof byte[]);	10.43	0
	20	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertSame(model.getTimeStepProbabilityArray("STR").getClass(), byte[].class);	9.98	0
	25	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertNotSame(model.getTimeStepProbabilityArray("STR"), new byte[0]);	9.59	0
	26	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertTrue(model.getTimeStepProbabilityArray("STR") != null && model.getTimeStepProbabilityArray("STR").length > 0);	10.81	0
	27	/	TimeStepModel_probabilityTest	test_probability_singleMethod	assertProbability(model,"STR",1.0);	assertFalse(model.getTimeStepProbabilityArray("STR") == null || model.getTimeStepProbabilityArray("STR").length == 0);	11.72	0
3	0	hazelcast/hazelcast-simulator	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertEquals(options.hasOptions(), false);	9.95	0
	1	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertTrue(options == null || options.specs().isEmpty());	18.46	0
	2	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotNull(options);	8.38	1
	3	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotEquals(0, options.specs().size());	8.34	0
	4	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertFalse(options.hasOptions());	8.14	0
	5	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNull(options);	8.06	0
	7	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertSame(parser, options.specs());	21.89	0
	9	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotSame(parser, options);	12.23	0
	10	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertEquals(0, options.specs().size());	12.2	0
	11	/	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertTrue(options == null || options.specs() == null);	10.97	0
4	3	/	PerformanceStatsCollectorTest	testGet_testCaseNotFound	assertTrue(performanceStats.isEmpty());	assertNotNull(performanceStats);	14.22	0
	4	/	PerformanceStatsCollectorTest	testGet_testCaseNotFound	assertTrue(performanceStats.isEmpty());	assertNull(performanceStatsCollector.get(null, true));	14.99	0
	17	/	PerformanceStatsCollectorTest	testGet_testCaseNotFound	assertTrue(performanceStats.isEmpty());	assertNotSame(emptyPerformanceStatsCollector, performanceStatsCollector);	9.45	0
	19	/	PerformanceStatsCollectorTest	testGet_testCaseNotFound	assertTrue(performanceStats.isEmpty());	assertTrue(performanceStats.getIntervalThroughput() > 0);	9.21	0
	26	/	PerformanceStatsCollectorTest	testGet_testCaseNotFound	assertTrue(performanceStats.isEmpty());	assertEquals(0, performanceStats.getOperationCount());	11.71	0
	28	/	PerformanceStatsCollectorTest	testGet_testCaseNotFound	assertTrue(performanceStats.isEmpty());	assertThrows(IllegalArgumentException.class, () -> {);	13.57	0
5	9	/	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertFalse(value < 0);	47.23	0
	16	/	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value >= 0);	21.18	1
	18	/	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotSame(unexpectedObject, actualObject);	5.63	0
	20	/	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotNull(object);	29.21	0
	22	/	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertArrayEquals(expectedArray, resultArray);	22.38	0
6	0	fizzed/jne	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertNotNull()` method to check if the method returns a non-null value.);	24.34	0
	1	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertEquals()` method:);	19.25	0
	3	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertTrue()` method:);	22.5	0
	4	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertFalse()` method:);	12.95	0
	5	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertNotEquals()` method:);	12.75	0
	6	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertArrayEquals()` method:);	12.82	0
	7	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertNull()` method:);	13.6	0
	8	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertNotSame()` method:);	13.46	0
	9	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertSame()` method:);	12.8	0
	20	/	JNETest	findExecutable	assertThat(file,is(not(nullValue())));	assertThat()` method:);	12.7	0
0	0	OpenLiberty/ci.common	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertTrue(jco.getOptions().contains("-nowarn"));	7.18	0
	1	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertFalse(jco.getOptions().contains("-verbose"));	9.05	0
	3	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertNotNull(result);	7.7	0
	4	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertNotEquals(0, result.size());	7.61	0
	7	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertNotNull(result);	19.24	0
	8	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertTrue(result instanceof List);	6.39	0
	11	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertFalse(jco.getOptions().isEmpty());	9.69	0
	12	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertTrue(jco.getOptions().contains("-nowarn"));	8	0
	14	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertTrue(!jco.getOptions().isEmpty());	7.9	0
	16	/	JavaCompilerOptionsTest	testDefaultOptions	assertEquals(1,result.size());	assertTrue(jco.getOptions().contains("-nowarn") && jco.getOptions().size() == 1);	7.7	0
7	3	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(new File(srcDir, "STR").exists());	13.45	0
	5	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));		7.24	0
	7	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));		5.61	0
	8	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));		5.37	0
	12	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));		5.2	0
	13	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(new File("STR"));	5.8	0
	15	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(new File(targetDir, "STR").exists());	6.38	0
	16	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(new File("STR"));	6.5	0
	17	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(new File(targetDir, "STR").exists());	6.78	0
	19	/	DevUtilTest	testGeneratedConfigFiles	assertTrue("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(new File(configDirectory, "STR").exists());	8.04	0
8	0	orientechnologies/orientdb	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	39.14	1
	1	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertTrue()`:);	45.33	0
	2	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertNotNull()`? Here it is:);	34.45	0
	3	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertEquals()` would be another type of );	46.74	0
	6	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertNotEquals()`? Here's an example statement incorporating this expectedValue, actualValue);	45.41	0
	7	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertArrayEquals()` would be another type of expected, actual);	47.53	0
	8	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertThat()` is another type of ) or equalTo() etc. Here's an example statement using equalTo() matcher:);	45.17	0
	11	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	77.83	1
	12	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertTrue()`:);	42.01	0
	13	/	TrackedSetTest	testClearTwo	assertFalse(doc.isDirty());	assertNotNull()` would be another type of doc);	44.36	0
9	1	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size() >= 0);	42.41	0
	2	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	43.11	0
	3	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotEquals(0, treeBucket.size());	37.88	0
	4	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertFalse(treeBucket.isEmpty());	38.96	0
	11	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.getTreeSize() >= 0);	41.99	0
	16	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.isLeaf());	47.65	0
	18	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size() >= 0);	93.43	0
	21	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(cacheEntry.getCachePointer());	47.99	0
	24	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertFalse(cacheEntry.isLockAcquiredByCurrentThread());	43.41	0
	25	/	OSBTreeBonsaiNonLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(cacheEntry.getUsagesCount() >= 0);	45.37	0
	9	/	RemoteQuerySupportTest	testQueryEmbeddedMap	assertNotNull(item.getProperty("STR"));	assertNotNull()` that checks if the `getProperty("STR")` returns a non-null value:);	28.82	0
	10	/	RemoteQuerySupportTest	testQueryEmbeddedMap	assertNotNull(item.getProperty("STR"));	assertTrue(map.containsKey("STR"));	27.24	0
	14	/	RemoteQuerySupportTest	testQueryEmbeddedMap	assertNotNull(item.getProperty("STR"));	assertEquals(emb, map.get("STR"));	26.51	0
	17	/	RemoteQuerySupportTest	testQueryEmbeddedMap	assertNotNull(item.getProperty("STR"));	assertNotNull(map.get("STR"));	28.96	0
11	0	orientechnologies/orientdb	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertEquals(Long.MAX_VALUE, storedValue);	44.5	0
	1	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertTrue(storedValue == Long.MAX_VALUE);	43.29	0
	2	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertNotEquals(Long.MIN_VALUE, storedValue);	39.92	0
	3	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertNotNull(all);	38.17	0
	4	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertArrayEquals(array, all.array());	410.78	0
	6	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertFalse(all.hasRemaining());	40.47	0
	7	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertEquals(8, all.limit());	40.74	0
	8	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertTrue(part1.getLong() != part2.getLong());	44.44	0
	9	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertFalse(part1.hasRemaining());	39.63	0
	10	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertSame(array, all.array());	37.05	0
12	0	orientechnologies/orientdb	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertEquals(from.getRid(), to.getRid());	21.13	1
	1	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertTrue(from.getRid().equals(to.getRid()));	19.44	0
	2	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertNotNull(from);	19.93	0
	3	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertNotEquals(from.getRid(), to.getRid());	20.79	0
	4	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertSame(from.getRid().getClass(), to.getRid().getClass());	18.57	0
	5	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertFalse(from.getRid() == to.getRid());	17.63	0
	6	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertNotSame(from.getRid(), to.getRid());	17.68	0
	7	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertArrayEquals(new Object[]{from.getRid()}, new Object[]{to.getRid()});	18.72	0
	10	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertTrue(from.getRid().toString().equals(to.getRid().toString()));	44.27	0
	11	/	ODeleteRecordTaskTest	testSerialization	assertEquals(from.getRid(),to.getRid());	assertNotSame(System.identityHashCode(from.getRid()), System.identityHashCode(to.getRid()));	21.23	0
13	0	orientechnologies/orientdb	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertEquals(0, database.countClass("RecordPointer"));	51.56	0
	2	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertTrue(database.countClass("BlobCluster") == 0);	52.09	0
	4	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertNotNull(database.getMetadata().getSchema().getClass("RecordPointer").getProperty("ref"));	45.14	0
	5	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertNotEquals(0, res.intValue());	41.86	0
	6	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertNotEquals(0, database.countClusterElements("BlobCluster"));	50.78	0
	7	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertTrue(database.getMetadata().getSchema().existsClass("RecordPointer"));	44.99	0
	9	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertEquals(1, database.countClass("RecordPointer"));	46.94	0
	11	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertEquals(1, res.intValue());	41.63	1
	13	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertFalse(database.existsCluster("BlobCluster"));	45.07	0
	14	/	TestBinaryRecordsQuery	testSelectDeleteBinary	assertEquals(1,res.intValue());	assertTrue(rec instanceof ORecordBytes);	46.69	0
14	2	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(walChanges instanceof OWALChanges);	90.03	0
	3	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(doubleSerializer);	41.01	0
	4	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertArrayEquals(data, walChanges.getBinaryValue(buffer, serializationOffset, FIELD_SIZE));	43.76	0
	6	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertSame(OBJECT, doubleSerializer.deserializeNativeObject(buffer.array(), serializationOffset));	36.09	0
	8	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotEquals(0, doubleSerializer.getObjectSize(OBJECT));	38.05	0
	10	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.isDirect());	38.89	0
	12	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(OBJECT, doubleSerializer.deserializeNativeObject(data, 0));	44.13	0
	15	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FIELD_SIZE + serializationOffset, buffer.capacity());	34.03	0
	19	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(OBJECT.equals(doubleSerializer.deserializeNativeObject(data, 0)));	39.14	0
	20	/	DoubleSerializerTest	testSerializeWALChanges	assertEquals(doubleSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(0, doubleSerializer.getObjectSize(null));	40.42	0
15	0	orientechnologies/orientdb	OLiveQueryMessagesTests	testRequestWriteRead	assertEquals(requestRead.getQuery(),"STR");	assertEquals(requestRead.getQuery(), "STR");	17.38	1
	1	/	OLiveQueryMessagesTests	testRequestWriteRead	assertEquals(requestRead.getQuery(),"STR");	assertTrue(requestRead.getQuery().startsWith("STR"));	22.39	0
16	0	orientechnologies/orientdb	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertEquals(1, search.size());	24.15	0
	1	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertTrue(search.size() > 0);	26.9	0
	2	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertNotNull(search);	27.9	0
	3	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertSame(ODocument.class, search.get(0).getClass());	28.62	0
	4	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertFalse(search.isEmpty());	26.77	0
	5	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertNotEquals(0, search.size());	29.99	0
	7	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertNotEquals(null, ((OLuceneCompositeIndex)db.getMetadata().getIndexManager().getIndex("C1.p1_FULLTEXT")).getDefinition().getFields().get(0));	345.1	0
	18	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertNotSame(0, search.size());	27.88	0
	19	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertSetMaterial(bc_message_tfgverla0rd,gat_pro_exists_OTPort()));	186.31	0
	21	/	LuceneListIndexingTest	rname	assertThat(search).hasSize(1);	assertThrows(ODatabaseException.class, () -> {);	32.28	0
	2	/	DefaultValueTest	testDefaultValueProvidedMandatoryReadonlyFromJson	assertNotNull(saved.field("STR"));	assertEquals(value1, saved.field("STR"));	59.26	0
	4	/	DefaultValueTest	testDefaultValueProvidedMandatoryReadonlyFromJson	assertNotNull(saved.field("STR"));	assertSame(saved.field("STR"), doc.field("STR"));	49.16	0
	6	/	DefaultValueTest	testDefaultValueProvidedMandatoryReadonlyFromJson	assertNotNull(saved.field("STR"));	assertNotNull(saved.field("STR"));	51.71	1
	10	/	DefaultValueTest	testDefaultValueProvidedMandatoryReadonlyFromJson	assertNotNull(saved.field("STR"));	assertNotEquals("STR", saved.field("STR"));	55.13	0
	11	/	DefaultValueTest	testDefaultValueProvidedMandatoryReadonlyFromJson	assertNotNull(saved.field("STR"));	assertFalse(saved.field("STR") == null);	51.44	0
	14	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertThat(byteBuffer.getFloat(serializationOffset), ordered);	59.68	0
	18	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertEquals(EXPECTED_OBEJCT, object);	85.1	0
	22	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertTrue(decompressedObject == OBJECT);	6.06	0
	23	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertEquals(1, buffer.position());	5.7	0
	25	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertThrows(IllegalArgumentException.class, () -> floatSerializer.serializeInByteBufferObject(null, buffer));	77.22	0
	26	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertArrayEquals(EXPECTED_BYTES, actualBytes);	6.6	0
	27	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertThrows(BufferOverflowException.class, () -> floatSerializer.serializeInByteBufferObject(OBJECT, buffer));	7.89	0
	28	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertEquals(Float.floatToIntBits(OBJECT), buffer.getInt(serializationOffset));	44.44	0
	29	/	FloatSerializerTest	testSerializeInByteBuffer	assertEquals(binarySize,FIELD_SIZE);	assertThat(feature, XT_.gt(vXT_WavelengthoML.wseu_const_densonpuLTEfuncTE(dttBVltrhqofE.toArray(swjJVmuOCU12_TM_ROT_A.SIZE_STANDARD))));	122.6	0
18	0	orientechnologies/orientdb	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(OBJECT, deserializeFromByteBufferObject(buffer));	5.89	0
	1	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertTrue(OBJECT.equals(deserializeFromByteBufferObject(buffer)));	15.92	0
	2	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertNotNull(deserializeFromByteBufferObject(buffer));	6.12	0
	3	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertNotEquals(OBJECT, deserializeFromByteBufferObject(buffer));	6.71	0
	8	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertSame(OBJECT, OBJECT);	6.03	0
	9	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertFalse(deserializeFromByteBufferObject(buffer) == null);	6.9	0
	10	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertNotEquals("", result.trim());	86.07	0
	16	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(objectFromNativeUintUtil.getAddressAsString(),);	91.33	0
	18	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertFalse(OBJECT.trim().isEmpty());	6.3	0
	28	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(OBJECT.trim(), deserializeFromByteBufferObject(buffer).trim() );	66.88	0
	13	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertFalse()" checks if the resulting list "result" obtained via '.execute'() from the creation of command was "empty". );	99.24	0
	14	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertFalse(result.isEmpty());	25.12	0
	15	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertNotNull()" checks if the Object "result" obtained via '.execute'() from the creation of command is not null. );	25.56	0
	16	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertNotNull(result);	22.07	0
	17	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertEquals()" checks if the number of elements in "result" list obtained via '.execute'() from the creation of command is equal to the expected number of elements. For example, if expected number of elements is 3 and the actual number of elements is 3, then the test case passes. );	28.06	0
	23	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertEquals(4, result.size());	33.6	0
	25	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertTrue(result.size() >= 4);	40.12	0
	26	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertFalse(((List<?>) result).isEmpty());	23.91	0
	27	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertTrue((result.size() == 1) && (((List<?>) result.get(0)).size() == 4));	24.23	0
	28	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertTrue(!(result.isEmpty()) && (result.size() == 1) && (((List<?>)result.get(0)).size()==4));	23.87	0
19	0	orientechnologies/orientdb	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertEquals(1, result.size());	23.97	1
	2	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertTrue(result != null && result.size() == 1);	24.1	0
	3	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertNotNull(result);	22.31	0
	4	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertFalse(result.isEmpty());	22.6	0
	5	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertNotEquals(0, result.size());	22.15	0
	6	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertSame(1, result.size());	21.5	0
	12	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertNotSame(0, result.size());	30.22	0
	13	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertNotNull(result);	42.48	0
	14	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertEquals(1, result.size());	26.38	1
	16	/	OMatchStatementExecutionTest	testTriangle3	assertEquals(1,result.size());	assertNotEquals(null, result);	23.21	0
	2	/	OSBTreeBonsaiLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	34.04	0
	18	/	OSBTreeBonsaiLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotEquals(null, treeBucket);	85.66	0
	19	/	OSBTreeBonsaiLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertSame(treeBucket, treeBucket);	46.19	0
	22	/	OSBTreeBonsaiLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket != null);	33.51	0
	29	/	OSBTreeBonsaiLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size() >= 0);	32.45	0
20	0	orientechnologies/orientdb	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertEquals(2, simpleKeyIndexDefinition.getParamCount());	35.39	0
	1	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(simpleKeyIndexDefinition.getParamCount() == 2);	34.38	0
	2	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotNull(simpleKeyIndexDefinition);	32.87	0
	4	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(0, simpleKeyIndexDefinition.getParamCount());	34.12	0
	5	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertSame(OSimpleKeyIndexDefinition.class, simpleKeyIndexDefinition.getClass());	33.77	0
	6	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(simpleKeyIndexDefinition.getParamCount() == 0);	33.56	0
21	0	orientechnologies/orientdb	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertEquals(Long.MAX_VALUE, storedValue);	44.5	0
	5	/	OByteBufferUtilsTest	testSpecialSplitLong	assertEquals(value,storedValue);	assertEquals(value, storedValue);	107.64	1
22	0	orientechnologies/orientdb	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer), OBJECT);	5.89	1
	4	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(OBJECT, deserializeFromByteBufferObject(buffer));	86.72	0
	5	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertTrue(exceptMockrPerg489ReturnJSON_RESPONSE,entry_add_role_fake(),Integer.valueOf(exceptAppend511XA),ZmediaGenericSerializationJvmSer(tiks_on_features) willHotboxWhenElementMatchPrime(entAdapterSIWTSGApins916964827941,lgr_(discoSTICKreRenderParameter.red30(trim_idx_parameterCodeApplicationRand,"relPairter")));	226.64	0
	6	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertNotSame(OBJECT, deserializeFromByteBufferObject(buffer));	56.5	0
	7	/	OUTFSerializerTest	testNativeDirectMemoryCompatibilityAsWhole	assertEquals(stringSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertArrayEquals(OBJECT.getBytes(StandardCharsets.UTF_8), deserializeFromByteBufferObject(buffer).getBytes(StandardCharsets.UTF_8));	80.32	0
23	0	orientechnologies/orientdb	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertEquals(readRequest.getHosts().get(1), "two");	29.73	0
	1	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertTrue(readRequest.getHosts().contains("one")` the new test method will be:);	51.05	0
	2	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertNull(readRequest.isUsingLog());	53.43	0
	3	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertArrayEquals("two"}, readRequest.getHosts().toArray());	79.53	0
	4	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertEquals(readRequest.getHosts().size(), 2);	35.88	1
	5	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertTrue(+0.0 == -0.0 // Precomputed .hashCode() SBC Shake Bus Carb Cheer Brit Inns Swum Serv Gum Smug Chin Bull Stir Jeff Lav Harm Roots Scut Swing Dough Pine Gain Cost Pass Wire Goal Kens Cou...);	52.34	0
	6	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertFalse(i.isEmpty()));	53.35	0
	7	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertNotNull(readRequest.getHosts());	35.33	0
	8	/	ORemotePushMessagesTest	testDistributedConfig	assertEquals(readRequest.getHosts().size(),2);	assertThrows(NullPointerException.class, () -> request.write(null));	26.37	0
24	0	orientechnologies/orientdb	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertTrue(result.hasNext());	51.38	1
	1	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertEquals(true, result.hasNext());	58.28	0
	2	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertFalse(result.getExecutionPlan().get().contains("FULL SCAN"));	59.86	0
	3	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertEquals(expected, actual);	93.47	0
	4	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertNotNull(Object object)` method from the `RestController` class to test the `hasNext()` method as shown below,);	91.26	0
	6	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertEquals(Optional.empty(), Optional.ofNullable(result.getProperty("name")));	66.05	0
	7	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertTrue(result.getExecutionPlan().get().contains("INDEX"));	66.44	0
	8	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertEquals("test", result.getProperty("name"));	73.85	0
	9	/	ODropUserStatementExecutionTest	testPlain	assertTrue(result.hasNext());	assertNull(result);	88.42	0
25	0	orientechnologies/orientdb	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertEquals(4, ((List) result.get(0)).size());	52.99	0
	1	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertNotNull(result.get(0));	42.5	0
	2	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertTrue(((List) result.get(0)).size() == 4);	41.96	0
	3	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertArrayEquals(expectedList.toArray(), resultList.toArray());	43.52	0
	4	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertThat(((List) result.get(0)).size(), is(4));	57.54	0
	5	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertFalse(((List) result.get(0)).isEmpty());	26.08	0
	6	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertEquals(4, ((List) result.get(0)).size());	32.1	0
	7	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertEquals(1, result.size());	20.54	1
	8	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertNotNull(result.get(0));	27.49	0
	9	/	OMatchStatementExecutionTest	testArrayRange3	assertEquals(1,result.size());	assertSame(value, value);	37.12	0
26	0	orientechnologies/orientdb	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertEquals(keyIndexDefinition.getParamCount(), 1);	39.54	1
	1	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount() > 0);	41.18	0
	2	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotNull(keyIndexDefinition);	37.75	0
	3	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(0, keyIndexDefinition.getParamCount());	35.07	0
	4	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(keyIndexDefinition.getParamCount() == 0);	35.9	0
	5	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(null, keyIndexDefinition);	38.19	0
	8	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition instanceof OSimpleKeyIndexDefinition);	45.62	0
	9	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(2, keyIndexDefinition.getParamCount());	40.49	0
	15	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount() >= 1);	33.29	0
	18	/	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(keyIndexDefinition.getParamCount() == 0);	37.29	0
27	4	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertNotNull(buffer);	43.2	0
	7	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertTrue(buffer.remaining() == size);	85.81	0
	10	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(size, buffer.limit() - buffer.position());	35.78	0
	11	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertFalse(buffer.isReadOnly());	34.92	0
	14	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertTrue(linkSerializer.deserializeFromByteBufferObject(buffer).equals(rid));	38.5	0
	16	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(size, linkSerializer.getObjectSize(linkSerializer.deserializeFromByteBufferObject(buffer)));	38.02	0
	17	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertThrows(IllegalArgumentException.class, () -> {);	77.06	0
	20	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertThrows(IllegalStateException.class, () -> {);	35.63	0
	28	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertEquals(size + 1, buffer.limit());	75.49	0
	29	/	CompactedLinkSerializerTest	testSerializeThreeBytesInByteBuffer	assertEquals(size,linkSerializer.getObjectSizeInByteBuffer(buffer));	assertNotNull(linkSerializer.deserializeFromByteBufferObject(buffer));	33.9	0
28	2	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertTrue(mapResult != null);	36.75	0
	3	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertNotSame(null, mapResult);	33.12	0
	4	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertNotNull(mapResult);	32.79	1
	8	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertFalse(mapResult == null);	32.43	0
	10	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertSame(null, null);	33.38	0
	13	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertNotEquals(null, mapResult);	33.14	0
	14	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertEquals(null, null);	33.02	0
	15	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertTrue(multiKey.equals(anotherMultiKey));	33.21	0
	16	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertFalse(multiKey == anotherMultiKey);	32.93	0
	17	/	OMultiKeyTest	testTwoKeyMap	assertNotNull(mapResult);	assertEquals(1, multiKeyMap.size());	32.86	0
29	6	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertFalse(file.isDirectory());	10.19	0
	12	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertNotNull(file);	9.59	0
	14	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertFalse(file.isDirectory());	9.85	0
	18	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertTrue(file.isFile());	9.78	0
	20	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertFalse(file.isDirectory());	9.36	0
	21	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertNotNull(file.getName());	9.58	0
	22	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertTrue(job!=null);	48.3	0
	25	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertTrue(file.exists());	9.91	0
	27	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertTrue(folder.getRoot().canWrite());	10.09	0
	28	/	JsonWriterTest	testGetCoverallsFile	assertSame(file,newJsonWriter(job,file).getCoverallsFile());	assertTrue(Arrays.asList(file.getParentFile().listFiles()).contains(file));	11.72	0
30	0	cucumber-ltd/cucumber-pro-plugin-jvm	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertEquals("STR", two.getString("STR"));	18.15	0
	2	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertNotNull(two.getString("STR"));	13.97	0
	5	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertNotEquals("STR", two.getString("STR"));	11.65	0
	11	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertNotSame("STR", two.getString("STR"));	10.9	0
	12	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertTrue(two.getString("STR").startsWith("STR"));	11.07	0
	13	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertFalse(two.getString("STR").isEmpty());	10.98	0
	14	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertSame("STR", two.getString("STR"));	11.12	0
	15	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertTrue(two.getString("STR").contains("STR"));	11.23	0
	17	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertNull(two.getString("STR"));	10.66	0
	20	/	ConfigTest	gets_deep_value	assertEquals("STR",root.getString("STR"));	assertFalse(two.getString("STR").endsWith("STR"));	10.93	0
31	0	PeterisP/morphology	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	9.14	0
	2	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas != null && !formas.isEmpty());	26.39	0
	3	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertSame(formas.getClass(), ArrayList.class);	9.98	0
	5	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotEquals(0, formas.size());	60.56	0
	7	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas == null);	9.72	0
	8	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	9.67	0
	12	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size() > 0);	9.76	0
	21	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotEquals(0, formas.size());	9.66	0
	23	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(!formas.isEmpty());	9.73	0
	26	/	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	9.63	0
32	6	/	MorphologyTest	tuStum	assertTrue(stum.isRecognized());	assertNotNull(stum);	12.87	0
	7	/	MorphologyTest	tuStum	assertTrue(stum.isRecognized());	assertNotEquals(null, stum);	9.79	0
	13	/	MorphologyTest	tuStum	assertTrue(stum.isRecognized());	assertNotEquals(null, stum);	9.72	0
	16	/	MorphologyTest	tuStum	assertTrue(stum.isRecognized());	assertNotNull(locītājs);	9.59	0
33	0	redraiment/jactiverecord	TSqlBuilderTest	testDelete	assertEquals("STR",sql.delete().from("STR").toString());		6.04	0
34	0	AlejandroRivera/embedded-rabbitmq	RabbitMqCommandTest	errorLoggingLevelDefaultsToWarn	assertThat(os,instanceOf(Slf4jWarnOutputStream.class));	assertNotNull(processExecutor);	12.42	0
	8	/	RabbitMqCommandTest	errorLoggingLevelDefaultsToWarn	assertThat(os,instanceOf(Slf4jWarnOutputStream.class));	assertThrows(expectedException.class, () -> { // some code });	12.86	0
	9	/	RabbitMqCommandTest	errorLoggingLevelDefaultsToWarn	assertThat(os,instanceOf(Slf4jWarnOutputStream.class));	assertTrue(true);	21.43	0
	10	/	RabbitMqCommandTest	errorLoggingLevelDefaultsToWarn	assertThat(os,instanceOf(Slf4jWarnOutputStream.class));	assertFalse(false` as it is equivalent to `true);	13.69	0
	26	/	RabbitMqCommandTest	errorLoggingLevelDefaultsToWarn	assertThat(os,instanceOf(Slf4jWarnOutputStream.class));	assertNotNull(osCaptor.getValue());	31.27	0
	28	/	RabbitMqCommandTest	errorLoggingLevelDefaultsToWarn	assertThat(os,instanceOf(Slf4jWarnOutputStream.class));	assertThrows(RabbitMqCommandException.class, new Executable() {);	22.14	0
35	0	amlinv/stat-collection-utils	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertEquals(mockAttributeInjector, processor.getAttributeInjector());	7.22	0
	1	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotNull(processor.getAttributeInjector());	5.14	1
	2	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertTrue(processor.getAttributeInjector() instanceof AttributeInjector);	3.62	0
	3	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertSame(mockAttributeInjector, processor.getAttributeInjector());	3.4	0
	4	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotSame(mockObjectQueryPreparer, processor.getAttributeInjector());	4.22	0
	5	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertFalse(processor.getAttributeInjector() == null);	3.51	0
	6	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertNotEquals(mockObjectQueryPreparer, processor.getAttributeInjector());	3.77	0
	7	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertArrayEquals(new HashSet<>(Arrays.asList("STR","STR")).toArray(), attributeNames001.toArray());	4.41	0
	8	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertSame(mockObjectQueryInfo001.getTarget(), polled001);	3.72	0
	9	/	BatchPollProcessorTest	testGetSetAttributeInjector	assertNotNull(this.processor.getAttributeInjector());	assertEquals(mockObjectQueryInfo001.getObjectName(), objectName001);	3.72	0
36	0	amlinv/stat-collection-utils	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertEquals(testQueryResult, result);	3.69	0
	1	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertNotNull(result);	3.98	0
	2	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertTrue(result.contains(objectName));	3.24	0
	3	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertFalse(result.isEmpty());	2.99	0
	4	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertNotEquals(null, result);	3.23	0
	5	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertSame(this.mockMBeanServerConnection, this.connection.getMBeanServerConnection());	4.02	0
	6	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertNotSame(this.mockJmxConnector, this.connection.getJmxConnector());	4.21	0
	7	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertArrayEquals(new String[]{"STR"}, this.mockMBeanServerConnection.getAttributes(this.objectName, new String[]{"STR"}).getAttributeNames());	4.85	0
	8	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertNotEquals(0, result.size());	3.41	0
	9	/	JMXMBeanConnectionTest	testQueryNames	assertSame(this.testQueryResult,result);	assertThrows(IOException.class, () -> {this.connection.queryNames(new ObjectName("invalidPattern"), null});	4.4	0
37	0	ExpediaGroup/beeju	BeejuCoreTest	initialisedDbNameAndHiveConfConstructor	assertThat(dbNameAndHiveConfCore.databaseName(),is("STR"));		10.09	0
38	0	mikolajmitura/java-properties-to-json	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertTrue(jsonObject instanceof AbstractJsonType);	18.86	0
	1	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertEquals(expectedJsonValue, jsonObject.toString());	19.33	0
	2	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertNotNull(jsonObject);	17.36	0
	3	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertFalse(jsonObject.isEmpty());	16.96	0
	4	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertNotEquals(notExpectedJsonValue, jsonObject.toString());	17.73	0
	5	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertSame(expectedObject, jsonObject);	17.19	0
	6	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertNotSame(notExpectedObject, jsonObject);	17.5	0
	7	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertTrue(jsonObject.equals(jsonObject) // This is equivalent to jsonObject);	18.44	0
	9	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertNotEquals(notExpectedObject, jsonObject);	17.54	0
	10	/	LocalDateToJsonTypeConverterTest	convertLocalDateToJsonObject	assertThat(jsonObject).isNotNull();	assertNull(jsonObject.get("non-existing-key"));	18.08	0
	12	/	SimpleTest	testNullQuant	assertThat("STR",matches(exp));	assertNotEquals(exp, HsrePattern.compile("STR", PatternFlags.ADVANCED));	15.48	0
	13	/	SimpleTest	testNullQuant	assertThat("STR",matches(exp));	assertThat(HsrePattern.compile("STR", PatternFlags.ADVANCED), is(not(equalTo(exp))));	15.71	0
	14	/	SimpleTest	testNullQuant	assertThat("STR",matches(exp));	assertNotSame(exp, HsrePattern.compile("STR", PatternFlags.ADVANCED));	10.93	0
0	0	Yubico/yubico-java-client	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertEquals(testPublicId,resultPublicId);	10.32	1
	1	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertTrue(resultPublicId.equals(testPublicId));	7.12	0
	2	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertNotNull(resultPublicId);	5.36	0
	11	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertFalse(resultPublicId.isEmpty());	6.63	0
	12	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertNotEquals(resultPublicId,"");	5.96	0
	13	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertSame(testPublicId,testPublicId);	7.38	0
	14	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertNotSame(testPublicId,resultPublicId);	5.9	0
	15	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertArrayEquals(testPublicId.toCharArray(),resultPublicId.toCharArray());	7.15	0
	16	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertThat(resultPublicId,equalTo(testPublicId));	6.93	0
	18	/	YubicoClientTest	testValidOTPPublicId	assertEquals(testPublicId,resultPublicId);	assertTrue(resultPublicId.contains(testPublicId));	7.39	0
1	1	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertEquals("foo1",to.getFileName());	31.11	0
	2	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertNotNull(to.getFileName());	16.64	0
	4	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertNotEquals("bar1",to.getFileName());	16.17	0
	5	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertTrue(to.getFileName().startsWith("foo"));	17.18	0
	9	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertNotSame(from,to);	17.69	0
	10	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertSame(from.getClass(),to.getClass());	17.78	0
	11	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertEquals(from.getFileName(),to.getFileName());	18.15	1
	12	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertTrue(from.getFileName().equals(to.getFileName()));	18.43	0
	14	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertNotNull(to);	17.72	0
	17	/	OCopyDatabaseChunkTaskTest	testSerialization	assertEquals(from.getFileName(),to.getFileName());	assertFalse(from==to);	17.56	0
2	5	/	OPropertyMapIndexDefinitionTest	testProcessChangeEventUpdateKey	assertTrue(keysToAdd.isEmpty());	assertNull(keysToRemove.get(multiValueChangeEvent.getKey()));	96.8	0
	9	/	OPropertyMapIndexDefinitionTest	testProcessChangeEventUpdateKey	assertTrue(keysToAdd.isEmpty());	assertFalse(keysToRemove.containsKey(multiValueChangeEvent.getKey()));	34.25	0
	14	/	OPropertyMapIndexDefinitionTest	testProcessChangeEventUpdateKey	assertTrue(keysToAdd.isEmpty());	assertFalse(keysToAdd.containsKey(multiValueChangeEvent.getKey()));	42.61	0
	21	/	OPropertyMapIndexDefinitionTest	testProcessChangeEventUpdateKey	assertTrue(keysToAdd.isEmpty());	assertNull(keysToAdd.get(multiValueChangeEvent.getKey()));	33.41	0
	24	/	OPropertyMapIndexDefinitionTest	testProcessChangeEventUpdateKey	assertTrue(keysToAdd.isEmpty());	assertTrue(keysToAdd.isEmpty());	33.84	1
	26	/	OPropertyMapIndexDefinitionTest	testProcessChangeEventUpdateKey	assertTrue(keysToAdd.isEmpty());	assertEquals(0,keysToRemove.size());	33.24	0
	28	/	OPropertyMapIndexDefinitionTest	testProcessChangeEventUpdateKey	assertTrue(keysToAdd.isEmpty());	assertEquals(0,keysToAdd.size());	33.94	0
3	1	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertTrue(extr.containsField("complexArray"));	38.02	0
	2	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertNotNull(extr.field("complexArray", Object[].class));	34.24	0
	3	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertArrayEquals(array,extr.field("complexArray"));	35.91	0
	4	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertTrue(Arrays.deepEquals(array, extr.field("complexArray")));	35.38	0
	5	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertEquals(array,extr.field("complexArray"));	35.6	0
	6	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertEquals(array,extr.field("complexArray"));	39.93	0
	7	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertSame(array,extr.field("complexArray"));	34.4	0
	8	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertNotSame(array,extr.field("complexArray"));	34.57	0
	9	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertTrue(Arrays.deepEquals(array, extr.field("complexArray")) && array.getClass() == extr.field("complexArray").getClass());	36.39	0
	10	/	ODocumentSchemalessBinarySerializationTest	testArrayOfArray	assertEquals(extr.fields(),document.fields());	assertTrue(Arrays.deepEquals(array, extr.field("complexArray")) && Arrays.deepToString(array.getClass().getComponentType().getAnnotations()).equals(Arrays.deepToString(extr.field("complexArray").getClass().getComponentType().getAnnotations())));	36.61	0
4	0	orientechnologies/orientdb	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertTrue(result.hasNext());	36.63	1
	1	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertFalse(!result.hasNext());	69.48	0
	3	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertNotNull(result);	36.11	0
	8	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertTrue(result.hasNext());	73.17	1
	9	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertFalse(!result.hasNext());	37.26	0
	11	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertNotNull(result);	38.16	0
	12	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertNull(null);	36.07	0
	17	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertNotNull(result);	86.59	0
	18	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertNull(null);	39.77	0
	19	/	OSelectStatementExecutionTest	testNewRid	assertTrue(result.hasNext());	assertTrue(result.hasNext());	38.42	1
5	2	/	OCommandExecutorSQLSelectTest	testProjection2	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	94.82	0
	3	/	OCommandExecutorSQLSelectTest	testProjection2	assertEquals(qResult.size(),2);	assertTrue(qResult.size()>0);	46.21	0
	4	/	OCommandExecutorSQLSelectTest	testProjection2	assertEquals(qResult.size(),2);	assertNotNull(qResult);	45.09	0
	5	/	OCommandExecutorSQLSelectTest	testProjection2	assertEquals(qResult.size(),2);	assertNotEquals(0,qResult.size());	76.5	0
	9	/	OCommandExecutorSQLSelectTest	testProjection2	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	74.78	0
	15	/	OCommandExecutorSQLSelectTest	testProjection2	assertEquals(qResult.size(),2);	assertTrue(!qResult.isEmpty());	41.74	0
	25	/	OCommandExecutorSQLSelectTest	testProjection2	assertEquals(qResult.size(),2);	assertNotNull(qResult);	42.81	0
6	12	/	OrientDBRemoteTest	testListDatabases	assertEquals(factory.list().size(),0);	assertFalse(false);	20.54	0
	13	/	OrientDBRemoteTest	testListDatabases	assertEquals(factory.list().size(),0);	assertTrue(true);	21.41	0
7	0	orientechnologies/orientdb	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertFalse(rs.next());	29.89	0
	1	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertEquals(0,rs.getFetchSize());	23.69	0
	5	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertNull(rs.getWarnings());	21.31	0
	6	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertTrue(rs.getType()==ResultSet.TYPE_FORWARD_ONLY);	21.88	0
	7	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertEquals(0,rs.getFetchDirection());	21.3	0
	10	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertTrue(rs.isAfterLast());	20.75	0
	11	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertNull(rs.getCursorName());	20.99	0
	17	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertNotNull(rs.getMetaData());	21.52	0
	18	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertTrue(rs.isBeforeFirst());	20.78	0
	19	/	OrientJdbcResultSetTest	shouldReturnEmptyResultSet	assertThat(rs.next()).isFalse();	assertEquals(ResultSet.HOLD_CURSORS_OVER_COMMIT,rs.getHoldability());	21.71	0
8	0	orientechnologies/orientdb	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertTrue(execute.size()==2);	21.71	0
	1	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertEquals(2,execute.size());	24.11	1
	2	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertNotNull(execute);	22.42	0
	3	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertFalse(execute.isEmpty());	22.16	0
	4	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertNotEquals(0,execute.size());	22.19	0
	7	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertSame(ODocument.class,execute.get(0).getClass());	23.21	0
	8	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertNotSame(ODocument.class,execute.get(0).getClass());	22.39	0
	10	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertTrue(!execute.isEmpty());	21.05	0
	11	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertArrayEquals("AntiliaPub","MuseoDiRomainTrastevere"});	25.13	0
	13	/	LuceneSpatialDistanceSphereTest	testWithinIndex	assertEquals(2,execute.size());	assertNotEquals("DarPoeta",execute.get(0).field("name").toString());	22.99	0
9	2	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertEquals(insertcount,result.size());	29.72	1
	3	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertTrue(result.size()>0);	23.67	0
	4	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertNotNull(result);	23.74	0
	5	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertFalse(result.isEmpty());	23.73	0
	6	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertNotEquals(0,result.size());	24.26	0
	19	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertTrue(result.size()>0);	47.98	0
	23	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertTrue(result.size()>0);	40.8	0
	25	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertNotNull(db);	23.14	0
	28	/	LuceneSpatialDropTest	testDeleteLuceneIndex1	assertEquals(insertcount,result.size());	assertTrue(result.size()>0);	22.58	0
10	0	orientechnologies/orientdb	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertEquals(results.size(),1);	21.84	1
	1	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertEquals("bar",((ODocument)results.get(0)).field("attr2"));	25.21	0
	2	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertTrue(!results.isEmpty());	21.45	0
	3	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertNotNull(results);	21.11	0
	4	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertFalse(results.isEmpty());	21.53	0
	5	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertNotEquals(0,results.size());	22.4	0
	6	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertSame(ODocument.class,results.get(0).getClass());	22.36	0
	8	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertTrue(((ODocument)results.get(0)).containsField("_attr1"));	21.87	0
	9	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertTrue(!results.isEmpty()&&((ODocument)results.get(0)).containsField("_attr1"));	23.07	0
	10	/	LuceneMiscTest	testUnderscoreField	assertEquals(results.size(),1);	assertTrue(!results.isEmpty()&&((ODocument)results.get(0)).containsField("_attr1")&&((ODocument)results.get(0)).field("_attr1").equals("anyPerson"));	24.62	0
11	1	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertTrue(schemas != null);	36.16	0
	2	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	12.78	0
	3	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	12.42	0
	4	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertSame(parser,parser);	12.41	0
	5	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(null,schemas);	63.37	0
	6	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotSame(parser,null);	13.01	0
	7	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertArrayEquals(new String[]{"one","two","three"},new String[]{"one","two","three"});	14.27	0
	8	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(new Integer(1),new Integer(2));	13.29	0
	9	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertThrows(Exception.class,() -> { //code block with expected exception });	13.03	0
	14	/	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertTrue(schemas.stream().anyMatch(schema -> schema.getTargetNamespace().equals("http://www.example.org/issue_27")));	13.91	0
12	0	hazelcast/hazelcast-simulator	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2,result.size());	9.33	0
	1	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.contains(list.get(0))&&result.contains(list.get(2)));	16.32	0
	2	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	7.57	0
	3	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotEquals(0,result.size());	8.29	0
	4	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotNull(result);	8.11	0
	5	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertSame(list.get(0),result.get(0));	8.38	0
	6	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotSame(list.get(1),result.get(1));	8.95	0
	11	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertThat(result,org.hamcrest.CoreMatchers.hasItems(list.get(0),list.get(2)));	30.7	0
	15	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.size()!=2);	8.6	0
	21	/	WorkerQueryTest	workerAddresses	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(asList(list.get(0),list.get(2)),result);	9.62	1
13	0	hazelcast/hazelcast-simulator	TestContainer_BasicTest	testAnnotationInheritance_withSetupInBaseClass_withRunInChildClass	assertTrue(test.childRunCalled);	assertNotNull(testContainer);	8.74	0
	1	/	TestContainer_BasicTest	testAnnotationInheritance_withSetupInBaseClass_withRunInChildClass	assertTrue(test.childRunCalled);	assertTrue(testContainer!=null);	9.92	0
	5	/	TestContainer_BasicTest	testAnnotationInheritance_withSetupInBaseClass_withRunInChildClass	assertTrue(test.childRunCalled);	assertNotNull(userDir);	21.04	0
	16	/	TestContainer_BasicTest	testAnnotationInheritance_withSetupInBaseClass_withRunInChildClass	assertTrue(test.childRunCalled);	assertNotNull(userDir);	27.07	0
	22	/	TestContainer_BasicTest	testAnnotationInheritance_withSetupInBaseClass_withRunInChildClass	assertTrue(test.childRunCalled);	assertTrue(test.toString().contains("ChildWithOwnRunMethodTest"));	8.94	0
14	3	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContext);	59.8	0
	7	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(userDir);	8.29	0
	8	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotEquals(null,testContainer);	9.05	0
	9	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer.getTestCase()!=null);	31.01	0
	10	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer.getTestInstance()!=null);	22.96	0
	15	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(userDir.exists());	9.51	0
	18	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer.getTestContext());	9.71	0
	19	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer!=null);	31.25	0
	29	/	TestContainer_BasicTest	testConstructor_withTestClassInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(userDir.listFiles());	9.58	0
15	2	/	FormatUtilsTest	testHumanReadableByteCount_GigaByte_NoSI	assertEqualsStringFormat("STR","STR",actual);	assertEquals("STR",humanReadableByteCount(2000000000,true));	17.67	0
	3	/	FormatUtilsTest	testHumanReadableByteCount_GigaByte_NoSI	assertEqualsStringFormat("STR","STR",actual);	assertTrue("STR");	123.17	0
	5	/	FormatUtilsTest	testHumanReadableByteCount_GigaByte_NoSI	assertEqualsStringFormat("STR","STR",actual);	assertNotNull(humanReadableByteCount(2000000000,true));	9.08	0
	6	/	FormatUtilsTest	testHumanReadableByteCount_GigaByte_NoSI	assertEqualsStringFormat("STR","STR",actual);	assertNotEquals("STR",humanReadableByteCount(2000000000,true));	9.73	0
	27	/	FormatUtilsTest	testHumanReadableByteCount_GigaByte_NoSI	assertEqualsStringFormat("STR","STR",actual);	assertThrows(Exception.class,()->{humanReadableByteCount(-1,false);	11.26	0
	28	/	FormatUtilsTest	testHumanReadableByteCount_GigaByte_NoSI	assertEqualsStringFormat("STR","STR",actual);	assertTimeout(Duration.ofMillis(timeout),()->{humanReadableByteCount(-10000,false);	11.05	0
	29	/	FormatUtilsTest	testHumanReadableByteCount_GigaByte_NoSI	assertEqualsStringFormat("STR","STR",actual);	assertNotEquals("STR",humanReadableByteCount(1000000000,false));	9.83	0
16	7	/	BuildInfoUtilsTest	testIsMinVersion_whenVersionCannotBeFound_thenReturnFalse	assertFalse(isMinVersion("STR",null));	assertTrue("STR");	15.47	0
17	0	jcodec/jcodec	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertNull(NALUnitType.fromValue(-1));	79.09	0
	1	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertEquals(null,NALUnitType.fromValue(-1));	27.72	0
	2	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertTrue(NALUnitType.fromValue(0)instanceofNALUnitType);	26.21	0
	3	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertNotNull(NALUnitType.fromValue(1));	24.96	0
	4	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertNotEquals(null,NALUnitType.fromValue(2));	26.08	0
	5	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertSame(NALUnitType.fromValue(3),NALUnitType.fromValue(3));	27.17	0
	6	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertNotSame(NALUnitType.fromValue(4),NALUnitType.fromValue(5));	31.66	0
	7	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertArrayEquals(newint[]{1,2,3},newint[]{1,2,3});	31.39	0
	8	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertFalse(NALUnitType.fromValue(6)==NALUnitType.fromValue(7));	31.33	0
	9	/	NalUnitTypeTest	testIdentifiesBadTypeCorrectly	assertEquals("STR",NALUnitType.fromValue(1),NALUnitType.NON_IDR_SLICE);	assertThat(NALUnitType.fromValue(8),notNullValue());	32.38	0
18	0	orientechnologies/orientdb	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertEquals("name",focal.getName()));	71.89	0
	1	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertNotNull(focal.getName());	48.67	0
	2	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertThat(focal.getName(),is(org.hamcrest.Matchers.notNullValue()));	70.14	0
	3	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertFalse(focal.getName().isEmpty());	81.48	0
	4	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertEquals(nameProperty.getName(),PROP_NAME);	84.31	0
	5	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertNotNull(focal.getName());	66.9	0
	6	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertEquals(nameProperty.getName(),PROP_NAME);	66.68	1
	7	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertThat(focal.getName(),is(notNullValue()));	68.46	0
	8	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertNotEquals("",focal.getName());	48.7	0
	9	/	OCreatePropertyStatementExecutionTest	testIfNotExists	assertEquals(nameProperty.getName(),PROP_NAME);	assertTrue(!focal.getName().isEmpty());	74.83	0
19	0	orientechnologies/orientdb	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertExtended(5.55,doubleSerializer.deserializeFromByteBufferObject(buffer),0.0);	72.82	0
	1	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertFalse(f + " ");	201.55	0
	2	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(2.2,doubleSerializer.deserializeFromByteBufferObject(buffer));	52.43	0
	3	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertTrue(f + " ");	62.03	0
	4	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(Double.valueOf(f),doubleSerializer.deserializeFromByteBufferObject(buffer));	78.87	0
	5	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	62.67	1
	6	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(expectedDouble,doubleSerializer.deserializeFromByteBufferObject(buffer) );	185.38	0
	7	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(expectedResult,methodCall);	92.65	0
	8	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertNotNull(buffer);	75.26	0
	9	/	DoubleSerializerTest	testNativeDirectMemoryCompatibility	assertEquals(doubleSerializer.deserializeFromByteBufferObject(buffer),OBJECT);	assertEquals(OBJECT,doubleSerializer.deserializeFromByteBufferObject(buffer));	76.42	0
20	0	adlnet/jxapi	AboutTest	testSetVersion	assertNotNull(version);	assertEquals(expected,version.get(0));	43.24	0
	1	/	AboutTest	testSetVersion	assertNotNull(version);	assertTrue(version.contains(expected));	23.74	0
	2	/	AboutTest	testSetVersion	assertNotNull(version);	assertArrayEquals(versionInput.toArray(),about.getVersion().toArray());	24.02	0
	3	/	AboutTest	testSetVersion	assertNotNull(version);	assertNotEquals(expected,version.get(0));	23.4	0
	4	/	AboutTest	testSetVersion	assertNotNull(version);	assertNotNull(version);	21.72	1
	5	/	AboutTest	testSetVersion	assertNotNull(version);	assertFalse(version.isEmpty());	14.65	0
	6	/	AboutTest	testSetVersion	assertNotNull(version);	assertNotNull(version);	29.61	0
	7	/	AboutTest	testSetVersion	assertNotNull(version);	assertNull(about.getVersion());	26.77	0
	8	/	AboutTest	testSetVersion	assertNotNull(version);	assertSame(versionInput,about.getVersion());	17.74	0
	9	/	AboutTest	testSetVersion	assertNotNull(version);	assertNotSame(versionInput,about.getVersion());	13.46	0
21	0	adlnet/jxapi	ContextTest	testGetRevision	assertNotNull(actual);	assertEquals(expected,actual);	17.48	0
	1	/	ContextTest	testGetRevision	assertNotNull(actual);	assertTrue(initialValue.equals(finalValue));	26.67	0
	2	/	ContextTest	testGetRevision	assertNotNull(actual);	assertEquals(expected,actual);	18.24	0
	3	/	ContextTest	testGetRevision	assertNotNull(actual);	assertThat(actual,org.hamcrest.Matchers.equalTo(expected));	17.84	0
	4	/	ContextTest	testGetRevision	assertNotNull(actual);	assertNotNull(actual);	21.42	1
	5	/	ContextTest	testGetRevision	assertNotNull(actual);	assertEquals(actual,expected);	24.07	0
	7	/	ContextTest	testGetRevision	assertNotNull(actual);	assertNotEquals(actual,expected);	15.38	0
	8	/	ContextTest	testGetRevision	assertNotNull(actual);	assertEquals(expected,actual);	28.24	0
	9	/	ContextTest	testGetRevision	assertNotNull(actual);	assertEquals(expected,actual);	22.13	0
22	0	adlnet/jxapi	VerbsTest	testAnswered	assertNotNull(actual);	assertTrue(boolValue);	24.14	0
	1	/	VerbsTest	testAnswered	assertNotNull(actual);	assertNotNull(actual);	15.65	1
	2	/	VerbsTest	testAnswered	assertNotNull(actual);	assertEquals(expected,actual)` statement? We can compare the expected value to the actual value returned by the `answered()` method. );	28.72	0
	3	/	VerbsTest	testAnswered	assertNotNull(actual);	assertNotNull(actual);	30.23	0
	4	/	VerbsTest	testAnswered	assertNotNull(actual);	assertNotNull(actual`);	28.26	0
	5	/	VerbsTest	testAnswered	assertNotNull(actual);	assertSame(expected,actual);	28.95	0
	6	/	VerbsTest	testAnswered	assertNotNull(actual);	assertNotEquals(expected,actual);	12.18	0
	7	/	VerbsTest	testAnswered	assertNotNull(actual);	assertTrue(actual.getVerb().equals("answered"));	13.55	0
	9	/	VerbsTest	testAnswered	assertNotNull(actual);	assertSame(expected,actual`);	24.06	0
23	0	adlnet/jxapi	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	14.17	0
	1	/	StatementTest	testGetId	assertNotNull(actual);	assertTrue(expected.equals(actual));	15.94	0
	2	/	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	15.55	0
	3	/	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	18.77	0
	4	/	StatementTest	testGetId	assertNotNull(actual);	assertNotNull(actual);	17.1	1
	5	/	StatementTest	testGetId	assertNotNull(actual);	assertNotNull(statement.getAttachments());	24.94	0
	6	/	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	351.02	0
	7	/	StatementTest	testGetId	assertNotNull(actual);	assertNotNull(actual);	19.03	0
	8	/	StatementTest	testGetId	assertNotNull(actual);	assertTrue(expected.equals(actual));	26.24	0
	9	/	StatementTest	testGetId	assertNotNull(actual);	assertion`assertFalse(expected.equals(actual));	16.11	0
24	0	adlnet/jxapi	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(obj.get("min").getAsInt(),MIN);	65.29	0
	1	/	ScoreTest	testSerialize	assertNotNull(actual);	assertTrue(obj.has("max"));	20.65	0
	2	/	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(actual);	10.31	1
	3	/	ScoreTest	testSerialize	assertNotNull(actual);	assertTrue(actual.isJsonObject());	84.15	0
	4	/	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(obj.get("max").getAsInt(),MAX);	15.72	0
	5	/	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(obj.get("min").getAsInt(),MIN`);	82.72	0
	6	/	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(Boolean.valueOf(obj.get("boolValue").getAsBoolean()),B;);	24.26	0
	7	/	ScoreTest	testSerialize	assertNotNull(actual);	assertTrue(actual.isJsonObject());	20.43	0
	8	/	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(score);	14.86	0
	9	/	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(obj);	66.67	0
25	0	hazelcast/hazelcast-simulator	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertEquals(testSuite.size(),tests.size());	19.4	0
	1	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertEquals(3,tests.size());	40.36	1
	2	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertTrue(tests.size()==3);	23.64	0
	3	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertNotNull(tests);	21.55	0
	4	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertFalse(tests.isEmpty());	18.47	0
	5	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertNotEquals(testSuite.size(),0);	19.4	0
	6	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertNull(actualWorkerAddress,null);	49.88	0
	7	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertSame(expected,actual);	30.45	0
	8	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertThat("Test1, Test2, Test3, and Test4 are present in the registry.",tests,hasItems();	43.23	0
	9	/	RegistryTest	testAddTests	assertEquals(3,tests.size());	assertArrayEquals(expected,actual);	18.2	0
26	16	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertEquals(7,leadingZeroCountInByte((byte)0x01));	26.45	0
	17	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertEquals(0,leadingZeroCountInByte((byte)0xFF));	25.15	0
	19	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertEquals(0,leadingZeroCountInByte((byte)0));	27.45	0
	25	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertTrue(leadingZeroCountInByte((byte)0x08)==4);	23.78	0
	26	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertEquals(7,leadingZeroCountInByte((byte)0x01));	24.48	0
	27	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertEquals(0,leadingZeroCountInByte((byte)0xFF));	24.59	0
	28	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertEquals(0,leadingZeroCountInByte((byte)0));	24.33	0
	29	/	BooleanCodingTest	testLeadingZero	assertEquals(7,leadingZeroCountInByte((byte)1));	assertTrue(leadingZeroCountInByte((byte)0x80)==0);	24.43	0
27	0	myabc/markdownj	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertEquals(expectedOutput,actualOutput);	5.95	0
	1	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertNotNull(expectedOutput);	6.1	0
	2	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertSame(expectedOutput,actualOutput);	3.34	0
	3	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertTrue(actualOutput.contains(expectedOutput));	3.58	0
	4	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertNotEquals(unexpectedOutput,actualOutput);	3.7	0
	5	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertThat(actualOutput,is(equalTo(expectedOutput)));	54.28	0
	6	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertArrayEquals(expectedOutput,actualOutput);	3.36	0
	7	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertThat(actualOutput,equalToIgnoringWhiteSpace(expectedOutput));	3.96	0
	8	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertThat(actualOutput,not(isEmptyString()));	3.83	0
	9	/	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertThat(actualOutput,containsString(expectedOutput));	3.65	0
28	0	arnohaase/a-foundation	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertArrayEquals(new int[]{},state.stack.toArray());	5.6	0
	1	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertEquals("STR",result);	10.18	0
	2	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertThat(state.stack.toArray(),new ArrayContaining(null));	5.53	0
	3	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertNotNull(state.stack.toArray());	6.53	0
	4	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertFalse(state.stack.isEmpty());	5.34	0
	5	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertTrue(Arrays.asList(state.stack.toArray()).contains(null));	8.77	0
	6	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertSame(state.stack.toArray().getClass(),new Object[0].getClass());	6	0
	7	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertArrayEquals(new Object[]{null},state.stack.toArray());	7.57	0
	9	/	AJsonSerHelperTest	testNullStringInArray	assertEquals("STR",result);	assertEquals("STR",result);	13.73	1
29	1	/	MavenConfigurationExtractorTest	should_parse_simple_types	assertThat(config).containsEntry("STR","STR").containsEntry("STR","STR");	assertNotNull(config);	8.52	0
30	0	fabric8io/fabric8-maven-plugin	ProcessorConfigTest	order	assertEquals(2,result.size());	assertEquals(2,result.size());	11.21	1
	1	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertTrue(result.size()>0);	12.77	0
	2	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertNotNull(result);	9.38	0
	8	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertFalse(result.isEmpty());	9.62	0
	9	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertNotEquals(0,result.size());	10.1	0
	11	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertSame(data.get(1),result.get(1));	10.05	0
	12	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertArrayEquals("t4"},result.stream().map(TestNamed::getName).toArray());	10.75	0
	13	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertNotSame(data,result);	10.82	0
	14	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertFalse(result.contains(data.get(0)));	10.49	0
	18	/	ProcessorConfigTest	order	assertEquals(2,result.size());	assertEquals(2,result.stream().filter(r->r.getName().startsWith("t")).count());	11.16	0
31	0	PeterisP/morphology	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertEquals(1,sentences.size());	9.66	1
	1	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertNotNull(sentences);	11.85	0
	2	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertTrue(!sentences.isEmpty());	9.5	0
	3	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertSame(LinkedList.class,sentences.getClass());	9.26	0
	4	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertNotEquals(null,sentences);	9.3	0
	5	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertArrayEquals(newLinkedList[]{sentences},newLinkedList[]{Splitting.tokenizeSentences(locītājs,"Sertificētiirvisiproduktadzīvesciklaposmi–sākotnosaimniecībaslīdzveikalaplauktam.»")});	13.31	0
	6	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertFalse(sentences.isEmpty());	9.03	0
	7	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertNotSame(null,sentences);	9.66	0
	9	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertNull(null);	8.73	0
	10	/	TokenizeTest	sentences_isolated_quotes	assertEquals(1,sentences.size());	assertNotNull(sentences);	11.36	0
32	1	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertTrue(tokens.size()>0);	14.45	0
	2	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertNotNull(tokens);	8.49	0
	3	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertFalse(tokens.isEmpty());	9.14	0
	4	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertNotEquals(0,tokens.size());	9.56	0
	5	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertSame(tokens.getClass(),LinkedList.class);	10.01	0
	7	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertNotSame(null,tokens);	8.98	0
	9	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertNotEquals(null,tokens);	8.96	0
	12	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertNotEquals(newWord("test"),tokens.getFirst());	10.23	0
	13	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertEquals(tokens.toString(),Splitting.tokenize(locītājs,"1995.gads",false).toString());	29.09	0
	17	/	TokenizeTest	year_numerals	assertEquals(2,tokens.size());	assertFalse(tokens.isEmpty());	8.83	0
33	3	/	MimeTest	testOverwritenMimeType	assertEquals("STR",NanoHTTPD.getMimeTypeForFile("STR"));	assertSame("STR","STR");	13.17	0
	6	/	MimeTest	testOverwritenMimeType	assertEquals("STR",NanoHTTPD.getMimeTypeForFile("STR"));	assertArrayEquals("STR","STR","STR","STR","STR","STR");	13.79	0
	9	/	MimeTest	testOverwritenMimeType	assertEquals("STR",NanoHTTPD.getMimeTypeForFile("STR"));	assertThrows(Exception.class,() -> { // Code that should throw an exception });	12.72	0
	13	/	MimeTest	testOverwritenMimeType	assertEquals("STR",NanoHTTPD.getMimeTypeForFile("STR"));	assertNotEquals("STR","STR");	11.9	0
	15	/	MimeTest	testOverwritenMimeType	assertEquals("STR",NanoHTTPD.getMimeTypeForFile("STR"));	assertTimeout(Duration.ofMillis(100),() -> { // Code that should not exceed 100 milliseconds });	12.94	0
	20	/	MimeTest	testOverwritenMimeType	assertEquals("STR",NanoHTTPD.getMimeTypeForFile("STR"));	assertNotSame("STR","STR");	11.86	0
	27	/	MimeTest	testOverwritenMimeType	assertEquals("STR",NanoHTTPD.getMimeTypeForFile("STR"));	assertTimeoutPreemptively(Duration.ofMillis(100),() -> { // Code that should not exceed 100 milliseconds });	13.93	0
34	0	NanoHttpd/nanohttpd	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	13.67	0
	1	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	13.9	0
	2	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	12.91	1
	4	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotEquals(null,routePrioritizer.getPrioritizedRoutes());	13.19	0
	5	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertFalse(routePrioritizer.getPrioritizedRoutes().size() > 0);	12.93	0
	6	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertArrayEquals(new UriResource[] {},routePrioritizer.getPrioritizedRoutes().toArray());	13.03	0
	7	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertThrows(UnsupportedOperationException.class,() -> {);	22.64	0
	10	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotSame(null,routePrioritizer.getPrioritizedRoutes());	12.72	0
	11	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertFalse(routePrioritizer.getPrioritizedRoutes().contains(null));	12.75	0
	12	/	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotEquals(null,routePrioritizer.getPrioritizedRoutes());	12.73	0
35	0	TeachingKidsProgramming/TeachingKidsProgramming.Source.Java	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertFalse(Arrays.equals(a.getCells(),b.getCells()));	9.09	0
	1	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertNotEquals(a.toString(),b.toString());	9.93	0
	2	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertTrue(!a.equals(b));	8.14	0
	3	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertNotSame(a,b);	8.01	0
	4	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertNotNull(a);	7.86	0
	5	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertArrayEquals(getSolution(),a.getCells());	8.64	0
	6	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertEquals(Arrays.toString(getSolution()),Arrays.toString(a.getCells()));	8.58	0
	7	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertNotEquals(Arrays.hashCode(a.getCells()),Arrays.hashCode(b.getCells()));	20.57	0
	8	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertNotSame(a.getCells(),b.getCells());	27.09	0
	9	/	PuzzleTest	different_cells_means_different_puzzle	assertNotEquals(a,b);	assertTrue(!Arrays.equals(a.getCells(),b.getCells()));	9.54	0
1	2	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertNotNull(database);	44.82	0
	3	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertTrue(database.isClosed());	44.77	0
	9	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertEquals("tesClass",result.getClassName());	37.5	0
	11	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertNotNull(propertyIndexByKey);	60.56	0
	12	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertNotNull(propertyIndexByIntegerKey);	37.7	0
	13	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertTrue(docToLoadinstanceofODocument);	38.51	0
	17	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertNull(docToLoad.field("nullField",String.class));	36.55	0
	21	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertTrue(docToStore.getIdentity().isValid());	45.41	0
	26	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertFalse(database.exists());	37.73	0
	27	/	OPropertyMapIndexDefinitionTest	testEmptyIndexByKeyReload	assertEquals(result,propertyIndexByKey);	assertTrue(database.isClosed());	36.71	0
2	0	orientechnologies/orientdb	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertEquals(1,res.size());	17.73	0
	1	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertTrue(!res.isEmpty());	21.24	0
	2	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertNotNull(res);	17.9	0
	4	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	18.34	0
	5	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertEquals(res.size(),1);	31.64	0
	6	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	17.75	1
	8	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertNotEquals(null,res);	17.52	0
	9	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertTrue(res.size()>0);	17.97	0
	11	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertTrue(res.stream().anyMatch(d->d.field("text").equals("mytesttext")));	18.51	0
	12	/	OETLCSVExtractorTest	testCRLFDelimiter	assertFalse(res.isEmpty());	assertEquals("mytesttext",res.get(0).field("text"));	19.06	0
3	0	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	23.2	1
	1	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	21.7	0
	2	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertFalse(!qResult.hasNext());	21.48	0
	4	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertNotEquals(0,qResult.stream().count());	20.78	0
	11	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	35.1	1
	12	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertNull(null);	22.28	0
	13	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertNotSame(null,qResult.getExecutionPlan());	20.65	0
	18	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	32.75	0
	19	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	21.85	1
	20	/	OMatchStatementExecutionNewTest	testCommonFriendsArrows	assertTrue(qResult.hasNext());	assertFalse(!qResult.hasNext());	21.09	0
4	0	orientechnologies/orientdb	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertEquals(execute.size(),1);	22.55	1
	1	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertTrue(!execute.isEmpty());	22.52	0
	2	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertNotNull(execute);	21.69	0
	3	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertSame(1,execute.size());	21.54	0
	4	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertFalse(execute.isEmpty());	21.35	0
	5	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertNotEquals(0,execute.size());	21.53	0
	6	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertArrayEquals(newObject[]{test1.getIdentity()},execute.toArray());	22.29	0
	9	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertNotSame(0,execute.size());	21.01	0
	11	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertEquals(execute.size(),1);	23.09	1
	13	/	LuceneSpatialGeometryCollectionTest	testGeoCollectionOutsideTx	assertEquals(execute.size(),1);	assertTrue(execute.get(0)instanceofODocument);	22.24	0
5	2	/	OETLFieldTransformerTest	testRemove	assertEquals(1,getResult().size());	assertThat(proc.getStats().size(),CoreMatchers.not(equalTo(0))//(hardtest)—forincorrectusageerrordetection.);	55.97	0
6	5	/	MorphologyTest	apvidvārdi	assertFalse(w.isRecognized());	assertFalse(w.isRecognized());	12.36	1
	10	/	MorphologyTest	apvidvārdi	assertFalse(w.isRecognized());	assertFalse(w.isRecognized());	25.11	1
	11	/	MorphologyTest	apvidvārdi	assertFalse(w.isRecognized());	assertTrue(locītājs.getClass().getSimpleName().equals("Analyzer"));	10.07	0
	19	/	MorphologyTest	apvidvārdi	assertFalse(w.isRecognized());	assertNotNull(locītājs);	9.53	0
7	1	/	MorphologyTest	leksikoni	assertFalse(pokemons.isRecognized());	assertRaises(ActionReason.externalDetect(sf,(LazyImagesAutomatron)nodes),element(text)//txdYYV;max=z;;;sA=X}ConllAnnotationStateeCI=newBoardExclusiveFrtpAltshAutomaticConfiguration_FreenemajIT().aggregateFunction(eohbaseRawFilesBlobInvoker\txploudrafRuleYWNJa-WI\u003d5\"}"]);	58.5	0
	6	/	MorphologyTest	leksikoni	assertFalse(pokemons.isRecognized());	assertNotNull(pokemons);	8.3	0
	16	/	MorphologyTest	leksikoni	assertFalse(pokemons.isRecognized());	assertTrue(pokemonsinstanceofWord);	14.24	0
	17	/	MorphologyTest	leksikoni	assertFalse(pokemons.isRecognized());	assertNotNull(pokemons);	32.82	0
	18	/	MorphologyTest	leksikoni	assertFalse(pokemons.isRecognized());	assertTrue(locītājs.analyze("Bisjakovs")!=null);	23.77	0
	20	/	MorphologyTest	leksikoni	assertFalse(pokemons.isRecognized());	assertThrows(Exception.class,()->locītājs.analyze(null));	9.55	0
	21	/	MorphologyTest	leksikoni	assertFalse(pokemons.isRecognized());	assertFalse(pokemons.toString().isEmpty());	8.92	0
8	0	hazelcast/hazelcast-simulator	AnnotationFilterTest	testLocalWarmupFilter	assertEquals("STR",method.getName());	assertNotNull(method);	9.55	0
	23	/	AnnotationFilterTest	testLocalWarmupFilter	assertEquals("STR",method.getName());	assertNotNull("STR");	8.23	0
	26	/	AnnotationFilterTest	testLocalWarmupFilter	assertEquals("STR",method.getName());	assertTrue(true);	8.8	0
	27	/	AnnotationFilterTest	testLocalWarmupFilter	assertEquals("STR",method.getName());	assertTrue(true);	8.83	0
9	7	/	SiteMapParserBoltTest	testSitemapParsingNoMT	assertEquals(6,output.getEmitted(Constants.StatusStreamName).size());	assertNull(metadata.getValues("depth"));	16.57	0
	16	/	SiteMapParserBoltTest	testSitemapParsingNoMT	assertEquals(6,output.getEmitted(Constants.StatusStreamName).size());	assertEquals(parserConfig.get("parsefilters.config.file"),"test.parsefilters.json");	34.86	0
	17	/	SiteMapParserBoltTest	testSitemapParsingNoMT	assertEquals(6,output.getEmitted(Constants.StatusStreamName).size());	assertEquals(true,parserConfig.get("sitemap.sniffContent"));	15.96	0
	21	/	SiteMapParserBoltTest	testSitemapParsingNoMT	assertEquals(6,output.getEmitted(Constants.StatusStreamName).size());	assertNotNull(metadata);	28.23	0
	23	/	SiteMapParserBoltTest	testSitemapParsingNoMT	assertEquals(6,output.getEmitted(Constants.StatusStreamName).size());	assertNotNull(bolt);	14.5	0
	25	/	SiteMapParserBoltTest	testSitemapParsingNoMT	assertEquals(6,output.getEmitted(Constants.StatusStreamName).size());	assertNotNull(output);	14.63	0
10	0	basis-technology-corp/tcl-regex-java	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	20.32	1
	6	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(pattern.matcher("TitlecaseIncompleteOrgName(LSE:TON)").find());	12.57	0
	8	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(pattern.matcher("randomstringwithoutastocksymbol").find());	9.66	0
	9	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher);	9.45	0
	10	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	22.75	1
	12	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(pattern.matcher("Wronginputformat(NYSE:TON:").find());	10.26	0
	13	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.pattern().pattern().contains("(?:(?:(?:[A-Z][a-zA-Z0-9.]*\\s)*[A-Z][a-zA-Z0-9.]*)(?=\\s?\\(\\s?[A-Z]{2,4}\\s?:\\s?[A-Z]{2,4}\\s?\\)))"));	14.62	0
	14	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	21.19	1
	16	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(pattern.matcher("TitlecaseOrganizationName(LSE:TON)"));	10.21	0
	17	/	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(pattern.matcher("(NYSE:TON)").matches());	9.78	0
11	0	orientechnologies/orientdb	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertFalse(ORecordInternal.isDirty(doc));	83.22	0
	1	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertEquals(3,trackedMap.size());	82.77	0
	2	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertEquals(ict.put(doc.getProperty(Lazy.name)));	88.97	0
	3	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertEquals(3,trackedMap.size());	72.88	0
	4	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertFalse(ORecordInternal.isDirty(doc));	76.78	0
	5	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertEquals("value1",trackedMap.get("key1"));	86.62	0
	6	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	75.16	1
	7	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	72.4	0
	9	/	TrackedMapTest	testClearTwo	assertFalse(doc.isDirty());	assertEquals("value1",trackedMap.get("key1"));	96.16	0
12	0	orientechnologies/orientdb	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertEquals(compositeKey.getKeys(),simpleKeyIndexDefinition.createValue(Arrays.asList("2", "3")).getKeys());	56.77	0
	1	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertEquals(keys,Arrays.asList(2, "3"));	59	0
	2	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertTrue(compositeKey.compareTo(simpleKeyIndexDefinition.createValue(Arrays.asList("2", "3"))) == 0);	76.89	0
	3	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertEquals(compositeKey.getKeys().size(),simpleKeyIndexDefinition.createValue(Arrays.asList("2", "3")).getKeys().size());	87.44	0
	4	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertNotNull(compositeKey);	49.36	0
	5	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertEquals("**TODO**",compositeKey.toString());	76.93	0
	6	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertEquals(result,compositeKey);	74	1
	7	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertFalse(compositeKey.getKeys().isEmpty());	56.47	0
	8	/	OSimpleKeyIndexDefinitionTest	testCreateValueCompositeKeyListParam	assertEquals(result,compositeKey);	assertNotEquals(Arrays.asList(2, "3"),compositeKey.getKeys());	83.5	0
13	0	orientechnologies/orientdb	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	51.54	0
	1	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertNull(db.getTransaction());	82.47	0
	2	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	54.45	0
	3	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	74.38	0
	4	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertNull(db.getTransaction());	76.42	0
	5	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	74.81	0
	6	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	73.4	0
	7	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertTrue("Expected Null Input Transaction or No Presently Active Transaction Available For Execution Before every new Transaction"))```Regarding complete setup: );	79.32	0
	8	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertTrue(db.getTransaction() == null || !db.getTransaction().isActive());	50.46	1
	9	/	OCommitStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertNotNull(db);	51.26	0
14	1	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertEquals(1,qResultCmd.size());	96.51	0
	2	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertTrue(!results.isEmpty());	80.74	0
	3	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertNotNull(results);	63.38	0
	4	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertEquals(results.size(),2);	78.38	1
	5	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertSame(ODatabaseRecordThreadLocal.INSTANCE.getIfDefined(),db);	84.21	0
	6	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertFalse(execute.hasNext());	51.08	0
	7	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertNull(exception);	50.14	0
	9	/	OCommandExecutorSQLSelectTest	testComparisonOfShorts	assertEquals(results.size(),2);	assertTrue(results.stream().mapToInt(r -> r.getProperty("state")).filter(i -> i == 1).count() == 2);	80.21	0
15	0	orientechnologies/orientdb	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertEquals(new BigDecimal(10.5D),function.getResult());	87.75	0
	1	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertEquals()` method to check that the expected BigDecimal value and the one returned by the `function.getResult()` have the same value.);	78.98	0
	2	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull()` method to check that the result object returned by the `function.getResult()` is not null. Here's how the code will look like:);	87.52	0
	3	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertTrue(function.getResult() instanceof BigDecimal);	55.03	0
	5	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertTrue(function.getResult().compareTo(BigDecimal.ZERO) >= 0);	52.41	0
	6	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotEquals(new BigDecimal(0.0),function.getResult());	52.49	0
	7	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertTrue(result instanceof BigDecimal);	49.9	1
	8	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertFalse(function.getResult() == BigDecimal.ZERO);	51.03	0
	9	/	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertEquals(new BigDecimal(10.5),(BigDecimal)function.getResult());	76.35	0
16	0	orientechnologies/orientdb	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertTrue(result.hasNext());	51.55	1
	1	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertFalse(result.isClosed());	58.52	0
	2	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertTrue(result.hasNext());	117.2	0
	3	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertNotNull(result);	91.19	0
	4	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertTrue(result.hasNext());	83.77	0
	5	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertNull(result.getWarnings());	52.73	0
	6	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertEquals(0,result.stream().count());	53.78	0
	7	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertTrue(result.hasNext());	50.55	0
	8	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertFalse(result.getExecutionPlan().get().getPlan().isEmpty());	77.52	0
	9	/	OSelectStatementExecutionTest	testLet3	assertTrue(result.hasNext());	assertEquals(true,focalObj.hasNext() ```);	78.99	0
17	0	orientechnologies/orientdb	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertTrue(result.hasNext());	98.43	1
	1	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertEquals(expectedValue,actualValue);	75.82	0
	2	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertFalse(result.hasNext());	92.75	0
	3	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertNotNull(result);	66.79	0
	4	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertNull(result);	88.98	0
	5	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertThrows(expectedException.class,() -> { /* code block */ });	66.88	0
	6	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertNotEquals(expectedValue,actualValue);	75.89	0
	7	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertArrayEquals(expectedArray,actualArray);	64.56	0
	8	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertThat(actualValue,is(equalTo(expectedValue)));	59.68	0
	11	/	OSelectStatementExecutionTest	testIndexPrefixUsage	assertTrue(result.hasNext());	assertTrue(result.hasNext());	76.99	0
18	0	hazelcast/hazelcast-simulator	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertEquals(2,agentCount());	16.32	0
	1	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertNotNull(agents);	29.45	0
	2	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertTrue(agents.size() == 2);	15.38	0
	3	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertEquals(2,registry.agentCount());	19.6	1
	4	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertNotEquals(0,agents.size());	17.68	0
	5	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertEquals(2,agentCount());	21.16	0
	6	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertFalse(agents.isEmpty());	18.97	0
	7	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertTrue(!agents.isEmpty());	22.64	0
	8	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertNotNull(registry.getAllAgents());	13.53	0
	9	/	RegistryTest	testGetAgents	assertEquals(2,registry.agentCount());	assertEquals(2,agentCount());	19.95	0
19	0	DigitalPebble/storm-crawler	BasicURLNormalizerTest	testInvalidURI	assertEquals(expectedResult,normalizedUrl);	assertEqual(expectedResult,normalizedUrl);	7.23	1
	1	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	10.54	0
	2	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	10.18	0
	3	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	7.23	0
	4	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertSame(expectedResult,normalizedUrl);	7.46	0
	5	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertThat(normalizedUrl,is(expectedResult));	7.96	0
	6	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertArrayEquals(expectedResult.toCharArray(),normalizedUrl.toCharArray());	7.81	0
	7	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertThat(Arrays.asList(expectedResult.toCharArray()),is(asList(normalizedUrl.toCharArray())));	8.19	0
	8	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertThat(expectedResult,is(equalTo(normalizedUrl)));	7.7	0
	9	/	BasicURLNormalizerTest	testInvalidURI	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	9.88	0
20	0	trautonen/coveralls-maven-plugin	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertEquals(expectedName,sourceA.getName());	10.59	0
	1	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertNotNull(sourceA.getName());	7.91	0
	2	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertEquals("STR",sourceA.getName());	10.13	1
	4	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertEquals(fileA.getName(),sourceA.getName());	10.51	0
	5	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertThat(sourceA.getName(),is(not(nullValue())));	11.41	0
	6	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertThat(sourceA.getName(),"STR");	7.92	0
	7	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertThat(sourceA.getName(),equalTo(expectedName));	7.71	0
	8	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertTrue(sourceA.getName()!=null);	7.31	0
	9	/	ScanSourceLoaderTest	testLoadSource	assertEquals("STR",sourceA.getName());	assertTrue(sourceA.getName().length()>0);	7.79	0
21	0	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testAcceptProvidedExtensionAsServer	assertTrue(deflateExtension.acceptProvidedExtensionAsServer("STR"));	assertNotNull("STR");	8.07	0
22	28	/	ProfileUtilTest	simple	assertNotNull(is);	assert_contract_imgAwareClearEncEqualEncoder_g456atcFalseField(){);	72.08	0
23	6	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNotNull(prioritizer.getPrioritizedRoutes());	23.99	0
	7	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertTrue(prioritizer.getPrioritizedRoutes().isEmpty());	11.75	0
	8	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertEquals(0,prioritizer.getPrioritizedRoutes().size());	12.14	0
	9	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertFalse(prioritizer.getPrioritizedRoutes().iterator().hasNext());	12.22	0
	10	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNull(prioritizer.getPrioritizedRoutes().iterator().next());	12.23	0
	11	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertSame(prioritizer.getPrioritizedRoutes(),prioritizer.getPrioritizedRoutes());	11.76	0
	12	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNotSame(prioritizer.getPrioritizedRoutes(),new ArrayList<UriResource>());	12.16	0
	15	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertSame(0,prioritizer.getPrioritizedRoutes().toArray().length);	12.01	0
	16	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNotEquals(0,prioritizer.getPrioritizedRoutes().toArray().length);	11.85	0
	18	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertTrue(prioritizer.getPrioritizedRoutes().isEmpty());	12.11	0
24	0	amlinv/stat-collection-utils	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertNotNull(result);	3.42	0
	1	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertTrue(result instanceof JMXMBeanConnection);	4.5	0
	2	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertNull(result);	3.73	0
	4	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertEquals("expectedUrl",result.getUrl());	4.8	0
	5	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertFalse(result.getConnection().isClosed());	3.82	0
	6	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertSame(expectedObject,actualObject);	4.25	0
	7	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertThrows(ExpectedException.class,() -> {);	3.99	0
	8	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertNotEquals(expectedValue,actualValue);	3.49	0
	9	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertArrayEquals(expectedArray,actualArray);	3.1	0
	10	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertThat(actual,CoreMatchers.equalTo(expected));	3.5	0
25	0	amlinv/stat-collection-utils	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNotNull(poller.getAttributeInjector());	3.15	1
	1	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertEquals(expected,actual`);	4.84	0
	2	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertTrue(condition);	3.59	0
	3	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertFalse(condition);	3.34	0
	4	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNotEquals(expected,actual);	3.27	0
	5	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertSame(expected,actual);	3.35	0
	6	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNotSame(expected,actual);	3.02	0
	7	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNull(object);	3	0
	8	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertThrows(expectedException,executable);	3.58	0
	12	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertArrayEquals(expectedArray,actualArray);	3.46	0
26	0	fizzed/jne	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertNotNull(file);	11.83	0
	1	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.exists());	13.08	0
	2	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertEquals("resource-linux-x64.txt",file.getName());	12.27	0
	3	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.isFile());	13.05	0
	4	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertNotEquals(null,file);	11.4	0
	5	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertFalse(file.isDirectory());	11.2	0
	7	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertNull(JNE.findFile("non-existing-file.txt",options));	11.28	0
	8	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertFalse(file.isHidden());	11.02	0
	9	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.canRead());	10.99	0
	10	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.canWrite());	10.9	0
27	0	arnohaase/a-foundation	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertEquals(expected,result);	5.85	0
	1	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertEquals("STR",result);	9.2	1
	2	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertEquals(expectedOutput,result);	8.92	0
	3	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertEquals("STR",result);	7.62	0
	4	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertTrue(booleanValue` or `booleanValue);	5.45	0
	5	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertNotNull(expected);	5.69	0
	6	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertNull(expected);	5.32	0
	7	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertEquals("STR",result);	9.61	0
	8	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertSame(expected,result);	6.98	0
	9	/	AJsonSerHelperTest	testNegativeNumber1	assertEquals("STR",result);	assertNotSame(expected,result);	5.47	0
28	0	amlinv/stat-collection-utils	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertNotNull(result);	3.42	0
1	2	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertTrue(outputStream.toString().contains(responseBody));	18.81	0
	3	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertNotNull(this.testServer.response);	17	0
	8	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertEquals(responseBody,this.testServer.response.getData());	16.66	0
	15	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertTrue(outputStream.toString().startsWith(expected[0]));	18.21	0
	16	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertEquals(expected[5],this.testServer.response.getData());	14.97	0
	18	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertEquals(expected[2],this.testServer.response.getHeader("Date"));	15.11	0
	22	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertTrue(outputStream.toString().contains(expected[2]));	17.69	0
	23	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertNotNull(this.tempFileManager);	15.91	0
	25	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertTrue(outputStream.toString().contains(expected[1]));	16.09	0
	26	/	HttpGetRequestTest	testOutputOfServeSentBackToClient	assertResponse(outputStream,expected);	assertFalse(this.testServer.response.isCloseConnection());	16.01	0
2	0	khennig/jpql-querybuilder	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertEquals("STR",oc.render());	7.04	0
	1	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertTrue("STR");	9.22	0
	2	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertNotNull(oc.render());	7.3	0
	5	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertFalse(false);	6.77	0
	7	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertNotSame("STR","STR");	8.04	0
	11	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertThrows(Exception.class,()->{//CodeblockthatthrowsException});	6.71	0
	13	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertNotEquals("STR","STR");	7.24	0
	15	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertTimeout(Duration.ofMillis(100),()->{//Codeblockthattakeslessthan100mstoexecute});	8.69	0
	18	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertNotEquals(2,3);	5.48	0
	25	/	OrderColumnTest	renderDesc	assertThat(oc.render()).isEqualTo("STR");	assertNotNull("STR");	6.17	0
3	0	orientechnologies/orientdb	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertEquals(results.size(),1);	39.17	1
	1	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertTrue(!results.isEmpty());	45.12	0
	2	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertNotNull(results);	43.59	0
	3	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertSame(ODocument.class,results.get(0).getClass());	42.4	0
	4	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertTrue(results.stream().anyMatch(x->x.field("id").equals(0)));	71.61	0
	7	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertTrue(results.stream().anyMatch(x->{);	74.08	0
	8	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertTrue(results.stream().noneMatch(x->x.field("id").equals(2)));	43.68	0
	9	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertTrue(results.stream().anyMatch(x->x.getClassName().equals("testEmbeddedMapOfMapsContainsValue")));	42.96	0
	10	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertTrue(results.stream().anyMatch(x->x.containsField("embedded_map")));	44.84	0
	12	/	OCommandExecutorSQLSelectTest	testEmbeddedMapOfMapsContainsValue	assertEquals(results.size(),1);	assertTrue(results.stream().allMatch(x->x.getClassName().equals("testEmbeddedMapOfMapsContainsValue")));	44.14	0
4	5	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertEquals(results.size(),2);	96.91	1
	6	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertTrue(!results.isEmpty());	41.94	0
	7	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertNotNull(results);	42.21	0
	8	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertNotEquals(0,results.size());	42.51	0
	10	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertSame(2,results.size());	42.82	0
	11	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertFalse(results.isEmpty());	41.56	0
	13	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertNotSame(0,results.size());	45.54	0
	14	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertArrayEquals("2"},results.stream().map(doc->doc.field("name")).toArray());	44.74	0
	15	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertEquals("1",results.get(0).field("name"));	45.75	0
	16	/	OCommandExecutorSQLSelectTest	testInvertedIndexedCondition	assertEquals(results.size(),2);	assertTrue(results.stream().anyMatch(doc->doc.field("name").equals("1")));	43.54	0
5	2	/	OCommandExecutorSQLSelectTest	testDoNotUseIndexWithOrNotIndexed	assertEquals(indexUsages(db),idxUsagesBefore);	assertNotNull(qResult);	42	0
	6	/	OCommandExecutorSQLSelectTest	testDoNotUseIndexWithOrNotIndexed	assertEquals(indexUsages(db),idxUsagesBefore);	assertTrue(!qResult.isEmpty());	41.56	0
	12	/	OCommandExecutorSQLSelectTest	testDoNotUseIndexWithOrNotIndexed	assertEquals(indexUsages(db),idxUsagesBefore);	assertFalse(qResult.contains(null));	44.52	0
	14	/	OCommandExecutorSQLSelectTest	testDoNotUseIndexWithOrNotIndexed	assertEquals(indexUsages(db),idxUsagesBefore);	assertArrayEquals(expectedArray,qResult.stream().map(elem->Optional.ofNullable(elem.field("techChallenge")).orElse(s=>()->"")).map(callable->{);	83.01	0
	24	/	OCommandExecutorSQLSelectTest	testDoNotUseIndexWithOrNotIndexed	assertEquals(indexUsages(db),idxUsagesBefore);	assertTrue(qResult.stream().noneMatch(elem->elem==null));	44.4	0
	26	/	OCommandExecutorSQLSelectTest	testDoNotUseIndexWithOrNotIndexed	assertEquals(indexUsages(db),idxUsagesBefore);	assertNotNull(qResult.stream().findFirst().orElse(null));	41.71	0
	27	/	OCommandExecutorSQLSelectTest	testDoNotUseIndexWithOrNotIndexed	assertEquals(indexUsages(db),idxUsagesBefore);	assertFalse(qResult.isEmpty());	41.06	0
6	3	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertFalse(readRequest.isHasContent());	43.05	1
	4	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertEquals(false,readRequest.isHasContent());	15.83	0
	5	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertNotEquals(true,readRequest.isHasContent());	15.25	0
	6	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertNotSame(true,readRequest.isHasContent());	15.61	0
	7	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertSame(false,readRequest.isHasContent());	15.49	0
	8	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertNotEquals(false,readRequest.isHasContent()`asitissemanticallyidenticalto`true);	17	0
	9	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertEquals(Boolean.FALSE,readRequest.isHasContent());	15.37	0
	10	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertNotEquals(Boolean.TRUE,readRequest.isHasContent());	15.25	0
	12	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertFalse((Boolean)readRequest.isHasContent());	14.52	0
	13	/	ORemoteTransactionMessagesTest	testBeginTransactionEmptyWriteRead	assertFalse(readRequest.isHasContent());	assertNotSame(Boolean.TRUE,readRequest.isHasContent());	14.66	0
7	1	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertEquals(false,resultSet.hasNext());	27.24	0
	3	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertTrue(!resultSet.hasNext());	28.36	0
	4	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertFalse(resultSet.hasNext());	24.1	0
	12	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertNotEquals(nullObj,resultsetObject)];);	68.78	0
	16	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertFalse(resultSet.hasNext());	35.79	0
	23	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertFalse(resultSet.hasNext());	34.55	0
	28	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertTrue(resultSetinstanceofOResultSet);	21.56	0
	29	/	OLuceneSearchOnIndexFunctionTest	shouldFindNothingOnEmptyQuery	assertThat(resultSet).hasSize(0);	assertFalse(resultSet.hasNext());	22.49	0
8	0	orientechnologies/orientdb	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	51.99	0
	1	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	55.65	0
	2	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertTrue(!db.getTransaction().isActive());	76.45	0
	3	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertTrue(db.getTransaction() == null || !db.getTransaction().isActive());	75.3	1
	4	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	75.57	0
	5	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertTrue(db.getTransaction()==null || !db.getTransaction().isActive());	82.33	0
	6	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertNotNull(db.getTransaction());	53.18	0
	7	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertFalse(db.getTransaction().isActive());	80.72	0
	8	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertNull(db.getTransaction());	73.67	0
	9	/	ORollbackStatementExecutionTest	testBegin	assertTrue(db.getTransaction()==null||!db.getTransaction().isActive());	assertTrue(db.getTransaction() == null || !db.getTransaction().isActive());	79.54	0
9	0	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertArrayEquals(newOType[]{OType.STRING},result);	34.9	0
	1	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(result.length,1);	38.39	1
	2	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(Arrays.asList(result).contains(OType.STRING));	38.63	0
	3	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotNull(result);	39.58	0
	4	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(0,result.length);	34.88	0
	5	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertSame(OType.STRING,result[0]);	37.39	0
	7	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertArrayEquals(newOType[]{propertyIndexByKey.keyType},result);	39.84	0
	8	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertFalse(Arrays.asList(result).isEmpty());	37.4	0
	9	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.INTEGER,result[0]);	35.11	0
	11	/	OPropertyMapIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(null,result);	34.09	0
10	7	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(walChanges);	34.75	0
	9	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertSame(OBJECT,OBJECT);	42.8	0
	10	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertThrows(OCharSerializer.class,()->serializer.serializeNative(Objects::isNull),”Expectedexceptionwithnullarguments");	43.05	0
	13	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotEquals(OBJECT,null);	44.6	0
	14	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(OBJECT,charSerializer.deserializeNativeObject(data,0));	43.52	0
	16	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotSame(OBJECT,charSerializer.deserializeNativeObject(data,0));	46.18	0
	18	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(charSerializerinstanceofOCharSerializer);	44.83	0
	22	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotSame(charSerializer,newOCharSerializer());	35.6	0
	23	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertSame(walChanges,walChanges);	35.34	0
	25	/	CharSerializerTest	testSerializeInWALChanges	assertEquals(charSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertFalse(charSerializer.deserializeNativeObject(data,0)==null);	34.97	0
11	0	orientechnologies/orientdb	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertEquals(fields.size(),2);	35.65	1
	2	/	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertNotNull(fields);	34.54	0
	4	/	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertFalse(fields.isEmpty());	34.75	0
	6	/	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertTrue(!fields.isEmpty());	34.86	0
	9	/	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertNotEquals(0,fields.size());	33.15	0
	10	/	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertArrayEquals("STR"},fields.toArray());	33.7	0
	18	/	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertNotSame(null,fields);	34.63	0
	27	/	OCompositeIndexDefinitionTest	testGetFields	assertEquals(fields.size(),2);	assertNotSame(Collections.emptyList(),fields);	33.56	0
12	0	orientechnologies/orientdb	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	36.17	1
	1	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertEquals(false,doc.isDirty());	33.62	0
	2	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertNotEquals(true,doc.isDirty());	33.17	0
	3	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	33.62	0
	4	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertNotNull(doc);	32.44	0
	5	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertNotSame(null,doc);	33.96	0
	6	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertSame(doc,doc);	32.32	0
	7	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertNotEquals(null,doc);	32.53	0
	8	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertNotSame(newObject(),doc);	33.15	0
	9	/	TrackedListTest	testRemoveIndexOne	assertFalse(doc.isDirty());	assertArrayEquals(newint[]{1,2,3},newint[]{1,2,3});	32.92	0
13	0	orientechnologies/orientdb	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	22.49	1
	1	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotEquals(0,qResult.size());	22.66	0
	2	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotNull(qResult);	21.37	0
	3	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertTrue(!qResult.isEmpty());	22.42	0
	6	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertFalse(qResult.isEmpty());	21.69	0
	7	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertSame(ODocument.class,qResult.get(0).getClass());	21.73	0
	8	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertArrayEquals("STR"},newString[]{qResult.get(0).field("namexx").toString());	22.68	0
	9	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotSame(0,qResult.get(0).field("namexx").toString().length());	22.43	0
	10	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNull(qResult.get(0).field("nonExistingField"));	22.27	0
	13	/	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotSame(0,qResult.get(0).field("namexx").toString().length());	22.23	0
14	12	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertEquals(changesCollector.getByteValue(pointer,64),42);	59.34	1
	13	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertSame((byte)42,changesCollector.getByteValue(pointer,64));	33.35	0
	15	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertNotSame((byte)31,changesCollector.getByteValue(pointer,64));	33.53	0
	16	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertArrayEquals(newbyte[]{42},newbyte[]{changesCollector.getByteValue(pointer,64)});	33.55	0
	17	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertSame(ByteBuffer.wrap(newbyte[]{42}).get(),changesCollector.getByteValue(pointer,64));	34.26	0
	18	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertFalse(changesCollector.getByteValue(pointer,64)!=42);	33.78	0
	19	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertTrue(changesCollector.getByteValue(pointer,64)==42);	34.27	0
	20	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertSame(Byte.valueOf("42"),Byte.valueOf(changesCollector.getByteValue(pointer,64)));	31.97	0
	21	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertEquals((byte)42,(byte)changesCollector.getByteValue(pointer,64));	33.86	0
	22	/	OWALPageV2ChangesPortionTest	testSingleByteValue	assertEquals(changesCollector.getByteValue(pointer,64),42);	assertSame(Byte.valueOf("42"),Byte.valueOf((byte)changesCollector.getByteValue(pointer,64)));	33.64	0
15	0	orientechnologies/orientdb	OJsonWithCustom	testCustomField	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull("STR");	34.45	0
	6	/	OJsonWithCustom	testCustomField	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(json);	35.08	0
	7	/	OJsonWithCustom	testCustomField	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(condition`);	35.35	0
	12	/	OJsonWithCustom	testCustomField	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(doc1);	31.19	0
	24	/	OJsonWithCustom	testCustomField	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(doc1.toJSON());	34.42	0
	28	/	OJsonWithCustom	testCustomField	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(json);	35.04	0
16	0	orientechnologies/orientdb	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertArrayEquals(ronniePicture,loadedRonnie.getImageData());	21.2	0
	1	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertNotNull(loadedRonnie);	18.52	0
	2	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertEquals(ronnie.getName(),loadedRonnie.getName());	17.85	0
	8	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertNotEquals(ronnie.hashCode(),loadedRonnie.hashCode());	18.37	0
	9	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertTrue(ronnie.equals(ronnie));	18.24	0
	12	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertFalse(ronnie.equals(null));	18.26	0
	13	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertFalse(ronnie.equals(loadedRonnie));	18.49	0
	14	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertNotSame(ronnie,loadedRonnie);	17.76	0
	22	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertSame(savedRonnie.getClass(),loadedRonnie.getClass());	18.38	0
	26	/	OObjectBinaryDataStorageTest	testSaveAndLoad_BinaryFieldsSimpleRecordMapping_InstantiatePojoUsingDbFactory	assertNotNull(savedRonnie);	assertTrue(savedRonnie.getImageData().length==loadedRonnie.getImageData().length);	18.37	0
17	3	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(executor);	21.13	0
	8	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertFalse(operations.isEmpty());	20.28	0
	10	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertEquals(1,operations.size());	20.15	0
	11	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertSame(rec,operations.get(0).getRecord());	21.19	0
	15	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertEquals("test",rec.getClassName());	20.43	0
	16	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(orientDb);	20.18	0
	17	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertFalse(database.isClosed());	19.77	0
	22	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(database);	19.3	0
	27	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertNotNull(operations);	18.65	0
	28	/	OConnectionExecutorTransactionTest	testBeginRollbackTransaction	assertFalse(database.getTransaction().isActive());	assertTrue(databaseinstanceofODatabaseDocumentInternal);	20.08	0
18	0	orientechnologies/orientdb	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertTrue(result.hasNext());	21.26	1
	4	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(result);	35.58	0
	9	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotEquals(0,result.stream().count());	20.98	0
	10	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertArrayEquals(2,3});	22.01	0
	14	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotEquals(0,result.stream().count());	20.94	0
	16	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertTrue(result.hasNext());	20.2	1
	17	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(result);	21.74	0
	18	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertEquals(getNamedValue(result,"friendlyNames.group.name.countNonNull(LuceneDoubleFacet)".toUpperCase()).iterator().next()```);	22.94	0
	25	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertTrue(result.hasNext());	19.04	1
	29	/	OMatchStatementExecutionNewTest	testArrayRange2	assertTrue(result.hasNext());	assertNotNull(result);	19.6	0
19	0	orientechnologies/orientdb	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertEquals(1,res.size());	18.94	0
	1	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertTrue(res.get(0).field("address").toString().startsWith("401CongressAve,Suite"));	19.25	0
	2	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertNotNull(res);	17.59	0
	3	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	17.67	0
	5	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	17.34	1
	6	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertNotEquals(null,res);	30.29	0
	7	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertTrue(!res.isEmpty());	17.81	0
	9	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertTrue(resinstanceofList<?>);	17.19	0
	10	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertFalse(res==null);	17.69	0
	11	/	OETLCSVExtractorTest	testStringStartedFromDigit	assertFalse(res.isEmpty());	assertTrue(res.size()==1&&res.get(0).field("address").toString().equals("401CongressAve,Suite2450"));	18.61	0
20	0	PeterisP/morphology	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertEquals(3,tokens.size());	9.31	1
	1	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertTrue(tokens.size()>0);	10.19	0
	2	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertNotNull(tokens);	8.89	0
	3	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertArrayEquals(newWord("q"),newWord("i")});	9.47	0
	4	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertNotEquals(2,tokens.size());	8.89	0
	5	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertFalse(tokens.isEmpty());	8.65	0
	6	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertNotSame(newLinkedList<Word>(),tokens);	9.24	0
	7	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertSame(tokens,tokens);	8.67	0
	8	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertNotNull(tokens);	16.21	0
	9	/	TokenizeTest	singleletters	assertEquals(3,tokens.size());	assertNotEquals(5,tokens.size());	8.6	0
21	2	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	9.57	0
	7	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotSame(locītājs,jāmāk);	8.71	0
	9	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(jāmāk.isRecognized());	8.75	1
	13	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotEquals(null,jāmāk);	8.44	0
	17	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(locītājs);	9.21	0
	18	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotEquals(null,locītājs);	9.24	0
	19	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(locītājsinstanceofAnalyzer);	8.99	0
	24	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(jāmāk.isRecognized());	17.52	1
	25	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	19.61	0
	27	/	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotSame(locītājs,jāmāk);	8.87	0
22	1	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertAnalyzerIsRecognized(Analyzeranalyzer,Stringword){);	24.17	0
	8	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertTrue(locītājs.analyze("mazajai").isRecognized());	9.58	0
	12	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertTrue(locītājs.analyze("mazajai").isRecognized());	19.68	0
	13	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertFalse(locītājs.analyze("notaword").isRecognized());	9.56	0
	16	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertFalse(locītājs.analyze("notaword").isRecognized());	9.25	0
	21	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertFalse(locītājs.analyze("").isRecognized());	18.28	0
	22	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertFalse(locītājs.analyze("").isRecognized());	9.25	0
	24	/	MorphologyTest	mazajai	assertTrue(mazajai.isRecognized());	assertFalse(locītājs.analyze("").isRecognized());	9.27	0
23	3	/	BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertEquals(centerSets(expectedResult.getClass()),emptigeast(Throws.Transfer.booleanConverterFloat(managerSecret(accounts),inputScoreMessage(reEvaluatedConfigs))+1);	75.99	0
	12	/	BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertNotNull(testCore.warehouseDir());	33.06	0
	18	/	BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertEquals(testCore.warehouseDir(),testCore.warehouseDir());	18.24	0
	20	/	BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertSame(testCore.warehouseDir(),testCore.warehouseDir());	18.21	0
	22	/	BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertEquals(testCore.warehouseDir().toString(),testCore.warehouseDir().toString());	18.3	0
	26	/	BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertEquals(testCore.warehouseDir().getFileName().toString(),testCore.warehouseDir().getFileName().toString());	18.63	0
	27	/	BeejuCoreTest	deleteDirectory	assertFalse(Files.exists(testCore.warehouseDir()));	assertEquals(actualResult.getClassName(),<Placeholder>);	20.95	0
24	0	OpenLiberty/ci.common	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertEquals(true,targetFile.exists());	6.21	0
	1	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.exists());	6.73	1
	2	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(targetFile);	5.59	0
	3	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.isFile());	5.56	0
	4	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.canRead());	5.75	0
	6	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertEquals(configFile.length(),targetFile.length());	5.73	0
	7	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotEquals(0,targetFile.length());	5.88	0
	8	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotSame(configFile,targetFile);	5.79	0
	9	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertFalse(targetFile.isDirectory());	5.96	0
	10	/	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertArrayEquals("temp".getBytes(),Files.readAllBytes(targetFile.toPath()));	5.96	0
25	0	hazelcast/hazelcast-simulator	PropertyBindingSupport_bind0_NonNumericalTest	bind_enum_nullValue	assertNull(testObject.enumField);	assertTrue(bind0(testObject,"enumField","null"));	9.44	0
	2	/	PropertyBindingSupport_bind0_NonNumericalTest	bind_enum_nullValue	assertNull(testObject.enumField);	assertNotNull("enumField");	10.42	0
	13	/	PropertyBindingSupport_bind0_NonNumericalTest	bind_enum_nullValue	assertNull(testObject.enumField);	assertFalse(bind0(testObject,"nonExistentField","value"));	8.76	0
	16	/	PropertyBindingSupport_bind0_NonNumericalTest	bind_enum_nullValue	assertNull(testObject.enumField);	assertNotEquals("value",bind0(testObject,"field","value"));	9.09	0
	26	/	PropertyBindingSupport_bind0_NonNumericalTest	bind_enum_nullValue	assertNull(testObject.enumField);	assertFalse(bind0(testObject,"field","nonExistentValue"));	8.27	0
26	0	nidi3/raml-loader	GithubTest	publicGithub	assertRamlStart(in);	assertNotNull(in);	12.56	0
	1	/	GithubTest	publicGithub	assertRamlStart(in);	assertTrue(in.available() > 0);	12.8	0
	2	/	GithubTest	publicGithub	assertRamlStart(in);	assertNotNull(GithubLoader.forPublic(USER, "raml-loader"));	19.91	0
	5	/	GithubTest	publicGithub	assertRamlStart(in);	assertFalse(in == null);	12.43	0
	6	/	GithubTest	publicGithub	assertRamlStart(in);	assertNotEquals(-1,in.read());	11.94	0
	9	/	GithubTest	publicGithub	assertRamlStart(in);	assertTrue(in.markSupported());	11.87	0
	10	/	GithubTest	publicGithub	assertRamlStart(in);	assertEquals(-1,in.read(new byte[100]));	13.3	0
	12	/	GithubTest	publicGithub	assertRamlStart(in);	assertNotEquals(0,in.available());	13.05	0
	15	/	GithubTest	publicGithub	assertRamlStart(in);	assertNotSame(0,in.available());	12	0
	17	/	GithubTest	publicGithub	assertRamlStart(in);	assertEquals(1,GithubLoader.forPublic(USER, "raml-loader").getClass().getDeclaredFields().length);	12.88	0
27	1	/	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotEquals(0,newInvalidHandshakeException().getCloseCode());	10.48	0
	3	/	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(newInvalidHandshakeException().getCloseCode());	6.94	0
28	0	myabc/markdownj	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertEquals(expectedOutput,actualOutput);	4.3	0
	1	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertThat("STR","STR");	5.58	0
	2	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotEquals("STR","STR");	2.88	0
	3	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertTrue(boolean condition);	2.67	0
	4	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertArrayEquals(expectedArray,actualArray);	3.06	0
	5	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotNull(actual);	2.82	0
	6	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertThat(object,org.hamcrest.Matcher.matcher);	3.05	0
	7	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertFalse(boolean condition);	2.94	0
	8	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertSame(expected,actual);	3.21	0
	9	/	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotSame(expected,actual);	3.36	0
29	2	/	HttpClientFactoryTest	testNonProxiedHostRequest	assertEquals("STR",body);	assertTrue("STR");	12.38	0
30	0	cucumber-ltd/cucumber-pro-plugin-jvm	CiEnvironmentTest	recognises_bamboo	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals("STR",getCiName());	5.93	0
31	3	/	NalUnitTest	testCanReadNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertTrue(NALUnit.read(ByteBuffer.wrap(newbyte[]{(byte)0x7C,(byte)0x81}))instanceofNALUnit);	25.44	0
	11	/	NalUnitTest	testCanReadNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertTrue(NALUnit.read(ByteBuffer.wrap(newbyte[]{(byte)0x7C,(byte)0x81}))!=null);	24.73	0
32	0	amlinv/stat-collection-utils	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertEquals(target,objectQueryInfo.getTarget());	3.33	0
	1	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertNotNull(objectQueryInfo.getTarget());	3.8	0
	2	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertTrue(target.equals(objectQueryInfo.getTarget()));	2.88	0
	3	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertSame(target,objectQueryInfo.getTarget());	3.02	0
	4	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertNotEquals(new Object(),objectQueryInfo.getTarget());	3.2	0
	5	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertArrayEquals(new Object[]{objectQueryInfo.getTarget()},new Object[]{target});	3.23	0
	6	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertSame(target,objectQueryInfo.getTarget());	3.24	1
	7	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertThrows(IllegalArgumentException.class,() -> new ObjectQueryInfo(null, null, null));	3.57	0
	8	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertFalse(target.equals(null));	2.87	0
	9	/	ObjectQueryInfoTest	testImmutableQueryInfo	assertSame(target,objectQueryInfo.getTarget());	assertNotSame(new Object(),objectQueryInfo.getTarget());	3.14	0
33	0	arnohaase/a-foundation	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertEquals(5,flattened.size());	14.31	1
	1	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattened.contains("a"));	17.66	0
	2	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.isEmpty());	14.76	0
	3	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotNull(flattened);	16.42	0
	4	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertArrayEquals(new Object[]{"a","b","b","c","d"},flattened.toArray());	13.36	0
	5	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertEquals(5,new HashSet<>(flattened).size());	19.66	0
	6	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotEquals(new HashSet<>(Arrays.asList("a", "b", "c", "d")),flattened);	11.96	0
	7	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattened.containsAll(Arrays.asList("a", "b", "c", "d")));	17.37	0
	8	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertSame(result,ACollectionHelper.flatten(result));	13.82	0
	9	/	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertEquals`(or better yet `Util.HashMap.subSet(expectedSubsets))?`and `flattenSet.containsAll(expectedResultSetValueListAttemptsXReallyBennishThereforePerFormsToExpectationsx));	23.86	0
34	0	adlnet/jxapi	ContextTest	testGetTeam	assertNotNull(actual);	assertEquals(group,actual);	17.71	0
	1	/	ContextTest	testGetTeam	assertNotNull(actual);	assertSame(group,actual);	32.81	0
	2	/	ContextTest	testGetTeam	assertNotNull(actual);	assertNotNull(actual`. This will check to see if the result of the function call is not null. Your final generated test code would look like:);	26.18	0
	3	/	ContextTest	testGetTeam	assertNotNull(actual);	assertNotSame(group,actual);	15.76	0
	4	/	ContextTest	testGetTeam	assertNotNull(actual);	assertTrue(actual.equals(group));	11.96	0
	5	/	ContextTest	testGetTeam	assertNotNull(actual);	assertFalse(!actual.equals(group));	15.5	0
	6	/	ContextTest	testGetTeam	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	13.71	0
	7	/	ContextTest	testGetTeam	assertNotNull(actual);	assertEquals(group,actual);	15.88	0
	8	/	ContextTest	testGetTeam	assertNotNull(actual);	assertNotEquals(expected,actual);	15.55	0
	9	/	ContextTest	testGetTeam	assertNotNull(actual);	assertNotNull(actual);	10.76	1