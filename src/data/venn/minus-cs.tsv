OracleID	ClassName	TestName	TrueOracle	GenOracle	Correct
0	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertTrue(actual.contains(expected));	0
3	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertNotNull(actual);	1
4	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
11	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,actual);	0
12	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertSame(expected,actual);	0
16	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,activityDefinition.getType());	0
17	ActivityDefinitionTest	testSetType	assertNotNull(actual);	assertEquals(expected,activityDefinition.getType());	0
2	VerbsTest	testVoided	assertNotNull(actual);	assertNotNull(actual);	1
3	VerbsTest	testVoided	assertNotNull(actual);	assertFalse("STR".equals(actual.getId()));	0
5	VerbsTest	testVoided	assertNotNull(actual);	assertNotNull(actual);	1
6	VerbsTest	testVoided	assertNotNull(actual);	assertNotSame(null,actual);	0
10	VerbsTest	testVoided	assertNotNull(actual);	assertTrue(actualinstanceofVerb);	0
0	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
1	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual.contains(expected));	0
2	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertNotNull(actual);	1
5	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertSame(expected,actual);	0
7	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
0	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotNull(db.getActiveIntent());	1
3	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertTrue(db.getActiveIntent()!=null);	0
4	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertFalse(db.getActiveIntent()==null);	0
10	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertTrue(db.getActiveIntent()instanceofOIntentMassiveInsert);	0
13	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotNull(db.getActiveIntent());	1
0	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(storedVar,var);	1
1	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(var==storedVar);	0
2	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(10,buffer1.position());	0
5	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.remaining()<=buffer1.capacity());	0
6	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(storedVar,var);	1
7	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotNull(buffer1);	0
10	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotSame(buffer1,buffer2);	0
11	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(storedVar,var);	1
0	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertTrue(qResult.size()>0);	0
1	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertEquals(2,qResult.size());	1
8	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotNull(qResult);	0
0	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertEquals(keyIndexDefinition.getParamCount(),1);	1
1	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()>0);	0
2	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotNull(keyIndexDefinition);	0
3	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(0,keyIndexDefinition.getParamCount());	0
4	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(keyIndexDefinition.getParamCount()==0);	0
5	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotSame(0,keyIndexDefinition.getParamCount());	0
6	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertSame(1,keyIndexDefinition.getParamCount());	0
7	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()==1);	0
14	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(1,2);	0
0	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(2,manager.getNewRecords().size());	1
1	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertEquals(2,manager.getNewRecords().size());	1
2	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().contains(doc));	0
3	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().isEmpty());	0
4	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager.getNewRecords());	0
5	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().contains(null));	0
6	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotEquals(0,manager.getNewRecords().size());	0
21	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNotNull(proc);	0
22	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNotNull(proc);	0
24	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNotNull(proc);	0
0	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
1	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
2	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	0
3	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
5	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	0
10	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	0
12	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
0	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
2	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertEquals(false,doc.isDirty());	0
3	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotEquals(true,doc.isDirty());	0
6	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc.getDirtyFields());	0
8	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotSame(true,doc.isDirty());	0
13	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
14	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
0	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
1	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertEquals(1,qResult.stream().count());	0
2	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	0
3	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
4	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
5	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotEquals(0,qResult.stream().count());	0
6	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.getExecutionPlan().isPresent()&&qResult.getExecutionPlan().get().getSteps().size()==2);	0
9	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult.getExecutionPlan());	0
10	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertEquals(2,qResult.getExecutionPlan().get().getSteps().size());	0
1	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.get(24));	0
2	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.get(24));	0
3	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals(null,test.get(11));	0
7	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNull(test.get(42));	0
11	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals(Integer.valueOf(5),test.get(24));	0
1	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertNotNull(c);	0
2	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertTrue(intraMode>=0);	0
5	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertFalse(intraMode<0);	0
28	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertNotNull(c);	0
29	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertNotSame(decoder,null);	0
0	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertEquals(true,kindAndName.equals(secondKindAndName));	0
1	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(kindAndName.equals(thirdKindAndName));	0
2	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertEquals(true,kindAndName.equals(secondKindAndName));	0
3	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(fourthKindAndName.equals(kindAndName));	0
5	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertTrue(kindAndName.equals(kindAndName));	1
7	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals(thirdKindAndName,fourthKindAndName);	0
7	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertTrue(config.get(newConfigs.Key&lt;String&gt;("default.service"))instanceofTreeMap);	0
24	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotNull("STR");	0
0	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertEquals(3,filtered.size());	0
1	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.contains(pConfig.prepareProcessors(getAllTestData(),"STR").get(0)));	0
2	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	0
3	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	0
4	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertEquals(3,filtered.size());	0
5	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(0,filtered.size());	0
9	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.containsAll(pConfig.prepareProcessors(getAllTestData(),"STR")));	0
1	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(!ProfileUtil.fromYaml(is).isEmpty());	0
2	ProfileUtilTest	multiple	assertNotNull(is);	assertNotNull(ProfileUtil.fromYaml(is));	0
6	ProfileUtilTest	multiple	assertNotNull(is);	assertFalse(ProfileUtil.fromYaml(is).isEmpty());	0
9	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(ProfileUtil.fromYaml(is)instanceofList);	0
12	ProfileUtilTest	multiple	assertNotNull(is);	assertNotNull(ProfileUtil.fromYaml(is));	0
1	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertTrue(CucumberProResultsUrlBuilder.buildCucumberProUrl(config,"STR").endsWith("STR"));	0
2	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotNull(url);	0
3	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotNull(url);	0
4	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotEquals("STR",url);	0
6	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertFalse(url.isEmpty());	0
7	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame("STR",url);	0
13	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertEquals("STR",url);	1
2	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertEquals(true,config.isNull("STR"));	0
3	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
4	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
5	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
7	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
8	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertEquals(true,config.isNull("STR"));	0
13	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotNull(config.isNull("STR"));	0
15	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertNotEquals(false,config.isNull("STR"));	0
5	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverDirectory.exists());	0
11	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotEquals(0,serverDirectory.listFiles().length);	0
14	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotNull(serverDirectory.listFiles());	0
18	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverDirectory.isDirectory());	0
25	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotEquals(0,Files.list(serverDirectory.toPath()).count());	0
2	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotNull(fileString);	0
3	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertTrue(!fileString.isEmpty());	0
6	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertTrue(tempFile.exists());	0
1	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertEquals(true,targetFile.exists());	0
2	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.isFile());	0
3	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.length()>0);	0
6	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(targetFile);	0
8	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.lastModified()>0);	0
11	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(FileUtils.contentEquals(configFile,targetFile));	0
0	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertEquals(FilterReply.DENY,filter.decide(evt));	1
1	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.DENY);	0
3	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotSame(FilterReply.NEUTRAL,filter.decide(evt));	0
6	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotNull(filter.decide(evt));	0
8	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertEquals(FilterReply.DENY,filter.decide(evt));	1
9	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals(FilterReply.NEUTRAL,filter.decide(evt));	0
10	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.NEUTRAL);	0
2	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertTrue(handler.hasInitContainer(builder,"STR"));	1
3	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertTrue(handler.hasInitContainer(builder,"STR"));	1
6	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	0
8	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	0
0	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	0
1	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2,result.size());	0
2	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(result,query.execute(list));	0
3	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.containsAll(result));	0
4	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotEquals(0,result.size());	0
6	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.size()>0);	0
10	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	0
11	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertTrue(result.stream().findAny().isPresent());	0
0	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertEquals(0,registry.agentCount());	1
1	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry.agentCount()>=0);	0
2	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotNull(registry);	0
3	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertFalse(registry.agentCount()>0);	0
4	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertEquals(0,registry.agentCount());	1
5	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotEquals(5,registry.agentCount());	0
7	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertTrue(registry.agentCount()<=10);	0
9	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertEquals(0,registry.agentCount());	1
10	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotEquals(3,registry.agentCount());	0
0	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertEquals(2,registry.agentCount());	1
1	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()>0);	0
2	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotNull(registry);	0
3	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertFalse(registry.agentCount()==0);	0
6	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.agentCount()>=0);	0
8	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotSame(null,registry);	0
9	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertEquals(2,registry.agentCount());	1
1	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotEquals("STR",moneyToStrPER100.convert(100.0));	0
2	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotNull(moneyToStrPER100.convert(100.0));	0
3	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertTrue(!moneyToStrPER100.convert(100.0).isEmpty());	0
4	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertFalse(moneyToStrPER100.convert(100.0).isEmpty());	0
10	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotEquals("STR",moneyToStrPER100.convert(100.0));	0
14	MoneyToStrTest	checkPER100	assertEquals("STR",moneyToStrPER100.convert(V_1_01D));	assertNotEquals("STR",moneyToStrPER100.convert(100.0));	0
3	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>=0);	0
4	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0);	0
5	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey));	0
8	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0);	0
13	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>=0);	0
21	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey));	0
22	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertEquals(1,cm.count(poolKey));	1
23	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertEquals(1,cm.count(poolKey));	1
24	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey));	0
0	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
1	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
7	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
13	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
27	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
0	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql.toString());	0
1	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
2	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
3	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(sql.toString()!=null&&!sql.toString().equals("STR"));	0
4	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	0
6	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotSame("STR",sql.toString());	0
8	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql);	0
9	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
0	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	0
1	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertEquals(0,res.size());	1
2	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(res.isEmpty());	0
3	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	0
4	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(resinstanceofList);	0
5	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(res.isEmpty());	0
8	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(java.util.Collections.emptyList().equals(res));	0
10	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertFalse(res.contains("STR"));	0
0	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.isRecognized());	1
2	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotNull(ceļu.wordforms);	0
5	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.isRecognized());	1
6	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.isRecognized());	1
7	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ceļu.wordforms.isEmpty());	0
10	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.wordforms.size()>0);	0
17	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.isRecognized());	1
23	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertFalse(ceļu.isRecognized());	0
1	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
2	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
3	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertTrue(poller.getObjectQueryPreparer()instanceofObjectQueryPreparer);	0
9	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertTrue(poller.getObjectQueryPreparer()!=null);	0
11	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
14	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotSame(mockObjectQueryPreparer,poller.getObjectQueryPreparer());	0
18	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertFalse(poller.getObjectQueryPreparer()==null);	0
19	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
0	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	1
0	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(-1,p.getBlankIndex());	0
0	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertEquals(ProjectName.Repeated.repeatChar([],''=>'');	0
0	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertFalse(graph.hasCycles());	1
0	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().size()==0);	0
1	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(('error).isEmpty());	0
2	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().size());	0
7	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().isEmpty());	1
9	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().isEmpty());	1
0	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
1	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
2	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(true,vārds.isRecognized());	0
3	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotNull(vārds);	0
4	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(vārds.wordforms.isEmpty());	0
7	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
9	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotNull(vārds);	0
11	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
2	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.isRecognized());	1
3	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.isRecognized());	1
10	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(lūzīs);	0
24	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(locītājs);	0
0	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(austrumlatvija.isRecognized());	1
1	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(austrumlatvija.isRecognized());	1
3	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals(true,austrumlatvija.isRecognized());	0
5	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotNull(austrumlatvija);	0
6	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(austrumlatvija.wordforms.isEmpty());	0
7	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotEquals(0,austrumlatvija.wordforms.size());	0
8	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(!austrumlatvija.wordforms.isEmpty());	0
9	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotSame(0,austrumlatvija.wordforms.size());	0
10	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(austrumlatvija.wordforms.isEmpty());	0
11	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(austrumlatvija.isRecognized());	1
0	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
1	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
4	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals(true,w.isRecognized());	0
7	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotNull(w);	0
15	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
18	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
19	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(!w.isRecognized());	0
21	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(!w.isRecognized());	0
0	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertEquals(0,simulatorProperties.getCoordinatorPort());	1
1	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertTrue(simulatorProperties.getCoordinatorPort()>=0);	0
2	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotNull(simulatorProperties);	0
4	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertFalse(simulatorProperties.getCoordinatorPort()<0);	0
8	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotEquals(-1,simulatorProperties.getCoordinatorPort());	0
0	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertEquals("STR",exception.getMessage());	1
1	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertTrue(exception.getCause()instanceofRuntimeException);	0
2	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotNull(exception.getCause());	0
6	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertEquals("STR",exception.getMessage());	1
10	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	0
1	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.exists());	1
3	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(exceptionFile);	0
4	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertFalse(exceptionFile.isDirectory());	0
5	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.isFile());	0
6	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotEquals(exceptionFile,null);	0
10	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(getUserDir());	0
9	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(testObject,"STR","STR"));	0
10	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull(bind0(testObject,"STR","STR"));	0
18	PropertyBindingSupport_bind0_NumericalTest	bind_Short	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(testObject,"STR","STR"));	0
0	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertSame(loggerA0,loggerA1);	0
1	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotNull(loggerB0);	0
2	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotNull(loggerA_lh0);	0
3	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA0,loggerB0);	0
9	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA_lh0,loggerB0);	0
13	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA_lh0,loggerA_lh1);	0
0	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
2	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertEquals(false,doc.isDirty());	0
4	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
11	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotNull(doc);	0
12	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotSame(true,doc.isDirty());	0
13	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertSame(false,doc.isDirty());	0
14	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotEquals(true,doc.isDirty());	0
0	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(classLinked,prop.getLinkedClass());	0
1	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertTrue(prop.getLinkedClass()instanceofOClass);	0
2	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotNull(prop.getLinkedClass());	1
3	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotEquals(null,prop.getLinkedClass());	0
4	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertSame(classLinked,prop.getLinkedClass());	0
5	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertFalse(prop.getLinkedClass().isSubClassOf(classA));	0
7	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(classLinked,prop.getLinkedClass());	0
0	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
1	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertTrue(ginstanceofOrientGraph);	0
3	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertFalse(g.isClosed());	0
4	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
6	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertEquals(0,g.countVertices());	0
0	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNull(doc.field("STR"));	0
29	BinaryComparatorCompareTest	testDatetime	assertEquals(comparator.compare(field(OType.DATETIME,now),field(OType.STRING,format.format(now))),0);	assertNotNull(now1);	0
0	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals("STR",doc.field("STR"));	0
1	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(doc.field("STR")instanceofcom.orientechnologies.orient.core.id.ORID);	0
2	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(doc.field("STR"));	0
8	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(json.contains("STR"));	0
0	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToAdd,addedKeys);	1
1	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToRemove.isEmpty());	0
2	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertFalse(keysToAdd.isEmpty());	0
3	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotEquals(0,keysToAdd.size());	0
4	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotNull(propertyIndex);	0
5	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotSame(keysToAdd,keysToRemove);	0
6	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(propertyIndexinstanceofOPropertyListIndexDefinition);	0
0	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertEquals(list.size(),1);	1
1	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertTrue(list.size()>0);	0
2	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotNull(list);	0
4	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertEquals(list.size(),1);	1
5	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertEquals(list.size(),1);	1
6	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotEquals(0,list.size());	0
1	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(!results.isEmpty());	0
2	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotNull(results);	0
3	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotEquals(0,results.size());	0
4	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>0);	0
9	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertEquals(26,results.size());	1
10	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotSame(0,results.size());	0
16	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotNull(results);	0
11	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response.getStatus());	0
12	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()!=null);	0
17	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotEquals("STR",response.getStatus().toString());	0
19	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()instanceofResponseStatus);	0
21	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotSame(ResponseStatus.OK,response.getStatus());	0
22	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertFalse(response.getStatus()==ResponseStatus.OK);	0
23	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus()!=ResponseStatus.OK);	0
27	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	1
28	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertTrue(response.getStatus().equals(ResponseStatus.OK)||response.getStatus().equals(ResponseStatus.REPLAYED_OTP));	0
0	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertEquals(sha1str,WARCRecordFormat.getDigestSha1(content));	0
2	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertTrue(sha1str.equals(WARCRecordFormat.getDigestSha1(content)));	0
3	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertNotEquals("STR",WARCRecordFormat.getDigestSha1(content));	0
7	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertFalse(WARCRecordFormat.getDigestSha1(content).isEmpty());	0
8	WARCRecordFormatTest	testGetDigestSha1RobotsTxt	assertEquals("STR",sha1str,WARCRecordFormat.getDigestSha1(content));	assertNotEquals(sha1str,"STR");	0
6	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertFalse(metadata.containsKey("STR"));	0
8	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertNotEquals("STR",metadata.getFirstValue("STR"));	0
11	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertFalse(fields.containsKey("STR"));	0
12	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertNotSame("STR",metadata.getFirstValue("STR"));	0
14	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertNotSame("STR",metadata.getFirstValue("STR"));	0
16	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR","STR",fields.get("STR"));	assertFalse(fields.isEmpty());	0
0	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
1	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertTrue(retinstanceofString);	0
3	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals("STR",ret);	0
5	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
6	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals("STR",ret);	0
7	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
9	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
11	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
0	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
1	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertTrue(tokens.isEmpty());	0
3	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertFalse(tokens.contains("STR"));	0
7	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
8	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
9	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
11	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
14	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
0	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertEquals(1002,invalidHandshakeException.getCloseCode());	0
1	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertTrue(invalidHandshakeException.getCloseCode()>=1000&&invalidHandshakeException.getCloseCode()<=2999);	0
2	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotEquals(1001,invalidHandshakeException.getCloseCode());	0
3	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	0
5	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotSame(0,invalidHandshakeException.getCloseCode());	0
11	InvalidHandshakeExceptionTest	testConstructor	assertEquals("STR",CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertArrayEquals(2,3});	0
0	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(clazz,exp);	1
1	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp.length,clazz.length);	0
2	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length>0);	0
4	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp.length,clazz.length);	0
5	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(exp,clazz);	0
6	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotNull(clazz);	0
9	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(Arrays.equals(exp,clazz));	0
10	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertFalse(Arrays.asList(clazz).contains(null));	0
2	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotNull(moneyToStrRUR.convert(123.45));	0
3	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotEquals("STR",moneyToStrUSD.convert(200.00));	0
4	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertFalse(moneyToStrUSD.convert(500.00).isEmpty());	0
8	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotSame(moneyToStrUAHRUS,moneyToStrUAHENG);	0
11	MoneyToStrTest	checkRURUKR	assertEquals("STR",moneyToStrRUR.convert(V_300D));	assertNotEquals("STR",moneyToStrRUR.convert(200.00));	0
0	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotEquals("STR",map.get("STR"));	0
4	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNull(map.get("STR"));	0
9	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertEquals(1,map.size());	1
0	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,p.getDistanceToGoal());	1
1	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()>=0);	0
2	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,p.getDistanceToGoal());	1
4	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotEquals(5,p.getDistanceToGoal());	0
5	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,p.getDistanceToGoal());	1
8	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotEquals(10,p.getDistanceToGoal());	0
9	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertFalse(p.getDistanceToGoal()<0);	0
12	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotNull(p);	0
0	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
1	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0);	0
8	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
10	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotEquals(0,panel.getTurtleCount());	0
15	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotNull(panel.getTurtleCount());	0
0	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertArrayEquals("2","3"});	0
1	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertEquals(3,actuals.length);	0
2	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertTrue(actuals.length>0);	0
5	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotNull(actuals);	0
13	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotEquals(0,actuals.length);	0
26	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotSame("STR",Arrays.asList("STR","STR","STR"),actuals);	0
3	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals("STR",macAddress.toString());	0
4	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.toString().isEmpty());	0
10	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals("STR",macAddress.toString());	0
0	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
1	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
12	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
15	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
25	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
0	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertEquals(MESSAGE,exception.getMessage());	1
1	CollectorsTest	toImmutableSet	assertEquals(ImmutableSet.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableSet()));	assertNotNull(Collectors.toImmutableSet());	0
2	CollectorsTest	toImmutableSet	assertEquals(ImmutableSet.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableSet()));	assertNotNull(Collectors.toImmutableSet());	0
0	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotNull(actual);	0
4	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertTrue(actualinstanceofNALUnit);	0
17	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotNull(actual);	0
25	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotNull(actual);	0
27	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals("STR",3,actual.nal_ref_idc);	assertNotNull(actual);	0
0	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
1	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
8	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
12	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
13	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
4	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
10	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
11	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
12	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
13	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertEquals(0,matcher.regionStart());	0
17	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertEquals(8,matcher.regionEnd());	0
18	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
21	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
0	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotNull(helloClass);	1
1	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertTrue(helloClass!=null);	0
6	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotEquals(0,helloClass.getMethods().length);	0
3	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertEquals("STR",CommUtil.escapeJava("STR").replaceAll("STR","STR"));	0
7	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertEquals("STR",CommUtil.escapeJava("STR"));	1
12	CommUtilTest	testEscape	assertEquals("STR",CommUtil.escapeJava("STR"));	assertEquals("STR",CommUtil.escapeJava("STR"));	1
0	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertEquals(DefaultExtension.class,draft_6455.getExtension().getClass());	0
1	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertTrue(draft_6455.getExtension()instanceofDefaultExtension);	0
2	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	1
3	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotEquals(null,draft_6455.getExtension());	0
4	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotSame(draft_6455.getExtension().getClass().getName(),"STR");	0
5	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertSame(DefaultExtension.class,draft_6455.getExtension().getClass());	0
10	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertTrue(draft_6455.getExtension()instanceoforg.java_websocket.extensions.IExtension);	0
0	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull("STR",webSocketImpl);	assertNotNull(webSocketImpl);	1
1	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull("STR",webSocketImpl);	assertTrue(webSocketImplinstanceofWebSocketImpl);	0
4	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull("STR",webSocketImpl);	assertTrue(webSocketImplinstanceofWebSocketImpl);	0
5	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull("STR",webSocketImpl);	assertNotNull(webSocketImpl);	0
6	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull("STR",webSocketImpl);	assertNotEquals(null,webSocketImpl);	0
7	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull("STR",webSocketImpl);	assertNotNull(webSocketImpl);	0
8	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull("STR",webSocketImpl);	assertFalse(webSocketImpl.isClosed());	0
6	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertNotEquals("STR",Seq.join(Arrays.asList("STR","STR"),"STR"));	0
7	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertTrue(Seq.join(Arrays.asList("STR","STR"),"STR").contains("STR"));	0
8	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertFalse(Seq.join(Arrays.asList("STR","STR"),"STR").isEmpty());	0
16	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertTrue(Seq.join(Arrays.asList("STR","STR"),"STR").contains("STR"));	0
18	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertTrue(Seq.join(Arrays.asList("STR","STR"),"STR").startsWith("STR"));	0
2	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(expected==actual);	0
8	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotSame(expected,actual);	0
0	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
1	SubStatementTest	testGetVerb	assertNotNull(actual);	assertTrue(expected==actual);	0
2	SubStatementTest	testGetVerb	assertNotNull(actual);	assertNotNull(actual);	1
3	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
4	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
5	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
16	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
27	SubStatementTest	testGetVerb	assertNotNull(actual);	assertSame(expected,actual);	0
0	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.equals(expected));	0
6	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
7	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
9	ResultTest	testGetDuration	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
12	ResultTest	testGetDuration	assertNotNull(actual);	assertNotNull(actual);	1
16	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
18	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.contains(expected));	0
0	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	0
1	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	1
2	StatementTest	testGetAuthority	assertNotNull(actual);	assertTrue(statement.getAuthority()instanceofActor);	0
3	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	1
5	StatementTest	testGetAuthority	assertNotNull(actual);	assertSame(agent,actual);	0
8	StatementTest	testGetAuthority	assertNotNull(actual);	assertTrue(statement.getAuthority().equals(agent));	0
13	StatementTest	testGetAuthority	assertNotNull(actual);	assertTrue(statement.getAuthority()==agent);	0
14	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	1
17	StatementTest	testGetAuthority	assertNotNull(actual);	assertSame(agent,actual);	0
4	OpenKoreanProcessorJavaTest	testNormalize	assertEquals("STR",OpenKoreanTextProcessorJava.normalize("STR"));	assertNotNull(OpenKoreanTextProcessor.normalize("STR"));	0
8	OpenKoreanProcessorJavaTest	testNormalize	assertEquals("STR",OpenKoreanTextProcessorJava.normalize("STR"));	assertTrue(OpenKoreanTextProcessor.normalize("STR").length()>0);	0
9	OpenKoreanProcessorJavaTest	testNormalize	assertEquals("STR",OpenKoreanTextProcessorJava.normalize("STR"));	assertTrue(OpenKoreanTextProcessor.normalize("STR").length()>0);	0
14	OpenKoreanProcessorJavaTest	testNormalize	assertEquals("STR",OpenKoreanTextProcessorJava.normalize("STR"));	assertNotNull(OpenKoreanTextProcessor.normalize("STR"));	0
16	OpenKoreanProcessorJavaTest	testNormalize	assertEquals("STR",OpenKoreanTextProcessorJava.normalize("STR"));	assertEquals("STR",OpenKoreanTextProcessor.normalize("STR"));	0
17	OpenKoreanProcessorJavaTest	testNormalize	assertEquals("STR",OpenKoreanTextProcessorJava.normalize("STR"));	assertNotSame("STR",OpenKoreanTextProcessor.normalize("STR").toString());	0
2	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertTrue(!tokens.apply(0).unknown());	0
5	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertFalse(tokens.isEmpty());	0
6	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotNull(tokens);	0
9	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotEquals(0,tokens.size());	0
10	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertTrue(tokens.size()>0);	0
16	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotSame(0,tokens.size());	0
20	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotNull(tokens);	0
21	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertTrue(!tokens.isEmpty());	0
1	IssuesTest	testIssue23	assertTrue(true);	assertEquals(2,schemas.size());	0
2	IssuesTest	testIssue23	assertTrue(true);	assertTrue(schemas.size()>0);	0
3	IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	0
5	IssuesTest	testIssue23	assertTrue(true);	assertNotEquals(0,schemas.size());	0
8	IssuesTest	testIssue23	assertTrue(true);	assertNotEquals(null,schemas);	0
0	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertEquals(1,schemas.size());	1
2	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	0
3	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	0
4	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(0,schemas.size());	0
5	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertSame(XsdSchema.class,schemas.get(0).getClass());	0
6	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertTrue(schemas.stream().allMatch(schema->schemainstanceofXsdSchema));	0
10	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertSame(XsdSchema.class,schemas.get(0).getClass());	0
17	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(parser.getResultXsdSchemas());	0
0	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(a,b);	1
1	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertTrue(a.equals(b));	0
4	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotNull(a);	0
5	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotSame(a,b);	0
6	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertTrue(a.equals(b));	0
11	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(a,b);	1
13	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(a,b);	1
16	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(a,b);	1
0	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer.getTestInstance());	0
1	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer.getTestInstance()instanceofBaseTest);	0
2	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertEquals(BaseTest.class,testContainer.getTestInstance().getClass());	0
3	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotEquals(null,testContainer.getTestInstance());	0
5	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertFalse(testContainer.getTestInstance()==null);	0
10	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertTrue(testContainer.getTestInstance().equals(test));	0
12	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotEquals(null,testData);	0
19	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(testData.getTestIndex()>0);	0
2	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(CloudProviderUtils.isLocal("STR"));	0
3	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertEquals(false,CloudProviderUtils.isLocal("STR"));	0
4	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertNotEquals(true,CloudProviderUtils.isLocal("STR"));	0
6	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(CloudProviderUtils.isLocal("STR"));	0
9	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertEquals(false,CloudProviderUtils.isLocal("STR"));	0
3	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	assertNotNull("STR");	0
23	PropertyBindingSupport_bind0_NumericalTest	bind_shortWithUnderscore	assertTrue(bind0(testObject,"STR","STR"));	assertTrue(true);	0
16	PropertyBindingSupport_bind0_NumericalTest	bind_Float	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(null,"STR","STR"));	0
20	PropertyBindingSupport_bind0_NumericalTest	bind_Float	assertTrue(bind0(testObject,"STR","STR"));	assertTrue(true);	0
0	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertEquals(qResult.size(),3);	1
1	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertTrue(qResult.size()<=3);	0
2	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertFalse(qResult.isEmpty());	0
3	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotNull(qResult);	0
4	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotEquals(0,qResult.size());	0
8	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertEquals(qResult.size(),3);	1
9	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertEquals(qResult.size(),3);	1
10	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertEquals(qResult.size(),3);	1
11	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertEquals(qResult.size(),3);	1
19	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotNull(qResult);	0
0	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotNull(qResult);	0
1	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertTrue(!qResult.isEmpty());	0
2	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	0
4	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertEquals(qResult.size(),2);	1
6	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	0
7	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertTrue(qResult.size()>0);	0
10	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertTrue(!qResult.isEmpty());	0
12	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotEquals(0,qResult.size());	0
0	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotNull(property);	0
2	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertTrue(property.getType()==OType.STRING);	0
3	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(property.isMandatory());	0
9	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertEquals(OType.STRING,property.getType());	0
2	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNull(doc.field("STR"));	0
3	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertFalse(doc.field("STR")instanceofHashSet);	0
5	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertEquals(1,lst.size());	0
6	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNotEquals(0,set.size());	0
0	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
1	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
2	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
5	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
10	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
22	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
0	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertEquals(0,res.size());	0
2	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNotNull(res);	0
3	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertTrue(res.isEmpty());	1
2	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotNull(this.jolokiaConnection.getLog());	1
3	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotSame(mockLogger,jolokiaConnection.getLog());	0
4	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertTrue(this.jolokiaConnection.getLog()instanceofLogger);	0
5	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotSame(this.jolokiaConnection.getLog(),mockLogger);	0
8	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertTrue(jolokiaConnection.getLog()!=null);	0
10	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertFalse(jolokiaConnection.getLog()==null);	0
19	JolokiaConnectionTest	testGetSetLogger	assertNotNull(this.jolokiaConnection.getLog());	assertNotNull(jolokiaConnection.getLog());	0
0	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertNull(result);	1
6	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertNull(result);	1
13	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertNull(result);	1
19	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertNull(result);	1
20	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertNull(result);	1
23	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertNull(result);	1
0	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(0,cm.count("STR"));	0
2	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(1,cm.count(poolKey));	1
0	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn());	1
1	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client2.isConnectionMonitorSwitchOn());	0
2	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn());	1
7	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertEquals(true,client1.isConnectionMonitorSwitchOn());	0
8	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotNull(client1);	0
18	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	0
1	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy);	0
2	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertTrue(proxy.getPort()!=0);	0
4	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotEquals("STR",proxy.getProtocol());	0
5	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertFalse(proxy.getHost().isEmpty());	0
6	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotSame(null,proxy);	0
27	SeekHeadFactoryTest	testEstimeteSeekSize	assertEquals(14,estimeteSeekSize(4,1));	assertTrue(estimeteSeekSize(0,0)>0);	0
0	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertEquals(1,profiles.size());	1
1	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertFalse(profiles.isEmpty());	0
3	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotNull(profiles);	0
4	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotEquals(0,profiles.size());	0
12	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotSame(0,profiles.size());	0
0	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	1
1	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	1
5	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNull(handler.getInitContainer(builder,"STR"));	0
11	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	1
12	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	1
17	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	1
23	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNull(handler.getInitContainer(builder,"STR"));	0
24	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	1
0	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertEquals(latestTag,resultedTag);	1
1	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	0
2	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertSame(latestTag,resultedTag);	0
4	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertEquals(latestTag,service.newerTag(oldTag,latestTag));	0
5	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertEquals(latestTag,resultedTag);	1
7	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	0
8	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(service.newerTag(oldTag,latestTag)==latestTag);	0
9	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(oldTag,resultedTag);	0
1	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertTrue(!this.httpclient.getCookieStore().getCookies().isEmpty());	0
2	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotNull(this.httpclient.getCookieStore().getCookies());	0
3	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertEquals(1,cookies.getCookies().size());	1
5	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertFalse(this.httpclient.getCookieStore().getCookies().isEmpty());	0
7	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertSame(this.httpclient.getCookieStore(),this.httpclient.getCookieStore());	0
0	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	1
1	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotEquals(FilterReply.DENY,filter.decide(evt));	0
2	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.NEUTRAL);	0
6	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertSame(FilterReply.NEUTRAL,filter.decide(evt));	0
7	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.DENY);	0
0	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(normalizedUrl.equals(expectedResult));	0
2	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
8	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
13	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
15	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	0
0	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertEquals(billg,HTMLDecoder.decode(encoded));	1
1	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertTrue(billg.equals(HTMLDecoder.decode(encoded)));	0
2	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertNotNull(HTMLDecoder.decode(encoded));	0
6	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertArrayEquals(billg.toCharArray(),HTMLDecoder.decode(encoded).toCharArray());	0
8	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertTrue(billg.contains(HTMLDecoder.decode(encoded)));	0
10	EmailAddresses	testDecoder	assertEquals(billg,HTMLDecoder.decode(encoded));	assertEquals(billg.length(),HTMLDecoder.decode(encoded).length());	0
0	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsKey("STR"));	1
1	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.containsKey("STR"));	0
2	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(3,map.size());	0
5	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsValue(7));	0
7	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotEquals(4,map.size());	0
11	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsKey("STR"));	1
0	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	0
1	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotNull(formas);	0
2	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	0
16	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	0
20	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotNull(formas.get(0));	0
21	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotNull(formas);	0
26	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	0
0	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertFalse(config.isNull("STR"));	1
1	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertFalse(config.isNull("STR"));	1
2	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertTrue(config.isNull("STR"));	0
5	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertTrue(config.isNull("STR"));	0
3	ODocumentSchemalessBinarySerializationTest	testFieldNamesRaw	assertNotNull(fields);	assertNotNull(fields);	1
15	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertNotNull(cm);	0
0	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343l,OVarIntSerializer.readAsLong(bytes));	1
1	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertTrue(OVarIntSerializer.readAsLong(bytes)==20432343);	0
2	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotEquals(0,OVarIntSerializer.readAsLong(bytes));	0
3	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotNull(OVarIntSerializer.readAsLong(bytes));	0
4	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotSame(null,OVarIntSerializer.readAsLong(bytes));	0
7	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotSame(0,OVarIntSerializer.readAsLong(bytes));	0
0	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertEquals(treeBucket.size(),0);	1
1	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size()==0);	0
2	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertFalse(treeBucket.size()>0);	0
4	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	0
6	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertSame(treeBucket,treeBucket);	0
7	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size()>=0);	0
9	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertEquals(treeBucket.size(),0);	1
10	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertEquals(treeBucket.size(),0);	1
0	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertTrue(server.existsDatabase("STR"));	1
1	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.existsDatabase("STR"));	0
2	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertTrue(server.existsDatabase("STR"));	1
5	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertTrue(server.existsDatabase("STR"));	1
10	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotNull(server);	0
11	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertTrue(server.existsDatabase("STR"));	1
14	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotNull(server.existsDatabase("STR"));	0
16	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertEquals(1,server.listDatabases().size());	0
0	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotNull(res);	0
1	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>=0);	0
2	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	0
3	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertEquals(1,res.size());	0
4	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
0	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,anotherCompositeKey);	0
1	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.equals(anotherCompositeKey));	1
2	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertTrue(!compositeKey.equals(anotherCompositeKey));	0
3	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	0
4	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.hashCode()!=anotherCompositeKey.hashCode());	0
6	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.equals(compositeKey));	0
8	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey.hashCode(),anotherCompositeKey.hashCode());	0
0	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
1	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
8	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(expectedResult.size(),2);	0
9	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertFalse(expectedResult.isEmpty());	0
10	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
0	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotNull(property);	0
3	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertTrue(property.getType().equals(OType.STRING));	0
4	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isMandatory());	0
5	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertEquals(OType.STRING,property.getType());	0
7	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isIndexed());	0
9	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals("STR",property.getName());	0
0	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotNull(timeLine);	0
2	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertFalse(timeLine.getMultiValueChangeEvents().isEmpty());	0
3	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertTrue(timeLine.getMultiValueChangeEvents().size()>0);	0
4	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertTrue(timeLine.getMultiValueChangeEvents().size()>=1);	0
5	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotEquals(0,timeLine.getMultiValueChangeEvents().size());	0
6	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertNotSame(0,timeLine.getMultiValueChangeEvents().size());	0
7	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertTrue(!timeLine.getMultiValueChangeEvents().isEmpty());	0
0	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
1	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertEquals(true,w.isRecognized());	0
2	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
3	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotEquals(false,w.isRecognized());	0
10	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
13	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotNull(w);	0
14	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
21	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotNull(locītājs);	0
24	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
27	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
5	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(viņš.isRecognized());	1
6	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(viņš.isRecognized());	1
28	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotNull(viņš);	0
3	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.isEmpty());	0
5	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(set.containsAll(ACollectionHelper.flatten(Collections.singleton(set))));	0
13	ACollectionHelperTest	testMkStringFull	assertEquals("STR",ACollectionHelper.mkString(Arrays.asList(),"STR","STR","STR"));	assertNotEquals("STR",ACollectionHelper.mkString(Arrays.asList("STR","STR","STR"),"STR","STR","STR"));	0
14	ACollectionHelperTest	testMkStringFull	assertEquals("STR",ACollectionHelper.mkString(Arrays.asList(),"STR","STR","STR"));	assertTrue(ACollectionHelper.mkString(Arrays.asList("STR","STR","STR"),"STR","STR","STR").length()>0);	0
15	ACollectionHelperTest	testMkStringFull	assertEquals("STR",ACollectionHelper.mkString(Arrays.asList(),"STR","STR","STR"));	assertNotSame("STR",ACollectionHelper.mkString(Arrays.asList("STR","STR","STR"),"STR","STR","STR"));	0
0	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	0
1	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	0
7	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotNull(sourceFile);	0
8	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(srcDir.exists());	0
9	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.isDirectory());	0
12	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotEquals("STR",sourceFile.getName());	0
14	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(util.isGeneratedConfigFile(sourceFile,srcDir,targetDir));	0
15	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertNotSame(targetDir,srcDir);	0
16	DevUtilTest	testNotGeneratedConfigFiles	assertFalse("STR",util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertEquals(srcDir.getParent(),targetDir.getParent());	0
19	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(targetDir.isDirectory());	0
21	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.exists());	1
22	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(targetDir.isFile());	0
27	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotEquals(0,targetDir.listFiles().length);	0
0	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
3	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotNull(result);	0
5	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
7	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
8	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
1	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertTrue(resultinstanceofJMXServiceURL);	0
2	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotNull(result);	1
3	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotNull(result);	1
6	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotNull(result);	1
9	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotSame(result,null);	0
1	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	1
2	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotNull(factory.getJmxServiceUrlFactory());	0
3	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotSame(mockJmxServiceUrlFactory,factory.getJmxServiceUrlFactory());	0
7	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofJMXServiceUrlFactory);	0
9	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertEquals(DefaultJmxServiceUrlFactory.class,factory.getJmxServiceUrlFactory().getClass());	0
11	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertFalse(this.factory.getJmxServiceUrlFactory()==null);	0
12	JMXJvmIdConnectionFactoryTest	testGetSetJmxServiceFactory	assertTrue(this.factory.getJmxServiceUrlFactory()instanceofDefaultJmxServiceUrlFactory);	assertNotSame(mockJmxServiceUrlFactory,factory.getJmxServiceUrlFactory());	0
0	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertNotNull(m.markdown(null));	0
1	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertEquals("STR",m.markdown(null));	1
3	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertFalse(m.markdown("STR").isEmpty());	0
4	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertNotEquals("STR",m.markdown("STR"));	0
5	EdgeCases	testNull	assertEquals("STR",m.markdown(null));	assertTrue(m.markdown("STR").contains("STR"));	0
2	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotNull(deflateExtension.getProvidedExtensionAsServer());	0
3	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer());	0
4	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.getProvidedExtensionAsServer().isEmpty());	0
5	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame("STR",deflateExtension.getProvidedExtensionAsServer());	0
13	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.getProvidedExtensionAsServer().contains("STR"));	0
0	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	1
1	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotSame(defaultExtension0.hashCode(),defaultExtension1.hashCode());	0
2	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	1
3	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.hashCode()==defaultExtension1.hashCode());	0
10	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.equals(defaultExtension1));	0
1	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotNull(c.yModeProbs);	0
4	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertTrue(c.getYModeProbs().length>0);	0
7	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertTrue(c.getYModeProbs()[0][0]>=0);	0
8	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotSame(null,c.getYModeProbs());	0
14	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotSame(c.yModeProbs,Y_MODE_PROBS);	0
3	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual.getId());	0
4	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual);	1
5	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual.getId());	0
2	VerbsTest	testImported	assertNotNull(actual);	assertNotNull(actual);	1
5	VerbsTest	testImported	assertNotNull(actual);	assertNotSame("STR",actual.toString());	0
7	VerbsTest	testImported	assertNotNull(actual);	assertTrue(actualinstanceofVerb);	0
8	VerbsTest	testImported	assertNotNull(actual);	assertNotSame(Verbs.imported(),actual);	0
1	VerbsTest	testInitialized	assertNotNull(actual);	assertNotNull(actual);	1
2	VerbsTest	testInitialized	assertNotNull(actual);	assertNotNull(actual);	1
3	VerbsTest	testInitialized	assertNotNull(actual);	assertTrue(actualinstanceofVerb);	0
8	VerbsTest	testInitialized	assertNotNull(actual);	assertNotNull(actual);	1
11	VerbsTest	testInitialized	assertNotNull(actual);	assertNotSame(Verbs.initialized(),actual);	0
1	StatementTest	testToString	assertNotNull(actual);	assertTrue(!statement.getId().equals(actual.getId()));	0
2	StatementTest	testToString	assertNotNull(actual);	assertNotNull(actual.getId());	0
10	StatementTest	testToString	assertNotNull(actual);	assertNotNull(this.statement.getContext().getLanguage());	0
13	StatementTest	testToString	assertNotNull(actual);	assertTrue(Long.parseLong(statement.getStored())<=System.currentTimeMillis());	0
14	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getTimestamp().equals(statement.getStored()));	0
15	StatementTest	testToString	assertNotNull(actual);	assertNotNull(statement.getAttachments());	0
16	StatementTest	testToString	assertNotNull(actual);	assertTrue(statement.getResult().isSuccess());	0
20	StatementTest	testToString	assertNotNull(actual);	assertNotNull(statement.getActor());	0
0	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	0
5	ActivityTest	testGetObjectType	assertNotNull(actual);	assertNotNull(activity.getObjectType());	0
6	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	0
5	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotNull(moneyToStrUAHRUS.convert(0.0));	0
6	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrUAHRUS.convert(123.45));	0
8	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotSame("STR",moneyToStrUAHRUS.convert(100.0));	0
13	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertFalse(moneyToStrUAHRUS.convert(0.0).isEmpty());	0
14	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrUAHRUS.convert(0.0));	0
15	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertTrue(moneyToStrUAHRUS.convert(10.0).length()>0);	0
19	MoneyToStrTest	checkUAHRUS	assertEquals("STR",moneyToStrUAHRUS.convert(V_300D));	assertNotSame(moneyToStrUAHRUS.convert(100.0),moneyToStrRURRUS.convert(100.0));	0
0	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertNotNull(moneyToStrPER100);	0
2	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertNotEquals("STR",moneyToStrUSD.toString());	0
3	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertTrue(moneyToStrUAHENGinstanceofMoneyToStr);	0
4	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertTrue(moneyToStrRURRUSinstanceofMoneyToStr);	0
5	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertTrue(moneyToStrUSDENGinstanceofMoneyToStr);	0
6	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertNotSame(moneyToStrUAH,moneyToStrRUR);	0
7	MoneyToStrTest	percentToStr	assertEquals("STR",MoneyToStr.percentToStr(12D,MoneyToStr.Language.RUS));	assertFalse(moneyToStrUSDENG.equals(moneyToStrPER1000));	0
0	TestPressure	testToMillibar	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	0
3	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotSame(expected,actual);	0
15	TestPressure	testToMillibar	assertEquals(expected,actual);	assertEquals(expected,actual);	1
0	TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	0
5	TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
6	TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
9	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotEquals("STR",actual);	0
0	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100);	0
2	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotNull(value);	0
3	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotNull(value);	0
6	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100);	0
8	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(100,value);	0
9	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertFalse(value>100);	0
4	PropertyBindingSupport_bind0_NumericalTest	bind_long	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(null,"STR","STR"));	0
28	PropertyBindingSupport_bind0_NumericalTest	bind_Double	assertTrue(bind0(testObject,"STR","STR"));	assertFalse(bind0(null,"STR","STR"));	0
0	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertEquals(XML,resp);	0
2	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotNull(response);	0
3	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertTrue(response.readableBytes()>0);	0
5	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertArrayEquals(XML.getBytes(),resp.getBytes());	0
7	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertFalse(resp.isEmpty());	0
11	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertNotSame(XML,resp);	0
12	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertEquals(XML.length(),resp.length());	0
13	FlashPolicyHandlerTest	testDecodeCustomResponse	assertTrue(XML.equals(resp));	assertEquals(XML,resp);	0
0	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
1	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.nonEmpty());	0
3	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	0
5	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	0
15	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens.head());	0
22	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.size()>0);	0
8	CollectorsTest	toImmutableList	assertEquals(ImmutableList.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableList()));	assertTrue(true);	0
10	CollectorsTest	toImmutableList	assertEquals(ImmutableList.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableList()));	assertFalse(false);	0
12	CollectorsTest	toImmutableList	assertEquals(ImmutableList.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableList()));	assertNotNull("STR");	0
19	CollectorsTest	toImmutableList	assertEquals(ImmutableList.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableList()));	assertNotNull(Collectors.toImmutableList());	0
26	CollectorsTest	toImmutableList	assertEquals(ImmutableList.of(1,2,3),Arrays.asList(1,2,3).stream().collect(Collectors.toImmutableList()));	assertTrue(true);	0
0	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser.parse(sample1));	1
1	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertTrue(parser.parse(sample1)instanceofCommonEvent);	0
2	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser.parse(sample1));	1
6	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertFalse(parser.parse(sample1)==null);	0
13	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser.parse(sample1));	1
16	CEFParserTest	validMessageWithoutValidationTest	assertNotNull(parser.parse(sample1));	assertNotNull(parser.parse(sample1));	1
12	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals(env.get("STR"),"STR");	0
14	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	0
19	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	0
0	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotNull(helloClass);	1
1	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.isMemberClass());	0
2	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.isLocalClass());	0
8	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertEquals(1,helloClass.getDeclaredConstructors().length);	0
0	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNotNull("STR");	0
4	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertTrue(this.httpclient.getCookieStore().getCookies().contains(clientCookie));	0
7	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertTrue(this.httpclient.getCookieStore().getCookies().size()>0);	0
8	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNotEquals("STR",this.httpclient.getCookieStore().getCookies().get(0).getValue());	0
9	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertEquals(1,this.httpclient.getCookieStore().getCookies().size());	0
10	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertFalse(this.httpclient.getCookieStore().getCookies().isEmpty());	0
12	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNotNull(this.httpclient.getCookieStore().getCookies().get(0));	0
14	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNotSame("STR",this.httpclient.getCookieStore().getCookies().get(0).getValue());	0
15	CookieIntegrationTest	testServerReceivesCookiesSentFromClient	assertEquals(1,this.testServer.cookiesReceived.size());	assertNotNull(this.httpclient.getCookieStore().getCookies());	0
2	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find());	1
5	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find());	1
9	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find());	1
15	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher);	0
23	MatcherTest	reset	assertTrue(matcher.find());	assertFalse(pattern.matcher("STR").find());	0
25	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find());	1
0	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotNull(result);	0
28	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertEquals("STR",result);	1
0	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	1
11	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	1
14	ReflectionUtilsTest	testGetField_typeMismatch	assertNull(field);	assertNull(field);	1
0	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotNull(options);	1
3	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotNull(options);	1
6	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotNull(options);	1
0	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	0
1	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	0
3	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertFalse(duration>durationLimit);	0
4	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	0
8	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue((duration%2)==0||(duration%2)==1);	0
10	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotNull(duration);	0
11	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=ONE_SECOND_TO_NANOS);	0
12	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotSame(duration,ONE_SECOND_TO_NANOS);	0
13	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertEquals(durationLimit,ONE_SECOND_TO_NANOS);	0
0	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertNotEquals("STR",this.toString());	0
0	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertEquals("STR",clazz.getCustom("STR"));	1
2	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(resultinstanceofList);	0
4	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
5	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(((List<?>)result).size()>0);	0
6	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
7	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertEquals(((List<?>)result).size(),mapToTest.size());	0
12	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
1	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(result.length,1);	1
2	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(Arrays.asList(result).contains(OType.INTEGER));	0
2	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertEquals(compositeKey.getKeys().size(),1);	1
3	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().isEmpty());	0
9	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertTrue(compositeKey.getKeys().size()>0);	0
1	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotNull(index);	0
2	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(indexinstanceofOIndex);	0
5	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotEquals(0,index.getSize());	0
6	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotNull(index);	0
0	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(result);	0
1	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(result);	0
5	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(result);	0
8	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(result);	0
9	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertTrue(resultinstanceofBigDecimal);	1
10	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(result);	0
12	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertTrue(resultinstanceofNumber);	0
0	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	0
3	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.stream().count()>0);	0
4	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	0
8	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult.getExecutionPlan());	0
9	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.getExecutionPlan().isPresent());	0
16	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	0
18	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	0
21	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	0
25	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	0
5	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertNotNull(listener);	0
9	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertNotEquals(null,listener);	0
13	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertNotNull(listener);	0
0	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotNull(oClass.getProperty("STR"));	1
6	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotEquals(0,oSchema.countClasses());	0
1	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertTrue(resultinstanceofList);	0
2	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
3	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertFalse(((List<?>)result).isEmpty());	0
5	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
7	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
8	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertTrue(!((List<?>)result).isEmpty());	0
12	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
2	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(Float.BYTES==floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset));	0
3	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertFalse(Float.BYTES!=floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset));	0
4	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotEquals(0,floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset));	0
5	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset));	0
6	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotSame(0,floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset));	0
7	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset)>0);	0
1	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
2	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
6	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	0
9	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(otp.isEmpty());	0
10	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(0,otp.length());	0
11	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertTrue(otp.length()>0);	0
14	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotSame("STR",otp);	0
16	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(otp.equals("STR"));	0
17	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals("STR",otp);	0
2	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(client.isValidOTPFormat(otp));	0
6	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
8	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
15	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(0,otp.length());	0
18	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(otp.length(),6);	0
19	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(client.isValidOTPFormat(otp));	0
20	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	0
24	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(client.isValidOTPFormat(otp));	0
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
2	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	0
3	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
4	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertFalse(routePrioritizer.getPrioritizedRoutes().contains(null));	0
7	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
11	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty()||routePrioritizer.getPrioritizedRoutes().size()>0);	0
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
2	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	0
3	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
5	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
8	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
14	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
25	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
27	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
0	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
1	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertEquals(expected.length,actual.length);	0
2	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
4	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertNotNull(actual);	1
10	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
0	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
2	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertSame(expected,actual);	0
4	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	0
5	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.contains(expected.get(0)));	0
6	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
7	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertNotNull(actual);	1
10	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	0
11	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.size()>0);	0
0	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	0
1	StatementTest	testGetObject	assertNotNull(actual);	assertTrue(actualinstanceofActivity);	0
2	StatementTest	testGetObject	assertNotNull(actual);	assertNotNull(actual);	1
3	StatementTest	testGetObject	assertNotNull(actual);	assertTrue(expected.equals(actual));	0
10	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	0
12	StatementTest	testGetObject	assertNotNull(actual);	assertNotNull(statement.getObject());	0
13	StatementTest	testGetObject	assertNotNull(actual);	assertSame(expected,actual);	0
0	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(aXls);	0
1	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(aXlsinstanceofCodeListDocument);	0
2	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(aXls.exists());	1
5	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(0,aXls.getFile().length());	0
6	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertSame(CGenericode.GENERICODE_04_XSDS,aXls.getSchema());	0
7	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(null,aXls.getSource());	0
4	GeneralTest	testGetName	assertEquals("STR",newGeneral(env()).getName());	assertNotNull(getClass().getName());	0
1	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertTrue(markup.markdown("STR")!=null);	0
3	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertFalse(markup.markdown("STR").isEmpty());	0
4	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotEquals("STR",markup.markdown("STR"));	0
6	LineConventions	testMacLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotSame("STR",markup.markdown("STR"));	0
4	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotEquals("STR",markup.markdown("STR").trim());	0
5	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	0
7	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	0
11	LineConventions	testWindowsLineConventions	assertEquals(EXPECTED,markup.markdown("STR"));	assertNotNull(markup.markdown("STR"));	0
5	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m);	0
11	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertNotNull(m);	0
1	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertEquals("STR",m.markdown("STR"));	1
10	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(1,env.size());	0
15	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.isEmpty());	0
21	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.containsKey("STR"));	0
0	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals("STR",env.get("STR"));	0
1	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(env.containsKey("STR"));	0
2	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.isEmpty());	0
3	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull("X"put("BAR","Y"}};);	0
4	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(2,env.size());	0
6	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame(env,result);	0
8	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals(env,result);	0
0	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals(4,filter(env).size());	0
1	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(filter(env).containsKey("STR"));	0
2	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(filter(env).isEmpty());	0
11	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotNull(filter(env).get("STR"));	0
0	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotNull(atts);	0
1	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertTrue(atts.size()>=0);	0
4	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertEquals(2,atts.size());	1
5	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertFalse(atts.isEmpty());	0
6	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertEquals(2,atts.size());	1
7	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotSame(this.withoutAnnotation,atts);	0
11	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertFalse(atts.containsKey("STR"));	0
0	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertNotNull(processor.getObjectQueryPreparer());	0
1	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertNotNull(processor.getObjectQueryPreparer());	0
2	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertTrue(polledObjects.contains(polled001));	0
5	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertEquals(resultAttributeMap.size(),1);	0
6	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertFalse(polledObjects.isEmpty());	0
7	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertNotNull(mockAttributeInjector);	0
8	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertTrue(mockObjectQueryPreparerinstanceofObjectQueryPreparer);	0
10	BatchPollProcessorTest	testGetSetObjectQueryPreparer	assertNotNull(this.processor.getObjectQueryPreparer());	assertTrue(mockAccessConnectioninstanceofMBeanBatchCapableAccessConnection);	0
0	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertTrue(tokens.apply("STR").containsAll(Arrays.asList("STR","STR")));	0
1	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(Arrays.asList("STR","STR"),tokens.apply("STR"));	0
2	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotEquals(Arrays.asList("STR","STR"),tokens.apply("STR"));	0
3	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotNull(tokens.apply("STR"));	0
8	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertTrue(tokens.apply("STR").isEmpty());	0
11	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertThrows(IllegalArgumentException.class,()->tokens.apply(null));	0
2	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertNotNull(bolt);	0
7	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertTrue(true);	0
23	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertTrue(true);	0
24	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertFalse(false);	0
26	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR","STR",fields.get("STR"));	assertEquals(null,fields.get("STR"));	0
27	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR","STR",fields.get("STR"));	assertNull(fields.get("STR"));	0
29	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR","STR",fields.get("STR"));	assertFalse(fields.containsKey("STR"));	0
5	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	assertTrue(true);	0
0	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertTrue(iterator.hasNext());	1
1	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotNull(iterator);	0
2	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertTrue(iterator.hasNext());	1
9	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertEquals(Integer.valueOf(1),iterator.next());	0
11	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotNull(iterator);	0
0	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	1
1	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.equals(Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet())));	0
2	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertNotNull(expected);	0
3	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertFalse(expected.isEmpty());	0
4	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertEquals(expected.size(),3);	0
7	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.containsAll(Arrays.asList(1,2,3)));	0
0	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
2	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
3	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
4	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotNull(result);	0
7	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
1	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
2	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(11,tokens.size());	0
3	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	0
4	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	0
5	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.size()>0);	0
12	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	0
14	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens.apply(0));	0
1	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	0
2	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()>0);	0
3	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	0
8	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotSame(getAllTestData(),filtered);	0
13	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	0
14	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.contains(null));	0
15	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotEquals(getAllTestData(),filtered);	0
0	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
1	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertEquals(true,matcher.lookingAt());	0
2	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.lookingAt());	0
4	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNull(matcher.lookingAt());	0
6	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotSame(expectedValue,actualValue);	0
8	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertEquals(expectedValue,actualValue);	0
0	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertEquals(1,formas.size());	1
1	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	0
8	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	0
11	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	0
13	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	0
14	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotSame(0,formas.size());	0
15	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(!formas.isEmpty());	0
17	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	0
18	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas.get(0));	0
2	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotNull(moneyToStrEURRUS.convert(56.63));	0
3	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotEquals("STR",moneyToStrEURRUS.convert(56.63));	0
4	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertFalse(moneyToStrEURRUS.convert(56.63).isEmpty());	0
5	MoneyToStrTest	checkEURRUS	assertEquals("STR",moneyToStrEURRUS.convert(V_300D));	assertNotSame("STR",moneyToStrEURRUS.convert(56.63));	0
0	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals("STR",defaultExtension.toString());	1
2	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotNull(defaultExtension.toString());	0
3	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotEquals("STR",defaultExtension.toString());	0
4	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(!defaultExtension.toString().isEmpty());	0
8	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertFalse(defaultExtension.toString().equals("STR"));	0
18	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	1
0	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(transform);	1
1	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(transform);	1
4	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(transform);	1
10	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(transform);	1
12	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(transform);	1
0	SourceLoaderFactoryTest	testCreateSourceLoaderWithAdditionalSourceDirectories	assertNotNull(sourceLoader);	assertNotNull(sourceLoader);	1
10	SourceLoaderFactoryTest	testCreateSourceLoaderWithAdditionalSourceDirectories	assertNotNull(sourceLoader);	assertNotNull(sourceLoader);	1
1	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertTrue(Seq.join(Arrays.asList("STR","STR"),"STR").contains("STR"));	0
2	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertFalse(Seq.join(Arrays.asList("STR","STR"),"STR").isEmpty());	0
4	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertNotNull(Seq.join(Arrays.asList("STR","STR"),"STR"));	0
6	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertTrue(Seq.join(Arrays.asList("STR","STR"),"STR").startsWith("STR"));	0
8	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertNotSame("STR",Seq.join(Arrays.asList("STR","STR"),"STR"));	0
9	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertFalse(Seq.join(Arrays.asList("STR","STR"),"STR").equals("STR"));	0
0	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotNull(sql);	0
1	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
3	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
3	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotNull(sql.toString());	0
5	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertTrue(!sql.toString().isEmpty());	0
7	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	0
8	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
9	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotSame("STR",sql.toString());	0
13	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString().contains("STR"));	0
19	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertFalse(sql.toString().equals("STR"));	0
20	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals(0,sql.toString().length());	0
1	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	1
2	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertTrue(java.util.Arrays.equals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in)));	0
3	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	1
10	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	1
11	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertEquals(expecteds[0],MkvBlock.calcEbmlLacingDiffs(_in)[0]);	0
13	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertTrue(java.util.Arrays.equals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in)));	0
15	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertEquals(expecteds[1],MkvBlock.calcEbmlLacingDiffs(_in)[1]);	0
16	MkvBlockTest	testEbml	assertArrayEquals(expecteds,MkvBlock.calcEbmlLacingDiffs(_in));	assertNotEquals(expecteds[2],Math.abs(MkvBlock.calcEbmlLacingDiffs(_in)[2]));	0
2	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertNotNull(ebmlEncode(0));	0
4	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertEquals(ebmlLength(123456),ebmlEncode(123456).length);	0
6	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertTrue(ebmlEncode(1000).length>0);	0
7	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertFalse(ebmlEncode(0).length==0);	0
10	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertEquals(ebmlLength(123),ebmlEncode(123).length);	0
11	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertNotEquals(0,ebmlEncode(123).length);	0
12	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertNotEquals(5,ebmlEncode(123).length);	0
16	EbmlUtilTest	testEbmlBytes	assertArrayEquals(newbyte[]{(byte)0x81},ebmlEncode(1));	assertNotSame(null,ebmlEncode(10));	0
3	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotEquals("STR",moneyToStrUAH.convert(2300.10));	0
5	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertFalse(moneyToStrUSDRUS.convert(0.99).isEmpty());	0
6	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotNull(moneyToStrUAHENG.convert(500.0));	0
7	MoneyToStrTest	checkUAHRUSMinus	assertEquals("STR",moneyToStrUAHRUS.convert(-V_300D));	assertNotSame(moneyToStrRUR.convert(100.0),moneyToStrRURRUS.convert(100.0));	0
2	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotEquals("STR",moneyToStrUAHENG.convert(200.30));	0
3	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotNull(moneyToStrUSD);	0
6	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertFalse(moneyToStrRURRUS.convert(500.00).isEmpty());	0
7	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotSame(moneyToStrUAHENG,moneyToStrUAHRUS);	0
8	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertEquals(9,MoneyToStr.Currency.values().length);	0
12	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotEquals(100.50,moneyToStrUAHENG.convert(100.50));	0
15	MoneyToStrTest	checkUAHUKMinus	assertEquals("STR",moneyToStrUAH.convert(-V_300D));	assertNotSame(moneyToStrPER100,moneyToStrPER1000);	0
0	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertEquals(OMultiValue.getFirstValue(collection),"STR");	1
1	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertTrue(OMultiValue.getFirstValue(collection)instanceofString);	0
2	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotNull(OMultiValue.getFirstValue(collection));	0
3	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotEquals("STR",OMultiValue.getFirstValue(collection));	0
4	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertFalse(OMultiValue.getFirstValue(collection)instanceofInteger);	0
6	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertTrue(OMultiValue.isMultiValue(collection));	0
10	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertTrue(OMultiValue.getSize(collection)>0);	0
0	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertEquals(1,vertices.size());	1
1	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.size()>0);	0
2	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotNull(vertices);	0
7	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertFalse(vertices.isEmpty());	0
8	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotSame(0,vertices.size());	0
0	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertTrue(resultinstanceofCollection);	0
3	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertTrue(resultinstanceofCollection<?>);	0
4	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	0
12	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	0
25	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	0
26	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	0
0	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
1	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(expectedResult.containsAll((List<OCompositeKey>)result));	0
2	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotNull(result);	0
8	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(resultinstanceofList<?>&&!((List<?>)result).isEmpty());	0
9	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotEquals(0,((List<OCompositeKey>)result).size());	0
10	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertTrue(resultinstanceofList<?>&&((List<?>)result).containsAll(expectedResult));	0
1	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
2	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
3	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertEquals(0,result.stream().count());	0
4	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
7	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
9	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
10	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
11	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertTrue(result.stream().count()<=1);	0
13	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertNotNull(result.getExecutionPlan());	0
15	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
0	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	1
1	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertTrue(OBJECT==byteSerializer.deserialize(stream,0));	0
2	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotNull(byteSerializer.deserialize(stream,0));	0
6	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	1
9	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertTrue(byteSerializer.deserialize(stream,0)>0);	0
0	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	1
1	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(recordsCount>=0);	0
2	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertFalse(ridBag.isEmpty());	0
5	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotNull(rootDoc);	0
7	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.contains(docOne));	0
8	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertFalse(rootDoc.isDirty());	0
1	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.isMandatory());	0
2	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(idProperty.isNotNull());	0
4	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(idProperty.isNotNull());	0
7	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertEquals(4,Integer.parseInt(idProperty.getMin().toString()));	0
2	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(companyClass);	0
4	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotNull(clazzV);	0
7	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(0,clazzV.getClusterIds());	0
8	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(clazzV.getClusterIds().length>0);	0
9	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertFalse(clazzV.getClusterIds().length==0);	0
13	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertEquals(2,clazzV.getClusterIds().length);	1
14	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(0,clazzV.getClusterIds().length);	0
20	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotSame(0,clazzV.getClusterIds().length);	0
0	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
2	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertEquals(false,doc.isDirty());	0
3	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotEquals(true,doc.isDirty());	0
7	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertSame(false,doc.isDirty());	0
0	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotNull(ret);	1
1	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(retinstanceofOClientConnection);	0
3	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertEquals(1,manager.getConnections().size());	0
4	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertFalse(manager.getConnections().isEmpty());	0
7	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotSame(null,ret);	0
8	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotNull(ret);	1
9	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getConnections().contains(ret));	0
11	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotEquals(null,ret);	0
0	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.equals(anotherCompositeKey));	1
1	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(compositeKey,anotherCompositeKey);	0
3	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey);	0
15	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(compositeKey,anotherCompositeKey);	0
18	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey==anotherCompositeKey);	0
11	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertNotNull(other.getCommand());	0
0	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertEquals(result,"STR");	1
1	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotNull(result);	0
2	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertTrue(resultinstanceofString);	0
3	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotNull(result);	0
4	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNotEquals(null,result);	0
12	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertNull(mapToTest.get("STR"));	0
14	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertFalse(mapToTest.containsKey("STR"));	0
5	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNotNull(logger);	0
6	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertTrue(loggerinstanceofLogger.SystemLogger);	0
28	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertNotSame(null,logger);	0
5	SystemLoggerTest	is_info_level_by_default	assertEquals(Logger.Level.INFO,logger.level);	assertNotNull(logger);	0
0	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(comparison!=0);	0
1	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(comparison<0||comparison>0);	0
2	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotEquals(0,comparison);	1
3	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertFalse(comparison==0);	0
5	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotSame(0,comparison);	0
6	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotEquals(0,comparison);	1
8	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertTrue(comparison>0||comparison<0);	0
0	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.equals(macAddress));	0
1	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.equals(null));	0
2	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertEquals(macAddress,macAddress);	0
4	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotNull(macAddress);	0
5	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertEquals(macAddress,macAddress);	0
9	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.hashCode()!=0);	0
0	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotNull(parser.parse(sample1,true,Locale.US));	0
1	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotNull(parser.parse(sample1,true,Locale.US));	0
3	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotNull(parser.parse(sample1,true,null));	0
5	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotNull(parser.parse(sample1,true,null));	0
7	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertTrue(parser.parse(sample1,true,null)instanceofCommonEvent);	0
17	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertNotNull(parser.parse(sample1,true,Locale.US));	0
18	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertTrue(parser.parse(sample1,true,Locale.US)instanceofCommonEvent);	0
21	CEFParserTest	validStringMessageWithLocaleAndValidationTest	assertNotNull(parser.parse(sample1,true,Locale.FRANCE));	assertFalse(parser.parse(sample1,true,Locale.US)==null);	0
0	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	0
2	AboutTest	testGetExtensions	assertNotNull(actual);	assertNotNull(actual);	1
4	AboutTest	testGetExtensions	assertNotNull(actual);	assertFalse(actual.has("STR"));	0
8	AboutTest	testGetExtensions	assertNotNull(actual);	assertTrue(actual.isJsonObject());	0
11	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	0
0	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	0
3	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	0
5	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	0
7	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotNull(statementRef);	1
10	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotNull(statementRef.getId());	0
11	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	0
0	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	0
1	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
2	GroupTest	testSetMember	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
3	GroupTest	testSetMember	assertNotNull(actual);	assertNotNull(actual);	1
4	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
7	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	0
9	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	0
0	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	0
5	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	0
6	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertEquals(expected,actual);	1
9	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.startsWith(expected));	0
13	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertEquals(expected,actual);	1
16	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertSame(expected,actual);	0
0	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(!actual.isEmpty());	0
2	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertSame(expected,actual);	0
4	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
5	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertNotNull(actual);	0
6	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
11	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.size()>=expected.size());	0
0	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	0
2	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
7	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
8	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.startsWith(normalizedUrl));	0
10	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult.length(),normalizedUrl.length());	0
0	BasicURLNormalizerTest	testLowerCasing	assertEquals("STR",expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testLowerCasing	assertEquals("STR",expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	0
2	BasicURLNormalizerTest	testLowerCasing	assertEquals("STR",expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
7	BasicURLNormalizerTest	testLowerCasing	assertEquals("STR",expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
9	BasicURLNormalizerTest	testLowerCasing	assertEquals("STR",expectedResult,normalizedUrl);	assertNotSame(inputURL,normalizedUrl);	0
0	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(aXls);	0
1	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(aXls.exists());	1
6	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertArrayEquals(expected,actual);	0
8	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	0
14	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNull(object);	0
15	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(expected,actual);	0
0	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertEquals(Opcode.CLOSING,frame.getOpcode());	0
7	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertEquals(CloseFrame.NORMAL,frame.getCloseCode());	0
11	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertTrue(frame.isFin());	0
13	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertEquals(frame.getCloseCode(),CloseFrame.NORMAL);	0
14	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertEquals(CloseFrame.NORMAL,frame.getCloseCode());	0
18	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertEquals(Opcode.CLOSING,frame.getOpcode());	0
20	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertTrue(frame.getCloseCode()==CloseFrame.NORMAL);	0
25	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertTrue(frame.getOpcode()==Opcode.CLOSING);	0
28	CloseFrameTest	testExtends	assertEquals("STR",true,frameinstanceofControlFrame);	assertNotNull(frame);	0
0	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertEquals("STR",protocol0.getProvidedProtocol());	1
1	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(protocol0.getProvidedProtocol().isEmpty());	0
2	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.getProvidedProtocol());	0
4	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.getProvidedProtocol());	0
7	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertFalse(protocol0.getProvidedProtocol().equals("STR"));	0
0	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertNull(contentEncoding);	1
1	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertNull(contentEncoding);	0
2	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertNull(contentEncoding);	0
6	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertEquals(200,response.getStatusLine().getStatusCode());	0
7	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertTrue(response.getEntity().getContentLength()>0);	0
9	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertNotNull(response.getEntity());	0
12	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertNull(contentEncoding);	0
14	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull("STR",contentEncoding);	assertNull(response.getFirstHeader("STR"));	0
7	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertFalse(result.isEmpty());	0
8	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotNull(result);	0
11	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertTrue(result.size()>0);	0
12	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotNull(result);	0
16	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertEquals(3,result.size());	1
18	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotEquals(0,result.size());	0
19	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertTrue(!result.isEmpty());	0
1	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
3	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
4	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.size()>0);	0
7	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(!tokens.isEmpty());	0
11	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	0
13	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
16	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(!tokens.isEmpty());	0
17	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.contains(null));	0
18	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	0
4	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertNotNull(org.slf4j.LoggerFactory.getLogger(LifeCycleTest.class));	0
5	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertFalse(org.slf4j.LoggerFactory.getLogger(LifeCycleTest.class).isTraceEnabled());	0
6	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertTrue(true);	0
16	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertNull(null);	0
21	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertTrue(true);	0
25	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertFalse(false);	0
29	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertTrue(true);	0
2	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertNotNull(context.getBean(DefaultMQProducer.class));	0
13	RocketMqAutoConfigurationTest	defaultRocketMqProducer	assertTrue(this.context.containsBean("STR"));	assertNotNull(TEST_TAG);	0
11	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
2	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	0
4	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	0
5	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(configFile.exists());	1
8	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotEquals(null,configFile);	0
7	FillStyleTest	zigzag	assertEquals(map("STR","STR"),FillStyle.zigzag().values);	assertTrue(true);	0
13	FillStyleTest	zigzag	assertEquals(map("STR","STR"),FillStyle.zigzag().values);	assertTrue(true);	0
14	FillStyleTest	zigzag	assertEquals(map("STR","STR"),FillStyle.zigzag().values);	assertFalse(false);	0
0	OPLogTest	testDescription	assertEquals("STR",value);	assertEquals("STR",value);	1
3	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	0
4	OPLogTest	testDescription	assertEquals("STR",value);	assertFalse(value.isEmpty());	0
10	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	0
12	OPLogTest	testDescription	assertEquals("STR",value);	assertTrue(value.length()>0);	0
13	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	0
14	OPLogTest	testDescription	assertEquals("STR",value);	assertNotNull(value);	0
0	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertEquals(false,client2.isConnectionMonitorSwitchOn());	0
1	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertFalse(client1.isConnectionMonitorSwitchOn());	1
2	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertFalse(client1.isConnectionMonitorSwitchOn());	1
3	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertTrue(!client2.isConnectionMonitorSwitchOn());	0
4	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotNull(client1);	0
6	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotEquals(client1,client2);	0
0	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertEquals("STR",btUrl.getIp());	1
1	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(url.contains(btUrl.getIp()));	0
2	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotNull(btUrl);	0
3	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotEquals("STR",btUrl.getIp());	0
4	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(url.isEmpty());	0
0	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(processorManager.getProcessor(cmd1));	0
5	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotSame(rpcRequestProcessor1,rpcRequestProcessor2);	0
6	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertEquals(cmd1,cmd2);	0
8	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertTrue(processorManager.getProcessor(cmd2)instanceofRpcRequestProcessor);	0
9	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotEquals(rpcRequestProcessor1,rpcRequestProcessor2);	0
11	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertTrue(processorManager.getProcessor(cmd2)instanceofRpcRequestProcessor);	0
12	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertSame(rpcRequestProcessor2,processorManager.getProcessor(cmd2));	0
14	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertTrue(processorManager.getProcessor(cmd2)instanceofRpcRequestProcessor);	0
0	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	1
2	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertTrue(response.getStatus()==ResponseStatus.BAD_SIGNATURE);	0
3	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertNotNull(response);	0
5	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertFalse(response.getStatus()!=ResponseStatus.BAD_SIGNATURE);	0
7	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertFalse(response.getStatus()==ResponseStatus.OK);	0
10	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertTrue(response.getStatus()!=ResponseStatus.OK);	0
0	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
1	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
6	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
16	YubicoClientTest	testBadOTP	assertNotNull(response);	assertFalse(response.isOk());	0
17	YubicoClientTest	testBadOTP	assertNotNull(response);	assertFalse(response.isOk());	0
19	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotEquals("STR",response.getStatus());	0
20	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotEquals(0,response.getTimestamp());	0
25	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
28	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
0	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
5	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected,actual);	0
0	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(score.serialize(),actual);	0
1	ScoreTest	testSerialize	assertNotNull(actual);	assertTrue(actual.isJsonObject());	0
2	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(actual);	1
5	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(actual);	1
8	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(actual);	1
10	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(actual);	1
0	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	0
1	VerbTest	testSetDisplay	assertNotNull(actual);	assertNotNull(actual);	1
4	VerbTest	testSetDisplay	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
5	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	0
8	VerbTest	testSetDisplay	assertNotNull(actual);	assertSame(expected,actual);	0
12	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	0
16	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected.get("STR"),actual.get("STR"));	0
18	VerbTest	testSetDisplay	assertNotNull(actual);	assertFalse(expected.isEmpty());	0
0	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
1	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual!=null);	0
3	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
4	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
9	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
10	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
14	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
0	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertFalse(frame.isFin());	0
1	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertFalse(frame.isFin());	0
2	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertTrue(frame.getOpcode()==Opcode.BINARY);	0
3	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertEquals(Opcode.BINARY,frame.getOpcode());	0
4	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertNotNull(frame);	0
5	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertFalse(frame.isFin());	0
6	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertNotEquals(Opcode.TEXT,frame.getOpcode());	0
8	FramedataImpl1Test	testSetters	assertEquals("STR",false,frame.isFin());	assertTrue(frameinstanceofFramedataImpl1);	0
0	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	1
1	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
2	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertTrue(qResult.size()>0);	0
3	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertFalse(qResult.isEmpty());	0
4	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertFalse(qResult.isEmpty());	0
5	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotNull(qResult);	0
6	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertEquals(1,qResult.size());	1
7	OMatchStatementExecutionTest	testAliasesWithSubquery	assertEquals(1,qResult.size());	assertNotEquals(0,qResult.size());	0
0	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertEquals(3,names.size());	0
1	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertTrue(names.contains("STR"));	1
2	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.isEmpty());	0
3	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotNull(names);	0
4	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertNotEquals(0,names.size());	0
5	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.contains("STR"));	0
10	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertTrue(names.size()>0);	0
1	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertEquals(ddl.replace("STR","STR"),ddl.toLowerCase(Locale.ENGLISH).trim());	0
3	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertFalse(ddl.isEmpty());	0
4	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotNull(ddl);	0
0	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertEquals(v,OBJECT);	1
1	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertEquals(v,OBJECT);	1
3	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotNull(v);	0
8	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotNull(v);	0
10	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotSame(OBJECT,v);	0
0	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
2	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
4	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertTrue(docinstanceofODocument);	0
5	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	0
6	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
7	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
8	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotEquals(5,doc.getVersion());	0
10	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
0	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertEquals(4,r.size());	1
1	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertTrue(r.size()>0);	0
7	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertFalse(r.isEmpty());	0
0	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotNull(index);	0
1	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertEquals(index.getSize(),4);	1
3	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotEquals(0,index.getSize());	0
4	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertFalse(index.contains("STR"));	0
6	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotSame(0,index.getSize());	0
7	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertTrue(index.getSize()>0);	0
6	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	0
7	CiEnvironmentTest	recognises_circle	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals("STR",env.get("STR"));	0
0	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNull(CIEnvironment.detect(env));	1
1	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNull(CIEnvironment.detect(env));	1
11	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertEquals(null,CIEnvironment.detect(env));	0
14	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertTrue(CIEnvironment.detect(env)==null||CIEnvironment.detect(env)instanceofCIEnvironment);	0
27	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertFalse(CIEnvironment.detect(env)!=null);	0
0	YamlConfigLoaderTest	merges	assertEquals(yaml,config.toYaml("STR"));	assertEquals(yaml,config.toYaml("STR"));	1
1	YamlConfigLoaderTest	merges	assertEquals(yaml,config.toYaml("STR"));	assertTrue(yaml.contains(config.toYaml("STR")));	0
2	YamlConfigLoaderTest	merges	assertEquals(yaml,config.toYaml("STR"));	assertNotEquals("STR",config.toYaml("STR"));	0
3	YamlConfigLoaderTest	merges	assertEquals(yaml,config.toYaml("STR"));	assertNotNull(config.toYaml("STR"));	0
5	YamlConfigLoaderTest	merges	assertEquals(yaml,config.toYaml("STR"));	assertNotSame(yaml,config.toYaml("STR"));	0
0	RavenAppenderFactoryTest	hasValidDefaults	assertNull("STR",factory.getDsn());	assertNull(factory.getDsn());	0
3	RavenAppenderFactoryTest	hasValidDefaults	assertNull("STR",factory.getDsn());	assertNotNull(factory);	0
0	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotSame(key1,key2);	0
1	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(key1,key2);	1
6	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(map.get(key1).isEmpty());	0
7	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotSame(key1,key3);	0
11	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(AOption.none(),map.get("STR"));	0
13	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertFalse(map.containsKey("STR"));	0
14	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotNull(map.keys());	0
0	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertEquals(expectedSize,result.size());	0
1	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(result.contains(expectedElement));	0
2	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertFalse(result.isEmpty());	0
3	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotEquals(expectedList,result);	0
5	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(resultinstanceofList);	0
8	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(result.isEmpty());	0
0	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertEquals(a.toString(),b.toString());	0
1	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.equals(b));	0
3	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(java.util.Arrays.equals(a.getCells(),b.getCells()));	0
6	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.equals(b));	0
0	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
2	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	0
3	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(jāmāk.isRecognized());	1
11	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	0
17	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(jāmāk.isRecognized());	1
2	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
3	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
4	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotNull(w);	0
10	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.isRecognized());	0
11	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
14	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
22	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
0	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	0
2	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	0
3	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	0
5	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.sender);	0
14	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	0
16	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	0
17	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	0
19	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.getSender());	0
21	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNull(logger.sender);	0
8	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertTrue(mockParameterReplacer!=null);	0
9	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(preparer.getParameterReplacer());	0
12	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotSame(mockParameterReplacer,preparer.getParameterReplacer());	0
13	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertTrue(preparer.getParameterReplacer()instanceofParameterReplacer);	0
19	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(mockParameterReplacer);	0
20	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(preparer.getParameterReplacer());	0
22	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertTrue(preparer.getParameterReplacer()instanceofParameterReplacer);	0
23	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(preparer.getParameterReplacer());	0
24	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotSame(mockParameterReplacer,testTarget001);	0
26	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(preparer.getParameterReplacer());	0
1	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertTrue(factory.getTargetDescription()!=null);	0
2	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse(factory.getTargetDescription().isEmpty());	0
3	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotNull(factory.getTargetDescription());	0
7	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse(factory.getTargetDescription().contains("STR"));	0
8	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotSame("STR",factory.getTargetDescription());	0
1	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	0
9	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	0
15	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	0
16	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertTrue(method!=null);	0
27	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	0
15	PropertyBindingSupport_bind0_NumericalTest	bind_int_whitespace	assertTrue(bind0(testObject,"STR","STR"+NEW_LINE));	assertFalse(bind0(null,"STR","STR"));	0
28	PropertyBindingSupport_bind0_NumericalTest	bind_int_whitespace	assertTrue(bind0(testObject,"STR","STR"+NEW_LINE));	assertFalse(bind0(null,"STR","STR"));	0
0	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	1
3	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotNull(OpenKoreanTextProcessorJava.detokenize(words));	0
4	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	0
6	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotSame("STR",OpenKoreanTextProcessorJava.detokenize(words));	0
15	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertTrue(!OpenKoreanTextProcessorJava.detokenize(words).isEmpty());	0
0	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertEquals(4,testServer.cookiesToSend.size());	0
1	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertEquals(testServer.cookiesToSend.size(),4);	0
3	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertFalse(testServer.cookiesToSend.isEmpty());	0
10	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertNotNull(testServer);	0
12	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertFalse(testServer.cookiesToSend.isEmpty());	0
16	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertNotEquals(0,testServer.cookiesToSend.size());	0
22	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertEquals(4,testServer.cookiesToSend.size());	0
23	CookieIntegrationTest	testMultipleCookieSentBackToClient	assertEquals(4,this.httpclient.getCookieStore().getCookies().size());	assertTrue(!testServer.cookiesToSend.isEmpty());	0
3	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.isEmpty());	0
4	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertEquals(5,properties.size());	1
0	CEFParserTest	invalidMessageValidationTest	assertNull(event);	assertNull(event);	1
5	CEFParserTest	invalidMessageValidationTest	assertNull(event);	assertNull(event);	1
7	CEFParserTest	invalidMessageValidationTest	assertNull(event);	assertNull(event);	1
11	CEFParserTest	invalidMessageValidationTest	assertNull(event);	assertNull(event);	1
22	CEFParserTest	invalidMessageValidationTest	assertNull(event);	assertNull(event);	1
3	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotEquals("STR",m.markdown("STR"));	0
6	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotNull(m.markdown("STR"));	0
7	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotNull(m.markdown("STR"));	0
9	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertTrue(m.markdown("STR").length()>0);	0
12	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotNull(m.markdown("STR"));	0
19	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotNull(m.markdown("STR"));	0
20	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertNotNull(m.markdown("STR"));	0
0	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertEquals("STR",node.getPath());	1
1	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotNull(node.getPath());	0
5	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertFalse(node.getPath().isEmpty());	0
6	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotSame("STR",node.getPath());	0
11	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotSame("STR",node.getPath());	0
12	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotSame("STR",node.getPath());	0
1	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertTrue(execs.getAppName()!=null);	0
2	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotNull(execs.getAppName());	0
3	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotEquals("STR",execs.getAppName());	0
4	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertFalse(execs.getAppName().isEmpty());	0
18	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotNull(execs.getAppName());	0
20	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotEquals("STR",execs.getAppName().toUpperCase());	0
26	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertNotSame("STR",execs.getAppName());	0
1	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertTrue(convertToBytes(123456789)!=null);	0
2	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertTrue(convertToBytes(987654321).length>0);	0
4	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertNotNull(convertToBytes(123456789));	0
7	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertNotNull(convertToBytes(987654321));	0
10	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertTrue(convertToBytes(123456L).length>0);	0
18	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertTrue(convertToBytes(-123456789).length>0);	0
26	EbmlSintTest	testBytePacking	assertArrayEquals(newbyte[]{0x5f,0x3f},convertToBytes(-192));	assertNotNull(convertToBytes(123456789L));	0
1	OPLogTest	testDescription	assertEquals("STR",value);	assertEquals("STR",value);	1
4	HandleHtmlInlineTagsTest	testInlineTagsWithMarkdown	assertEquals("STR",m.markdown("STR").trim());	assertEquals("STR",m.markdown("STR").trim());	1
2	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertEquals("STR",node.getPath());	1
0	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertEquals("STR","STR");	0
8	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertEquals("STR",execs.getAppName());	1
10	Test_ExecS	testCliAppName	assertEquals("STR",execs.getAppName());	assertEquals("STR",execs.getAppName());	1