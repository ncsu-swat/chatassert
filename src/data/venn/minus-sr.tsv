OracleID	ClassName	TestName	TrueOracle	GenOracle	Correct
0	VerbsTest	testVoided	assertNotNull(actual);	assertNotNull(actual);	1
2	VerbsTest	testVoided	assertNotNull(actual);	assertFalse(actual.getDisplay().isEmpty());	0
10	VerbsTest	testVoided	assertNotNull(actual);	assertNotSame(Verbs.voided(),actual);	0
29	VerbsTest	testVoided	assertNotNull(actual);	assertNull(actual.getDisplay().get("STR"));	0
0	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
1	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual.contains(expected));	0
2	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertNotNull(actual);	1
3	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
8	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertEquals(expected,actual);	0
10	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertSame(expected,actual);	0
18	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertSame(expected,actual);	0
24	SubStatementTest	testGetTimestamp	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	0
2	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotNull(db.getActiveIntent());	1
3	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertNotEquals(null,db.getActiveIntent());	0
12	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertFalse(db.getActiveIntent()==null);	0
13	ODatabaseDocumentTxTest	testReturnDeclaredIntent	assertNotNull(db.getActiveIntent());	assertTrue(db.getActiveIntent()!=null);	0
0	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertEquals(storedVar,var);	1
2	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(var==storedVar);	0
3	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotNull(storedVar);	0
5	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(storedVar>=0);	0
7	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertNotEquals(buffer1,buffer2);	0
8	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.position()!=buffer2.position());	0
10	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.capacity()>0);	0
13	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertTrue(buffer1.capacity()>=10&&buffer2.capacity()>=10);	0
14	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertFalse(buffer1.isDirect()||buffer2.isDirect());	0
15	OByteBufferUtilsTest	testSplitShort	assertEquals(storedVar,var);	assertSame(buffer1.getClass(),buffer2.getClass());	0
1	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertEquals(2,qResult.size());	1
2	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotNull(qResult);	0
3	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertFalse(qResult.isEmpty());	0
4	OMatchStatementExecutionTest	testMaxDepthArrow	assertEquals(2,qResult.size());	assertNotEquals(0,qResult.size());	0
0	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertEquals(keyIndexDefinition.getParamCount(),1);	1
1	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()>=0);	0
2	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotNull(keyIndexDefinition);	0
3	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(0,keyIndexDefinition.getParamCount());	0
4	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(keyIndexDefinition.getParamCount()<0);	0
7	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertFalse(keyIndexDefinition.isAutomatic());	0
11	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertNotEquals(null,keyIndexDefinition);	0
14	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertSame(keyIndexDefinition,keyIndexDefinition);	0
17	OSimpleKeyIndexDefinitionTest	testParamCountOneItem	assertEquals(keyIndexDefinition.getParamCount(),1);	assertTrue(keyIndexDefinition.getParamCount()>0);	0
2	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager.getNewRecords());	0
3	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().size()>0);	0
4	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertFalse(manager.getNewRecords().isEmpty());	0
6	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotEquals(0,manager.getNewRecords().size());	0
7	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(!manager.getNewRecords().isEmpty());	0
8	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotSame(0,manager.getNewRecords().size());	0
13	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertTrue(manager.getNewRecords().stream().anyMatch(record->record.getClass().equals(ODocument.class)));	0
29	ODirtyManagerTest	testLink	assertEquals(2,manager.getNewRecords().size());	assertNotNull(manager.getNewRecords().toArray());	0
6	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNull(proc.getContext().getVariable("STR"));	0
9	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNotNull(proc.getContext());	0
12	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertTrue(proc.getContext().getVariables().isEmpty());	0
14	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNull(proc.getContext().getVariable("STR"));	0
15	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertFalse(proc.getContext().getVariables().containsKey("STR"));	0
20	OETLFieldTransformerTest	testExpression	assertEquals(1,getResult().size());	assertNotNull(proc.getContext().getVariables());	0
0	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertNotNull(result);	0
2	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.hasNext());	1
5	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertTrue(result.stream().count()>0);	0
20	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertFalse(result.elementStream().anyMatch(element->element.getProperty("STR")==null));	0
25	OSelectStatementExecutionTest	testLet1Long	assertTrue(result.hasNext());	assertFalse(result.elementStream().anyMatch(element->element.getPropertyNames().isEmpty()));	0
0	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
1	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
3	TrackedListTest	testAddAllNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
0	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
2	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	0
3	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertTrue(qResult.hasNext());	1
4	OMatchStatementExecutionNewTest	testFriendsWithNameArrows	assertTrue(qResult.hasNext());	assertNotNull(qResult);	0
1	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotNull(test.get(24));	0
2	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.get(24)==11);	0
3	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertEquals(1,test.size());	0
4	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNull(test.get(0));	0
5	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals(0,test.size());	0
7	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertSame(11,test.get(24));	0
8	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotSame(20,test.get(24));	0
11	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertTrue(test.size()>0);	0
13	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotEquals(0,test.keys().length);	0
19	CollectionsTest	testIntObjectMap	assertEquals(Integer.valueOf(11),test.get(24));	assertNotSame(0,test.size());	0
5	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertTrue(true);	0
10	ModeInfoTest	testUVMode	assertEquals(5,newModeInfo().readInterIntraUvMode(intraMode,decoder,c));	assertTrue(5>3);	0
0	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertEquals(kindAndName,secondKindAndName);	0
1	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertTrue(kindAndName.equals(secondKindAndName));	0
3	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotEquals(thirdKindAndName,fourthKindAndName);	0
4	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotSame(fifthKindAndName,secondKindAndName);	0
5	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(thirdKindAndName.equals(fourthKindAndName));	0
6	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotNull(fifthKindAndName);	0
7	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotNull(thirdKindAndName);	0
8	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertNotSame(kindAndName,fifthKindAndName);	0
9	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertFalse(kindAndName==fourthKindAndName);	0
10	KindAndNameTest	equalsTest	assertTrue(kindAndName.equals(kindAndName));	assertTrue(fourthKindAndName.hashCode()!=fifthKindAndName.hashCode());	0
2	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotNull(config);	0
6	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotNull(config);	0
7	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertFalse(config.getRawConfig().isEmpty());	0
8	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertEquals(1,config.getRawConfig().size());	0
12	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotEquals(null,config);	0
16	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotSame(null,config);	0
18	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotNull(config);	0
24	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertTrue(config.getRawConfig().values().containsAll(map.values()));	0
28	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertFalse(config.getRawConfig().isEmpty());	0
29	EnricherConfigTest	simple	assertEquals("STR",config.get(Config.type));	assertNotNull(config);	0
0	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	0
1	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertEquals(3,filtered.size());	0
8	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(!filtered.isEmpty());	0
10	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.contains(null));	0
11	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(Arrays.asList("STR","STR","STR"),filtered);	0
12	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.stream().noneMatch(test->"STR".equals(test.getName())));	0
17	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(Collections.disjoint(filtered,Arrays.asList("STR","STR","STR")));	0
18	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertNotEquals(4,filtered.stream().map(TestNamed::getName).distinct().count());	0
19	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.stream().noneMatch(test->test.getName().startsWith("STR")));	0
20	ProcessorConfigTest	incAndExc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.stream().anyMatch(test->test.getName().contains("STR")));	0
1	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(is.available()>0);	0
2	ProfileUtilTest	multiple	assertNotNull(is);	assertNotEquals(35,0);	0
3	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(is.markSupported());	0
4	ProfileUtilTest	multiple	assertNotNull(is);	assertFalse(is.read()==-1);	0
5	ProfileUtilTest	multiple	assertNotNull(is);	assertEquals(35,is.read());	0
8	ProfileUtilTest	multiple	assertNotNull(is);	assertTrue(is.markSupported());	0
9	ProfileUtilTest	multiple	assertNotNull(is);	assertFalse(is.available()==0);	0
11	ProfileUtilTest	multiple	assertNotNull(is);	assertNotNull(is);	1
2	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertEquals(2,builder.build().getSpec().getInitContainers().size());	0
3	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder.build().getSpec().getInitContainers().get(0));	0
5	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertFalse(builder.build().getSpec().getInitContainers().isEmpty());	0
6	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNotEquals(0,builder.build().getSpec().getInitContainers().size());	0
9	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNull(builder.build().getSpec().getInitContainers().get(0).getResources());	0
15	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertEquals(0,builder.build().getSpec().getInitContainers().stream().filter(initContainer->initContainer.getPorts().size()>0).count());	0
19	InitContainerHandlerTest	removeOne	assertTrue(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder.build().getSpec().getInitContainers().get(0).getImage());	0
0	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertEquals("STR",url);	1
2	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotNull(url);	0
3	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotEquals("STR",url);	0
4	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertFalse(url.isEmpty());	0
6	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame("STR",url);	0
9	CucumberProResultsUrlBuilderTest	builds_url_for_saas_by_default	assertEquals("STR",url);	assertNotSame(url,"STR");	0
0	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
11	ConfigTest	unset_value_is_null	assertTrue(config.isNull("STR"));	assertTrue(config.isNull("STR"));	1
2	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnvBak.exists());	0
5	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnv.exists()&&serverEnv.isFile());	0
7	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotNull(serverEnv);	0
14	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnvBak.length()>0);	0
15	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertNotEquals("STR",serverEnvBak.getName());	0
17	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertFalse(serverEnv.isDirectory());	0
19	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertTrue(serverEnvBak.canWrite());	0
20	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertFalse(serverEnvBak.isDirectory());	0
24	DevUtilTest	testCleanupServerEnvBak	assertTrue(serverEnv.exists());	assertEquals(2,Files.list(serverDirectory.toPath()).count());	0
2	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotNull(fileString);	0
3	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotEquals("STR",fileString);	0
4	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertEquals("fileString.length(),4);	0
5	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertFalse(fileString.isEmpty());	0
6	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotSame("STR",fileString);	0
12	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotNull(fileString);	0
15	DevUtilTest	testReadFileToString	assertTrue(fileString.equals("STR"));	assertNotEquals("STR",fileString);	0
0	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.exists());	1
2	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertFalse(targetFile.isDirectory());	0
3	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(FileUtils.contentEquals(configFile,targetFile));	0
4	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertEquals(configFile.length(),targetFile.length());	0
5	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotNull(targetFile.getParentFile());	0
6	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotEquals(0,targetFile.length());	0
7	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.isFile());	0
9	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertNotSame(configFile,targetFile);	0
11	DevUtilTest	testCopyFile	assertTrue(targetFile.exists());	assertTrue(targetFile.lastModified()>0);	0
0	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertEquals(FilterReply.DENY,filter.decide(evt));	1
1	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotEquals(FilterReply.NEUTRAL,filter.decide(evt));	0
2	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertTrue(filter.decide(evt)==FilterReply.DENY);	0
3	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.ACCEPT);	0
5	DroppingRavenLoggingFilterTest	verifyFilterDeniesSentryLoggers	assertEquals(FilterReply.DENY,filter.decide(evt));	assertNotNull(filter.decide(evt));	0
0	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
2	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
4	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
5	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
10	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(null,normalizedUrl);	0
14	BasicURLNormalizerTest	testQuerySort	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(testSourceUrl,normalizedUrl);	0
0	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
2	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.startsWith(expectedResult));	0
3	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(null,normalizedUrl);	0
4	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
5	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
6	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testSourceUrl,normalizedUrl);	0
9	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testSourceUrl.toString(),normalizedUrl);	0
11	BasicURLNormalizerTest	testRemoveAllQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
0	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	0
2	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
3	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
4	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
7	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
9	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotEquals(null,normalizedUrl);	0
10	BasicURLNormalizerTest	testProperURLEncodingWithBackSlash	assertEquals(expectedResult,normalizedUrl);	assertNotSame(urlWithEscapedCharacters,normalizedUrl);	0
0	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertEquals(2,result.size());	0
3	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertFalse(result.isEmpty());	0
4	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotNull(result);	0
5	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertNotEquals(0,result.size());	0
6	WorkerQueryTest	workerTags	assertEquals(asList(list.get(0),list.get(2)),result);	assertSame(list.get(0),result.get(0));	0
0	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertEquals(0,registry.agentCount());	1
1	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotNull(registry);	0
6	SimulatorUtilsTest	testLoadComponentRegister_emptyFile_withoutSizeCheck	assertEquals(0,registry.agentCount());	assertNotSame(null,registry);	0
3	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertFalse(registry.getAgents().isEmpty());	0
4	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertEquals(2,registry.getAgents().size());	0
10	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertNotEquals(0,registry.getAgents().size());	0
17	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.getAgents().size()>0);	0
22	AgentsFileTest	testSave	assertEquals(2,registry.agentCount());	assertTrue(registry.getAgents().stream().noneMatch(agentInfo->agentInfo.getPublicAddress().isEmpty()));	0
1	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>=1);	0
3	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey));	0
4	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0);	0
5	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertFalse(cm.count(poolKey)==0);	0
6	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotSame(0,cm.count(poolKey));	0
13	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertTrue(conn.equals(cm.get(poolKey)));	0
15	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotNull(cm.get(poolKey));	0
18	RpcConnectionManagerTest	testAddWconnithPoolKey_multiPoolKey	assertEquals(1,cm.count(poolKey));	assertNotNull(cm.get(poolKey));	0
0	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertFalse(graph.hasCycles());	1
3	ADiGraphTest	testForest	assertFalse(graph.hasCycles());	assertNotNull(graph);	0
0	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().isEmpty());	1
1	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertEquals(0,graph.edges().size());	0
2	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertNotNull(graph.edges());	0
3	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertFalse(graph.edges().contains(null));	0
4	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertNotEquals(5,graph.edges().size());	0
5	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertTrue(graph.edges().stream().allMatch(e->e.getFrom()!=null&&e.getTo()!=null));	0
6	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertNotSame(Collections.emptyList(),graph.edges());	0
9	ADiGraphTest	testEmpty	assertTrue(graph.edges().isEmpty());	assertFalse(graph.edges().stream().anyMatch(e->e.getTo().equals("STR")));	0
0	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
3	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotEquals(null,factory);	0
8	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
9	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
18	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
23	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory);	0
28	JsonSchemaTest	jsonSchemaWithLoader	assertTrue(validate(factory).isSuccess());	assertNotNull(factory.getValidator());	0
0	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertNull(event);	1
19	CEFParserTest	invalidMessageTypesTest	assertNull(event);	assertTrue(true);	0
2	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
3	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotNull(sql);	0
4	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
5	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals(0,sql.toString().length());	0
8	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotSame(null,sql);	0
10	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertSame(TSqlBuilder.class,sql.getClass());	0
11	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotEquals(null,sql);	0
16	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertTrue(!sql.toString().isEmpty());	0
19	TSqlBuilderTest	testHaving	assertEquals("STR",sql.toString());	assertNotSame(null,sql.toString());	0
2	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertNotNull(res);	0
3	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertEquals(0,res.size());	1
5	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(res.isEmpty());	0
8	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertEquals(0,res.size());	1
9	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(res.isEmpty());	0
10	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertTrue(res.isEmpty());	0
13	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertFalse(res.contains("STR"));	0
18	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertFalse(res.contains("STR"));	0
24	InMemoryJavaCompilerTest	compile_WhenIgnoreWarnings	assertEquals(0,res.size());	assertFalse(res.stream().anyMatch(s->s.equals("STR")));	0
0	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue(ceļu.isRecognized());	1
16	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertTrue("STR".equals(ceļu.getToken()));	0
21	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotNull(ceļu);	0
22	MorphologyTest	ceļu	assertTrue(ceļu.isRecognized());	assertNotEquals("STR",ceļu.getCorrectWordform());	0
0	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotNull(poller.getObjectQueryPreparer());	0
5	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertTrue(poller.getObjectQueryPreparer()!=null);	0
6	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertFalse(poller.getObjectQueryPreparer()==null);	0
7	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertNotSame(mockObjectQueryPreparer,poller.getObjectQueryPreparer());	0
9	JmxAttributePollerTest	testGetSetObjectQueryPreparer	assertNotNull(this.poller.getObjectQueryPreparer());	assertFalse(poller.getObjectQueryPreparer().equals(mockObjectQueryPreparer));	0
7	TestNanolets	testHandlerSetters	assertEquals(notFoundHandler.getClass(),router.notFoundHandlerClass);	assertTrue(routerNanoHttpdinstanceofRouterNanoHTTPD);	0
0	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	1
3	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	0
8	YubicoClientTest	testTwoQueries	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotEquals(ResponseStatus.OK,response.getStatus());	0
11	ShippableTest	testGetBuildUrl	assertEquals("STR",newShippable(env()).getBuildUrl());	assertNotNull("STR");	0
21	ShippableTest	testGetBuildUrl	assertEquals("STR",newShippable(env()).getBuildUrl());	assertTrue(5>3);	0
0	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertEquals(8,p.getBlankIndex());	1
2	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(-1,p.getBlankIndex());	0
4	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()>=0&&p.getBlankIndex()<9);	0
5	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(4,p.getBlankIndex());	0
6	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()!=2);	0
7	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertFalse(p.getBlankIndex()==6);	0
9	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotEquals(5,p.getBlankIndex());	0
10	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertNotNull(p);	0
12	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertTrue(p.getBlankIndex()>0&&p.getBlankIndex()<9);	0
14	PuzzleTest	puzzle_has_blank	assertEquals(8,p.getBlankIndex());	assertEquals(8,p.getBlankIndex());	1
4	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertFalse(CommUtil.repeatChar('A',3).isEmpty());	0
6	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertNotNull(CommUtil.repeatChar('A',4));	0
7	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertNotSame(CommUtil.repeatChar('A',4),CommUtil.repeatChar('A',5));	0
9	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertNotSame(CommUtil.repeatChar('A',4),CommUtil.repeatChar('B',4));	0
10	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertEquals(4,CommUtil.repeatChar('A',4).length());	0
13	CommUtilTest	testSameChars	assertEquals("STR",CommUtil.repeatChar('b',10));	assertFalse(CommUtil.repeatChar('A',4).isEmpty());	0
0	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertTrue(vārds.isRecognized());	1
2	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotNull(vārds);	0
0	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.isRecognized());	1
3	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(lūzīs);	0
7	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertFalse(lūzīs.wordforms.isEmpty());	0
10	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.toString().contains("STR"));	0
14	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(lūzīs);	0
0	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(austrumlatvija.isRecognized());	1
2	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotNull(austrumlatvija);	0
3	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals("STR",austrumlatvija.getToken());	0
4	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(locītājs.enableGuessing);	0
5	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(locītājs.enableVocative);	0
6	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(locītājs.guessVerbs);	0
7	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(locītājs.enableAllGuesses);	0
16	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(locītājs.enableVocative&&locītājs.guessVerbs);	0
18	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotEquals("STR",austrumlatvija.getToken());	0
27	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertTrue(locītājs.enableGuessing&&!locītājs.enableVocative&&locītājs.guessVerbs&&locītājs.enableAllGuesses);	0
0	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
2	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotNull(w);	0
3	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	0
4	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	0
11	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotSame("STR",w.getCorrectWordform());	0
15	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.wordforms.size()>0);	0
16	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotEquals(0,w.wordforms.size());	0
19	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.wordforms.size()>0);	0
20	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotNull(w);	0
25	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotEquals(null,w);	0
0	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertEquals(0,simulatorProperties.getCoordinatorPort());	1
3	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotNull(simulatorProperties);	0
7	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotNull(simulatorProperties.getCoordinatorPort());	0
0	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertEquals("STR",exception.getMessage());	1
4	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotEquals(0,exception.getMessage().length());	0
9	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	0
10	TestExceptionTest	testConstructor_withMessageFormat_withException	assertEquals("STR",exception.getMessage());	assertNotEquals("STR",exception.toString());	0
0	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.exists());	1
2	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(exceptionFile);	0
3	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.isFile());	0
4	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertFalse(exceptionFile.isDirectory());	0
6	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotEquals(0,exceptionFile.length());	0
7	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.canWrite());	0
9	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotEquals("STR",exceptionFile.getAbsolutePath());	0
11	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertTrue(exceptionFile.getParentFile().equals(getUserDir()));	0
15	ExceptionReporterTest	testReport	assertTrue(exceptionFile.exists());	assertNotNull(exceptionFile.lastModified());	0
0	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA0==loggerA1);	1
1	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA0,loggerB0);	0
4	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA1.equals(loggerA0));	0
6	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA_lh0,loggerA_lh1);	0
9	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotNull(loggerA0);	0
12	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertSame(loggerA1,loggerA0);	0
15	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertEquals(4,loggerFactory.getLoggers().size());	0
18	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(!loggerA1.equals(loggerB0));	0
21	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertNotSame(loggerA0,loggerA_lh0);	0
22	TestFluentLogFactory	testGetLogger	assertTrue(loggerA0==loggerA1);	assertTrue(loggerA0.getClass().equals(loggerA1.getClass()));	0
0	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
2	TrackedSetTest	testRemoveNotificationOne	assertFalse(doc.isDirty());	assertNotNull(doc);	0
0	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(classLinked,prop.getLinkedClass());	0
2	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotSame(classA,prop.getLinkedClass());	0
3	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertNotNull(prop.getLinkedClass());	1
4	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertFalse(classA.isAbstract());	0
5	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertEquals(OType.LINK,prop.getType());	0
11	AlterPropertyTest	testRemoveLinkedClass	assertNotNull(prop.getLinkedClass());	assertTrue(classA.declaredProperties().size()>0);	0
0	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
6	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNotNull(g);	0
15	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertFalse(g.getVertices().iterator().hasNext());	0
22	OrientGraphFactoryTest	createTxPoolNestedCreations	assertEquals(g.getClass(),OrientGraph.class);	assertNull(g.getProperty("STR"));	0
3	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertTrue(parentArray.contains(1));	0
5	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertFalse(parentArray.isEmpty());	0
6	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotEquals(0,parentArray.size());	0
8	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertEquals(4,parentArray.size());	0
9	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertNotSame(object4,doc.field("STR"));	0
10	ODocumentTest	testSetFieldAtListIndex	assertEquals(doc.field("STR"),"STR");	assertTrue(parentArray.contains(object4));	0
0	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals(doc,doc1);	0
1	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotSame(doc,doc1);	0
3	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotNull(doc);	0
4	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNotEquals(json,doc1.toJSON());	0
5	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertFalse(doc.equals(doc1));	0
6	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertNull(doc.field("STR"));	0
8	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(json.contains("STR"));	0
9	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertEquals(0,doc.field("STR").toString().length());	0
10	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertFalse(json.isEmpty());	0
11	OJsonWithCustom	testCustomFieldDisabled	assertEquals(doc.<String>field("STR"),doc1.field("STR"));	assertTrue(doc1.toString().startsWith("STR"));	0
0	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertEquals(keysToAdd,addedKeys);	1
1	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey(42));	0
2	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToRemove.isEmpty());	0
3	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertFalse(keysToRemove.containsKey(100));	0
4	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotNull(propertyIndex);	0
5	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertNotEquals(0,keysToAdd.size());	0
6	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertSame(propertyIndex,propertyIndex);	0
14	OPropertyListIndexDefinitionTest	testProcessChangeEventAddTwoTimesInvValue	assertEquals(keysToAdd,addedKeys);	assertTrue(keysToAdd.containsKey(555));	0
0	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertNotNull(list);	0
1	OCommandExecutorSQLCreateEdgeTest	testParametersBinding	assertEquals(list.size(),1);	assertEquals(list.size(),1);	1
0	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertEquals(26,results.size());	1
1	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()>0);	0
2	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotNull(results);	0
3	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertFalse(results.isEmpty());	0
4	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotEquals(0,results.size());	0
5	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertSame(ODocument.class,results.get(0).getClass());	0
7	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotSame(0,results.size());	0
8	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertNotEquals(null,results);	0
9	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(!results.isEmpty());	0
10	OCommandExecutorSQLSelectTest	testLimitMinusOneOrdered	assertEquals(26,results.size());	assertTrue(results.size()<=50);	0
5	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertNotNull(response);	0
6	YubicoClientTest	testGoodAndBadUrls	assertEquals(ResponseStatus.REPLAYED_OTP,response.getStatus());	assertFalse(response.isOk());	0
0	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertEquals("STR",result);	1
3	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertNotNull(result);	0
4	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertNotEquals("STR",result);	0
7	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertNotSame("STR",result);	0
10	AJsonSerHelperTest	testArray3	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
0	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertEquals("STR",result);	1
2	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertNotEquals("STR",result);	0
3	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertNotNull(result);	0
4	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
6	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertNotSame("STR",result);	0
9	AJsonSerHelperTest	testDoubleWithFrac1	assertEquals("STR",result);	assertNotSame(0,result.indexOf("STR"));	0
0	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNull(fields.get("STR"));	0
3	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotEquals("STR",metadata.getFirstValue("STR"));	0
5	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	0
6	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertEquals(1,fields.size());	0
7	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotNull(fields);	0
8	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotSame("STR",fields.get("STR"));	0
15	BasicIndexingTest	testFilterDocumentWithMetadata	assertEquals("STR",fields.get("STR"));	assertNotSame("STR",metadata.getFirstValue("STR"));	0
0	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
1	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
5	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
7	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
13	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotEquals(null,ret);	0
18	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertTrue(ret.length()>0);	0
19	ClassCustomSerializerTest	testInvokeContextCustomSerializer_SYNC	assertEquals(RequestBody.DEFAULT_SERVER_RETURN_STR+"STR",ret);	assertNotNull(ret);	0
0	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertNotNull(tokens);	0
1	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertTrue(tokens.isEmpty());	0
2	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertEquals(0,tokens.size());	1
3	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertFalse(tokens.contains("STR"));	0
6	CharacterProtectorTest	testGetAllEncodedTokens	assertEquals(0,tokens.size());	assertTrue(tokensinstanceofjava.util.Collection);	0
0	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	1
2	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNull(invalidHandshakeException.getMessage());	0
8	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	0
20	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	0
21	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertNotNull(invalidHandshakeException);	0
27	InvalidHandshakeExceptionTest	testConstructor	assertEquals(CloseFrame.PROTOCOL_ERROR,invalidHandshakeException.getCloseCode());	assertTrue(true);	0
1	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertNotNull(cookie);	0
5	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertNotEquals("STR",cookie.getHTTPHeader());	0
7	CookieTest	testCookieWithExpiresString	assertTrue(cookie.getHTTPHeader().contains(expiresString));	assertFalse(cookie.getHTTPHeader().isEmpty());	0
0	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(clazz,exp);	1
2	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp.length,clazz.length);	0
3	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(clazz.length>0);	0
4	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotNull(clazz);	0
5	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotNull(clazz);	0
6	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertArrayEquals(clazz,exp);	1
7	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertTrue(Arrays.equals(exp,clazz));	0
10	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertEquals(exp[0],clazz[0]);	0
13	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertSame(exp[0],clazz[0]);	0
15	ReflexUtilTest	testIntefaceGenericTypeClass	assertArrayEquals(clazz,exp);	assertNotSame(exp,clazz);	0
2	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b.get(3));	0
3	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertFalse(b.isEmpty());	0
6	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertNotNull(b);	0
12	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b.cardinality()>0);	0
14	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertFalse(b.get(5));	0
22	CommUtilTest	testBitValue	assertEquals("STR",CommUtil.hexdump(CommUtil.bitValue(b)));	assertTrue(b.length()>0);	0
3	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNull(map.get("STR"));	0
4	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotEquals("STR",map.get("STR"));	0
5	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertFalse(map.isEmpty());	0
6	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotNull(map);	0
7	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertEquals(1,map.size());	1
9	MapUtilTest	testPutIfAbsent	assertEquals(1,map.size());	assertNotSame("STR",map.get("STR"));	0
0	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertEquals(0,p.getDistanceToGoal());	1
1	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()==0);	0
2	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertNotNull(p);	0
17	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()>=0);	0
24	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertArrayEquals(getSolution(),p.getCells());	0
25	PuzzleTest	distance_to_solution_is_zero_when_solved	assertEquals(0,p.getDistanceToGoal());	assertTrue(p.getDistanceToGoal()<=10);	0
0	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(1,panel.getTurtleCount());	1
1	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()>0);	0
2	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotNull(panel);	0
3	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertFalse(panel.getTurtleCount()==0);	0
4	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotEquals(0,panel.getTurtleCount());	0
13	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()<=5);	0
16	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertFalse(panel.getTurtleCount()>10);	0
17	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertNotEquals(5,panel.getTurtleCount());	0
20	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertEquals(5,5);	0
21	MultiTurtlePanelTest	testAddTurtle	assertEquals(1,panel.getTurtleCount());	assertTrue(panel.getTurtleCount()!=0);	0
4	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(5,a.length);	0
9	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(3,a[2]);	0
11	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertFalse(Arrays.asList(a).contains(2));	0
18	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertNotEquals(0,a.length);	0
20	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(2,a[1]);	0
24	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(4,a[3]);	0
25	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertEquals(-1,Arrays.asList(a).indexOf(2));	0
28	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertFalse(Arrays.asList(a).contains(5));	0
29	SeqTest	testAssignAt	assertArrayEquals(newint[]{1,2,3,4,5},a);	assertNotNull(a);	0
12	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertTrue(actuals.length>0);	0
13	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotNull(actuals);	0
15	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertTrue(actuals.length>0);	0
16	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertTrue(actuals!=null&&actuals.length>0);	0
17	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertEquals(3,actuals.length);	0
18	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertNotEquals(0,actuals.length);	0
21	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertFalse(Arrays.asList(actuals).contains(null));	0
27	SeqTest	testConstantMap	assertArrayEquals(newString[]{"STR","STR","STR"},actuals);	assertFalse(Arrays.asList(actuals).isEmpty());	0
3	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isMulticast());	0
6	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotNull(macAddress.getBytes());	0
7	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertFalse(macAddress.isLocal());	0
8	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals("STR",macAddress.toString().toLowerCase());	0
13	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotSame(null,macAddress);	0
16	MacAddressTest	testAddressPeriodSeparator	assertEquals(NORMALIZED_ADDRESS,macAddress.toString());	assertNotEquals("STR",macAddress.toString().toLowerCase());	0
0	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
3	TimestampParserTest	testParseNull	assertNull(parsed);	assertNull(parsed);	1
0	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertEquals(MESSAGE,exception.getMessage());	1
1	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertTrue(exception.getMessage().contains(MESSAGE));	0
2	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotNull(exception);	0
3	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotEquals(null,exception);	0
5	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertSame(ValidationException.class,exception.getClass());	0
6	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertFalse(exception.getMessage().isEmpty());	0
7	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotSame(null,exception);	0
10	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotEquals("STR",exception.getMessage());	0
11	ValidationExceptionTest	testExceptionWithMessage	assertEquals(MESSAGE,exception.getMessage());	assertNotSame(exception.getMessage(),"STR");	0
1	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertNotNull(actual);	0
11	NalUnitTest	testCanWriteNalUnitFromValidNal	assertEquals(3,actual.nal_ref_idc);	assertFalse(actual.toString().isEmpty());	0
21	ToJSONTest	testCycle	assertEquals("STR"+"STR"+"STR"+"STR"+"STR"+"STR"+"STR",ToJSON.toJSON(cl1));	assertNotNull(cl1);	0
0	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find());	1
1	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertNotNull(matcher.pattern());	0
2	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(matcher.matches());	0
3	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertEquals(matcher.regionEnd(),64);	0
8	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertFalse(pattern.flags().isEmpty());	0
26	RegressionTest	testStockSymbol	assertTrue(matcher.find());	assertTrue(matcher.find()||matcher.lookingAt());	0
20	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	0
23	RegressionTest	cannotFindSimpleDate	assertTrue(matcher.lookingAt());	assertEquals(0,matcher.regionStart());	0
0	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertNotNull(helloClass);	1
19	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertFalse(helloClass.getDeclaredFields().length>0);	0
24	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertTrue(helloClass.getModifiers()==java.lang.reflect.Modifier.PUBLIC);	0
25	InMemoryJavaCompilerTest	compile_WhenTypical	assertNotNull(helloClass);	assertFalse(helloClass.isInterface());	0
1	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	1
6	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertFalse(draft_6455.getExtension()==null);	0
13	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotEquals(null,draft_6455.getExtension());	0
0	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketImpl);	1
10	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotEquals(null,webSocketImpl);	0
12	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertFalse(webSocketImpl.isClosed());	0
13	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketAdapter);	0
4	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertNotNull(String.join("STR",Arrays.asList("STR","STR")));	0
6	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertFalse(String.join("STR",Arrays.asList("STR","STR"))==null);	0
7	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertNotEquals("STR",String.join("STR",Arrays.asList("STR","STR")));	0
8	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertTrue(String.join("STR",Arrays.asList("STR","STR")).contains("STR"));	0
9	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertFalse(String.join("STR",Arrays.asList("STR","STR")).isEmpty());	0
10	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertNotEquals(0,String.join("STR",Arrays.asList("STR","STR")).length());	0
12	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertTrue(String.join("STR",Arrays.asList("STR","STR")).startsWith("STR"));	0
14	SeqTest	testJoinDelimiterNull	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),null));	assertFalse(String.join("STR",Arrays.asList("STR","STR")).isEmpty());	0
0	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertEquals(expected,actual,0);	1
1	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(actual>=expected);	0
3	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotSame(expected,actual);	0
4	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertFalse(false);	0
5	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotNull(actual);	0
12	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotNull(actual);	0
0	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
1	SubStatementTest	testGetVerb	assertNotNull(actual);	assertTrue(expected.equals(actual));	0
2	SubStatementTest	testGetVerb	assertNotNull(actual);	assertNotNull(actual);	1
5	SubStatementTest	testGetVerb	assertNotNull(actual);	assertSame(expected,actual);	0
13	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	0
0	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.contains(expected));	0
2	ResultTest	testGetDuration	assertNotNull(actual);	assertNotNull(actual);	1
4	ResultTest	testGetDuration	assertNotNull(actual);	assertSame(expected,actual);	0
5	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	0
6	ResultTest	testGetDuration	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
0	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	0
1	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	1
0	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotNull(tokens);	0
1	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertFalse(tokens.isEmpty());	0
2	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertEquals(8,tokens.size());	0
8	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertNotEquals(0,tokens.size());	0
9	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertTrue(tokens.size()>0);	0
12	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertFalse(tokens.contains(null));	0
14	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	assertEquals("STR"+"STR",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());	assertTrue(tokens.size()>=1);	0
0	IssuesTest	testIssue23	assertTrue(true);	assertTrue(true);	1
1	IssuesTest	testIssue23	assertTrue(true);	assertTrue(schemas.size()>0);	0
2	IssuesTest	testIssue23	assertTrue(true);	assertNotNull(schemas);	0
3	IssuesTest	testIssue23	assertTrue(true);	assertFalse(schemas.isEmpty());	0
4	IssuesTest	testIssue23	assertTrue(true);	assertNotEquals(0,schemas.size());	0
7	IssuesTest	testIssue23	assertTrue(true);	assertFalse(schemas.get(0).getElements().isEmpty());	0
8	IssuesTest	testIssue23	assertTrue(true);	assertSame(XsdSchema.class,schemas.get(0).getClass());	0
0	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertEquals(1,schemas.size());	1
2	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.isEmpty());	0
3	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotNull(schemas);	0
4	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertNotEquals(0,schemas.size());	0
10	IssuesTest	testIssue27Attributes	assertEquals(1,schemas.size());	assertFalse(schemas.stream().anyMatch(schema->schema.getFilePath().isEmpty()));	0
0	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertEquals(a,b);	1
1	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotSame(a,b);	0
3	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotNull(a);	0
6	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertTrue(a.getActualCost()>0);	0
10	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertFalse(a.isSolution());	0
12	PuzzleStateTest	equal_even_with_different_history	assertEquals(a,b);	assertNotNull(a.getHistory());	0
0	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer);	0
1	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertEquals(test,testContainer.getTestInstance());	1
7	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotEquals(null,testContainer.getTestInstance());	0
9	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotSame(testContainer,createTestContainer(test));	0
11	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertSame(test,testContainer.getTestInstance());	0
12	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertFalse(testContainer.toString().isEmpty());	0
13	TestContainer_BasicTest	testGetTestInstance	assertEquals(test,testContainer.getTestInstance());	assertNotNull(testContainer);	0
0	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotNull(testData);	0
4	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertTrue(testData.getStartTimeMillis()<=System.currentTimeMillis());	0
5	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertFalse(testData.isStopRequested());	0
6	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotEquals("STR",testData.getTestCase().getId());	0
8	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertEquals(3,registry.getTests().size());	0
10	RegistryTest	testGetTest	assertEquals(2,testData.getTestIndex());	assertNotSame(testData,registry.getTest("STR"));	0
2	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(com.hazelcast.simulator.utils.CloudProviderUtils.isLocal("STR"));	0
8	CloudProviderUtilsTest	testIsLocal_withLocal	assertTrue(CloudProviderUtils.isLocal(PROVIDER_LOCAL));	assertFalse(com.hazelcast.simulator.utils.CloudProviderUtils.isLocal("STR"));	0
2	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotNull(workerProcess1);	0
4	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotSame(workerProcess1,workerProcess2);	0
7	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotSame(workerProcess1.getLastSeen(),workerProcess2.getLastSeen());	0
10	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	1
13	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertFalse(workerProcess1.getLastSeen()==workerProcess2.getLastSeen());	0
14	WorkerProcessManagerTest	testUpdateLastSeenTimestamp_whenSimulatorAddressFromWorker_thenUpdate	assertNotEquals(firstLastSeen,workerProcess1.getLastSeen());	assertTrue(workerProcess1.getLastSeen()>=0);	0
14	SimulatorPropertiesTest	testGet_withDefaultValue_defaultIsUsed	assertEquals("STR",simulatorProperties.get("STR","STR"));	assertTrue(simulatorProperties.get("STR","STR").endsWith("STR"));	0
0	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertEquals(qResult.size(),3);	1
1	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertTrue(qResult.size()<=3);	0
2	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotNull(qResult);	0
3	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertFalse(qResult.isEmpty());	0
4	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertNotEquals(0,qResult.size());	0
6	OCommandExecutorSQLSelectTest	testLimit	assertEquals(qResult.size(),3);	assertTrue(!qResult.isEmpty());	0
2	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertEquals(qResult.size(),2);	1
3	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotNull(qResult);	0
4	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertFalse(qResult.isEmpty());	0
5	OCommandExecutorSQLSelectTest	testOrderByEmbeddedParams2	assertEquals(qResult.size(),2);	assertNotEquals(0,qResult.size());	0
0	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertNotNull(property);	0
2	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertEquals(OType.STRING,property.getType());	0
3	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(classA.existsProperty("STR"));	0
10	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(classA.isAbstract());	0
11	AlterPropertyTest	testPropertyRenamingReload	assertEquals(property,classA.getProperty("STR"));	assertFalse(property.isNotNull());	0
3	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertFalse(doc.containsField("STR"));	0
4	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNull(doc.field("STR"));	0
12	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNotSame(set,doc.field("STR",Set.class));	0
13	ODirtyManagerTest	testLinkCollectionRemove	assertEquals(1,manager.getNewRecords().size());	assertNull(doc.field("STR",Set.class));	0
0	ODocumentSchemalessBinarySerializationTest	testFieldNamesRaw	assertNotNull(fields);	assertNotNull(fields);	1
1	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertNull(result);	1
3	OSimpleKeyIndexDefinitionTest	testNullParamItem	assertNull(result);	assertEquals(null,result);	0
1	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
2	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>0);	0
3	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotNull(res);	0
4	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	0
13	OETLCSVExtractorTest	testNegativeFloat	assertFalse(res.isEmpty());	assertTrue(!res.isEmpty());	0
0	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertNotNull(res);	0
2	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertTrue(res.isEmpty());	1
11	TestNullFieldQuery	testQueryNullValue	assertTrue(res.isEmpty());	assertFalse(res.contains(null));	0
10	ObjectQueryPreparerTest	testPrepareObjectNoSetters	assertNull(result);	assertNull(result);	1
1	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>=0);	0
2	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	0
3	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0);	0
4	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	0
5	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertTrue(!cm.getAll().isEmpty());	0
6	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotNull(conn);	0
8	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertEquals(1,cm.getAll().size());	0
9	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertFalse(cm.getAll().isEmpty());	0
10	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertTrue(cm.count(poolKey)>0&&cm.count(poolKey)<=100);	0
11	RpcConnectionManagerTest	testAdd	assertEquals(1,cm.count(poolKey));	assertNotEquals(0,cm.count(poolKey));	0
2	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotNull(client1);	0
3	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotEquals(client1,client2);	0
5	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertFalse(client1==client2);	0
6	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	0
8	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertTrue(client1.isConnectionMonitorSwitchOn());	1
10	GlobalSwitchTest	testSystemSettings_takesEffect_before_defaultvalue	assertTrue(client1.isConnectionMonitorSwitchOn());	assertNotEquals(0,client1.hashCode());	0
0	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy);	0
2	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertTrue(proxy.getPort()==8080);	0
3	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertFalse(proxy.getProtocol().isEmpty());	0
4	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotEquals("STR",proxy.getProtocol());	0
8	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotNull(proxy);	0
10	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertEquals(8080,proxy.getPort());	0
12	CoverallsProxyClientTest	testConstructorWithProxy	assertNotNull(newCoverallsProxyClient("STR",proxy));	assertNotSame("STR",proxy.getProtocol());	0
2	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotNull(res);	0
3	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(res.length>0);	0
4	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertFalse(spsList.isEmpty());	0
6	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertSame(ppsList,avcCBox.getPpsList());	0
9	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertNotNull(avcCBox);	0
13	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertSame(spsList,avcCBox.getSpsList());	0
14	H264UtilsTest	testAvcCToAnnexB	assertArrayEquals(newbyte[]{0,0,0,1,0x67,'s','t','a','n',0,0,0,1,0x67,'t','h','e',0,0,0,1,0x68,'m','a','n',0,0,0,1,0x68,'c','o','o','l'},res);	assertTrue(avcCBox.getNalLengthSize()>=0);	0
0	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotNull(profiles);	0
1	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertFalse(profiles.isEmpty());	0
3	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(profiles.size()>0);	0
5	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotEquals(0,profiles.size());	0
6	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotNull(profiles.get(0));	0
7	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(!profiles.isEmpty());	0
10	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertNotSame(0,profiles.size());	0
11	ProfileUtilTest	fromClasspath	assertEquals(1,profiles.size());	assertTrue(profiles.size()>=1);	0
2	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder);	0
7	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertTrue(builder.build().getSpec().getInitContainers().size()>0);	0
10	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertFalse(handler.hasInitContainer(builder,"STR"));	1
11	InitContainerHandlerTest	append	assertFalse(handler.hasInitContainer(builder,"STR"));	assertNotNull(builder.build().getSpec().getInitContainers().get(0).getImage());	0
0	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertEquals(latestTag,resultedTag);	1
1	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag==latestTag||resultedTag==oldTag);	0
2	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotNull(resultedTag);	0
3	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotEquals(oldTag,resultedTag);	0
4	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertSame(latestTag,resultedTag);	0
9	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(oldTag,resultedTag);	0
10	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertTrue(resultedTag==oldTag||resultedTag==latestTag);	0
12	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotSame(latestTag,oldTag);	0
14	ImageStreamServiceTest	should_return_newer_tag	assertEquals(latestTag,resultedTag);	assertNotEquals(latestTag,oldTag);	0
0	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertEquals(1,cookies.getCookies().size());	1
2	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotNull(cookies.getCookies());	0
3	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertFalse(cookies.getCookies().isEmpty());	0
4	CookieIntegrationTest	testCookieSentBackToClient	assertEquals(1,cookies.getCookies().size());	assertNotEquals(0,cookies.getCookies().size());	0
3	OAuth2FeignRequestInterceptorTests	applyAuthorizationHeader	assertTrue(headers.containsKey("STR"));	assertTrue(headers.containsKey("STR"));	1
0	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	1
1	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotEquals(FilterReply.DENY,filter.decide(evt));	0
2	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertTrue(filter.decide(evt)!=FilterReply.DENY);	0
3	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertSame(FilterReply.NEUTRAL,filter.decide(evt));	0
4	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertFalse(filter.decide(evt)==FilterReply.DENY);	0
5	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotSame(FilterReply.DENY,filter.decide(evt));	0
6	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotNull(filter);	0
8	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNull(evt.getFormattedMessage());	0
9	DroppingRavenLoggingFilterTest	verifyFilterAllowsNonSentryLoggers	assertEquals(FilterReply.NEUTRAL,filter.decide(evt));	assertNotSame("STR",evt.getLoggerName());	0
0	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
2	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
3	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
5	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
7	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotSame(testUrl,normalizedUrl);	0
9	BasicURLNormalizerTest	testBothAnchorAndQueryFilter	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
2	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsKey("STR"));	1
3	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertFalse(map.containsKey("STR"));	0
4	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotNull(map);	0
5	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertEquals(3,map.size());	0
6	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertTrue(map.containsValue(9));	0
7	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotEquals(0,map.keySet().size());	0
12	ZippedMapTest	constructsFromEquallySizedLists	assertTrue(map.containsKey("STR"));	assertNotSame(ImmutableList.of("STR","STR","STR"),map.keySet());	0
0	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertEquals(1,formas.size());	0
1	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	0
3	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	0
5	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	0
8	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.get(0).getToken().equalsIgnoreCase("STR"));	0
10	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertTrue(formas.stream().anyMatch(wordform->wordform.getToken().startsWith("STR")));	0
14	MorphologyTest	inflexible_genitive_generation	assertEquals(1,formas.size());	assertFalse(formas.contains(null));	0
0	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertFalse(config.isNull("STR"));	1
9	ConfigTest	set_value_is_not_null	assertFalse(config.isNull("STR"));	assertFalse(config.isNull("STR"));	1
1	ColorMapTest	testEmpty	assertEquals(Constants.WHITE,runtime(cm).getcolor('a'));	assertNotNull(cm);	0
0	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.find());	1
3	MatcherTest	reset	assertTrue(matcher.find());	assertEquals(0,matcher.regionStart());	0
4	MatcherTest	reset	assertTrue(matcher.find());	assertNotNull(matcher.pattern());	0
5	MatcherTest	reset	assertTrue(matcher.find());	assertTrue(matcher.lookingAt());	0
0	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertEquals(20432343,OVarIntSerializer.readAsLong(bytes));	0
1	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertTrue(bytes.offset>=0);	0
2	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertNotNull(bytes);	0
4	OVarIntSerializerTest	serializePositive	assertEquals(OVarIntSerializer.readAsLong(bytes),20432343l);	assertFalse(bytes.bytes==null);	0
0	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertEquals(treeBucket.size(),0);	1
1	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertTrue(treeBucket.size()>=0);	0
2	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotNull(treeBucket);	0
13	SBTreeLeafBucketTest	testInitialization	assertEquals(treeBucket.size(),0);	assertNotEquals(5,treeBucket.size());	0
0	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertTrue(server.existsDatabase("STR"));	1
3	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertEquals(1,server.listDatabases().size());	0
4	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotEquals(0,server.listDatabases().size());	0
7	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertFalse(server.listDatabases().isEmpty());	0
8	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertTrue(server.listDatabases().size()>0);	0
14	OServerDatabaseOperationsTest	testCreateOpenDatabase	assertTrue(server.existsDatabase("STR"));	assertNotNull(server.listDatabases());	0
0	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotNull(res);	0
2	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertTrue(res.size()>0);	0
4	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertFalse(res.isEmpty());	1
5	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotEquals(0,res.size());	0
8	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotNull(proc.getLoader());	0
9	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertNotSame(null,proc.getLoader());	0
12	OETLCSVExtractorTest	testFloat	assertFalse(res.isEmpty());	assertTrue(res.size()<=10);	0
1	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	0
2	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertTrue(!compositeKey.equals(anotherCompositeKey));	0
4	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.equals(anotherCompositeKey));	1
6	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertEquals(2,compositeKey.getKeys().size());	0
7	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey);	0
9	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,anotherCompositeKey);	0
12	OCompositeKeyTest	testEqualNotSameKeys	assertFalse(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey.hashCode(),anotherCompositeKey.hashCode());	0
0	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
3	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertTrue(!expectedResult.isEmpty());	0
4	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotNull(result);	0
6	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	0
12	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulThree	assertEquals(result,expectedResult);	assertNotSame(expectedResult,result);	0
0	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotNull(property);	0
1	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertTrue(property!=null);	0
3	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertFalse(property.isNotNull());	0
4	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals("STR",property.getType().name());	0
8	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotSame(companyClass,db.getMetadata().getSchema().getClass("STR"));	0
9	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNull(property.getMax());	0
10	OCommandExecutorSQLCreatePropertyTest	testIfNotExists	assertEquals(property.getName(),PROP_NAME);	assertNotEquals(5,property.getMin());	0
1	ODocumentTrackingNestedCollectionsTest	testChangesValuesNestedTrackingSet	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	assertEquals(1,timeLine.getMultiValueChangeEvents().size());	1
0	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertEquals(true,w.isRecognized());	0
1	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
3	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	0
4	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotEquals(0,w.wordforms.size());	0
5	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotNull(w);	0
6	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertEquals(1,w.wordforms.size());	0
9	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNotSame(0,w.wordforms.size());	0
10	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertNull(w.getCorrectWordform());	0
12	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	0
14	MorphologyTest	līstiiet	assertTrue(w.isRecognized());	assertTrue(w.getToken().startsWith("STR"));	0
0	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(viņš.isRecognized());	1
1	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertEquals(1,viņš.wordformsCount());	0
2	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotNull(viņš.getBestWordform());	0
3	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertFalse(viņš.hasAttribute("STR","STR"));	0
4	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotEquals(0,viņš.wordformsCount());	0
8	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertTrue(viņš.toString().startsWith("STR"));	0
9	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertNotSame("STR",viņš.getBestWordform());	0
11	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertFalse(viņš.getMatchingWordform("STR",true)==null);	0
14	MorphologyTest	laura_20130605	assertTrue(viņš.isRecognized());	assertEquals("STR",viņš.getToken());	0
1	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertEquals(5,flattened.size());	1
2	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertFalse(flattened.isEmpty());	0
5	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotEquals(0,flattened.size());	0
6	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertTrue(flattenedinstanceofCollection);	0
7	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotNull(flattened);	0
8	ACollectionHelperTest	testFlatten	assertEquals(5,flattened.size());	assertNotSame(set,flattened);	0
0	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertEquals("STR",result);	1
2	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotNull(result);	0
3	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotEquals("STR",result);	0
4	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
5	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotSame("STR",result);	0
8	AJsonSerHelperTest	testNegativeDouble	assertEquals("STR",result);	assertNotEquals("STR",result);	0
4	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertFalse(sourceFile.exists());	0
9	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(!sourceFile.exists());	0
12	DevUtilTest	testNotGeneratedConfigFiles	assertFalse(util.isGeneratedConfigFile(sourceFile,configDirectory,targetDir));	assertTrue(targetDir.exists());	0
1	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.exists());	1
4	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertNotNull(tempClass);	0
5	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.isFile());	0
8	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertTrue(tempClass.canRead());	0
9	DevUtilTest	testCleanTargetDir	assertTrue(tempClass.exists());	assertFalse(tempClass.isDirectory());	0
0	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
2	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
3	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotNull(result);	0
4	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
5	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
11	FizzBuzzTDDTest	test10ReturnsBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
1	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotNull(result);	1
7	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertFalse(result.toString().isEmpty());	0
10	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertTrue(resultinstanceofJMXServiceURL);	0
12	DefaultJmxServiceUrlFactoryTest	testCreateJMXServiceUrl	assertNotNull(result);	assertNotNull(result.getProtocol());	0
2	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotNull(deflateExtension.getProvidedExtensionAsServer());	0
3	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertFalse(deflateExtension.getProvidedExtensionAsServer().isEmpty());	0
4	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals("STR",deflateExtension.getProvidedExtensionAsServer().trim());	0
5	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotSame(null,deflateExtension.getProvidedExtensionAsServer());	0
9	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertNotEquals(null,deflateExtension.getProvidedExtensionAsServer());	0
11	PerMessageDeflateExtensionTest	testGetProvidedExtensionAsServer	assertEquals("STR",deflateExtension.getProvidedExtensionAsServer());	assertSame(PerMessageDeflateExtension.class,deflateExtension.getClass());	0
0	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	1
2	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertEquals(defaultExtension0,defaultExtension1);	0
3	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotNull(defaultExtension1.getProvidedExtensionAsClient());	0
6	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.acceptProvidedExtensionAsServer("STR"));	0
7	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertNotSame(defaultExtension0,defaultExtension1);	0
10	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertSame(defaultExtension0.getClass(),defaultExtension1.getClass());	0
12	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.toString().equals(defaultExtension1.toString()));	0
13	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertFalse(defaultExtension0.equals(null));	0
14	DefaultExtensionTest	testHashCode	assertEquals(defaultExtension0.hashCode(),defaultExtension1.hashCode());	assertTrue(defaultExtension0.getProvidedExtensionAsClient().isEmpty());	0
9	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotNull(decoder);	0
10	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertNotEquals(0,c.yModeProbs[0][0]);	0
12	InterModeInfoTest	testReadIntraMode	assertEquals(2,newInterModeInfo().readInterIntraMode(miCol,miRow,blSz,decoder,c));	assertFalse(decoder.isFullyRead());	0
0	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual);	1
5	VerbsTest	testRegistered	assertNotNull(actual);	assertFalse("STR".equals(actual.toString()));	0
7	VerbsTest	testRegistered	assertNotNull(actual);	assertNotNull(actual.getId());	0
0	VerbsTest	testImported	assertNotNull(actual);	assertNotNull(actual);	1
8	VerbsTest	testImported	assertNotNull(actual);	assertFalse(actual.getDisplay().isEmpty());	0
10	VerbsTest	testImported	assertNotNull(actual);	assertTrue(actual.serialize().isJsonObject());	0
14	VerbsTest	testImported	assertNotNull(actual);	assertFalse(actual.getDisplay().containsValue("STR"));	0
0	VerbsTest	testInitialized	assertNotNull(actual);	assertNotNull(actual);	1
5	VerbsTest	testInitialized	assertNotNull(actual);	assertNotNull(actual);	1
1	StatementTest	testToString	assertNotNull(actual);	assertNotNull(actual);	1
0	ActivityTest	testGetObjectType	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityTest	testGetObjectType	assertNotNull(actual);	assertTrue(actual.equals(expected));	0
2	ActivityTest	testGetObjectType	assertNotNull(actual);	assertSame(expected,actual);	0
4	ActivityTest	testGetObjectType	assertNotNull(actual);	assertNotNull(actual);	1
12	ActivityTest	testGetObjectType	assertNotNull(actual);	assertFalse(false);	0
0	TestPressure	testToMillibar	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(actual.contains(expected));	0
2	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotNull(actual);	0
3	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotEquals(802,actual);	0
4	TestPressure	testToMillibar	assertEquals(expected,actual);	assertNotSame(expected,actual);	0
5	TestPressure	testToMillibar	assertEquals(expected,actual);	assertFalse(actual.isEmpty());	0
8	TestPressure	testToMillibar	assertEquals(expected,actual);	assertArrayEquals(expected.toCharArray(),actual.toCharArray());	0
9	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(expected.startsWith(actual));	0
12	TestPressure	testToMillibar	assertEquals(expected,actual);	assertTrue(expected!=actual);	0
13	TestPressure	testToMillibar	assertEquals(expected,actual);	assertEquals(expected,actual);	1
0	TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	TestPressure	testToInHg	assertEquals(expected,actual);	assertTrue(expected.equals(actual));	0
2	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotEquals(23.7,actual);	0
3	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
5	TestPressure	testToInHg	assertEquals(expected,actual);	assertEquals(expected,actual);	1
7	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotEquals("STR",actual);	0
8	TestPressure	testToInHg	assertEquals(expected,actual);	assertFalse(actual.isEmpty());	0
10	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotNull(actual);	0
12	TestPressure	testToInHg	assertEquals(expected,actual);	assertNotSame(expected,actual);	0
1	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0&&value<100);	0
2	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(0,value);	0
3	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertTrue(value>=0);	1
4	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotNull(value);	0
5	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(null,value);	0
6	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertFalse(value<0);	0
7	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotEquals(50,value);	0
9	BaseThreadStateTest	randomInt_withBound	assertTrue(value>=0);	assertNotSame(0,value);	0
2	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(identityFile.exists());	0
8	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals("STR",simulatorProperties.get("STR"));	0
12	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertNotEquals(identityFile,customFile);	0
13	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertTrue(customFile.isFile());	0
14	SimulatorPropertiesTest	testGet_CLOUD_IDENTITY	assertEquals("STR",simulatorProperties.getCloudIdentity());	assertFalse(customFile.isDirectory());	0
7	ReflectionUtilsTest	testGetField_typeMismatch	assertNull(field);	assertNull(field);	1
0	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotNull(options);	1
1	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertTrue(options.hasOptions()==false);	0
2	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertEquals(0,options.nonOptionArguments().size());	0
4	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertFalse(options.hasOptions());	0
5	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotSame(null,options);	0
6	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertNotEquals(null,options);	0
11	CliUtilsTest	testInitOptionsWithHelp_noArgs	assertNotNull(options);	assertFalse(options.has("STR"));	0
0	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
1	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(2,tokens.size());	0
2	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.nonEmpty());	0
3	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	0
6	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(nouns.isEmpty());	0
9	OpenKoreanProcessorJavaTest	testRemoveWordsFromDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals("STR",text);	0
0	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals("STR","STR");	0
2	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.isEmpty());	0
5	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNotEquals(0,env.size());	0
6	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertNull(env.get("STR"));	0
7	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertEquals(3,env.size());	0
10	CiEnvironmentTest	recognises_jenkins	assertEquals("STR",CIEnvironment.detect(env).getCiName());	assertFalse(env.containsValue("STR"));	0
0	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertNotNull(helloClass);	1
1	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredClasses().length>0);	0
3	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.isInterface());	0
4	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getDeclaredMethods().length>0);	0
6	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertTrue(helloClass.getModifiers()==java.lang.reflect.Modifier.PUBLIC);	0
8	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.getConstructors().length==0);	0
10	InMemoryJavaCompilerTest	compile_WhenSourceContainsInnerClasses	assertNotNull(helloClass);	assertFalse(helloClass.isEnum());	0
0	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration<=durationLimit);	0
2	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(0,duration);	0
3	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotNull(duration);	0
4	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertTrue(duration>0);	0
5	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotSame(started,duration);	0
7	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	assertTrue(format("STR",duration),duration>0);	assertNotEquals(started,duration);	0
0	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertEquals("STR","STR");	0
8	SimulatorAddressTest	testToString_whenCoordinator	assertEquals("STR",coordinatorAddress().toString());	assertTrue(5>4);	0
0	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertEquals("STR",clazz.getCustom("STR"));	1
1	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotNull(clazz);	0
3	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertFalse(clazz.isAbstract());	0
16	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNotNull(result.getExecutionPlan());	0
19	OAlterClassStatementExecutionTest	testCustom	assertEquals("STR",clazz.getCustom("STR"));	assertNull(clazz.getCustom("STR"));	0
0	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
25	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(resultinstanceofArrayList);	0
1	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(result.length,1);	1
2	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertSame(OType.INTEGER,result[0]);	0
3	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(Arrays.asList(result).contains(OType.INTEGER));	0
4	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertFalse(Arrays.asList(result).isEmpty());	0
5	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotNull(result);	0
6	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotEquals(0,result.length);	0
8	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertTrue(result.length>0);	0
9	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.BOOLEAN,result[0]);	0
10	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertEquals(OType.INTEGER,result[0]);	0
11	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	assertNotSame(OType.LINK,result[0]);	0
1	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertEquals(compositeKey.getKeys().size(),1);	1
2	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().isEmpty());	0
3	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotNull(compositeKey.getKeys());	0
4	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertNotEquals(0,compositeKey.getKeys().size());	0
12	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertFalse(compositeKey.getKeys().contains(null));	0
1	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(index.getSize()>0);	0
2	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotNull(index);	0
7	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertFalse(index.getSize()==0);	0
11	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(index.getSize()>=0);	0
22	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertNotNull(db);	0
23	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertFalse(db.isClosed());	0
2	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotNull(result);	0
8	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotEquals(BigDecimal.ZERO,result);	0
9	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertTrue(resultinstanceofBigDecimal);	1
18	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotSame(BigDecimal.ZERO,result);	0
23	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertNotSame(BigDecimal.TEN,result);	0
26	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	assertEquals(BigDecimal.valueOf(10.5D),result);	0
0	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	0
1	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasNext());	0
3	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	0
10	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotNull(qResult);	0
2	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertNotNull(listener);	0
12	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertTrue(true);	0
14	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertFalse(false);	0
1	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotNull(oClass.getProperty("STR"));	1
5	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotEquals("STR",oClass.getName());	0
9	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertTrue(oSchema.getClasses().contains(oClass));	0
12	OClassImplTest	testCreateNoLinkedClass	assertNotNull(oClass.getProperty("STR"));	assertNotSame("STR",oClass.getName());	0
0	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotNull(result);	0
1	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertEquals(2,((List<Object>)result).size());	0
6	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotEquals(0,((List<Object>)result).size());	0
15	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotSame(Collections.emptyList(),result);	0
19	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertFalse(((List<Object>)result).isEmpty());	0
21	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertTrue(((List<Object>)result).size()>0);	0
25	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertFalse(((List<Object>)result).contains("STR"));	0
28	OPropertyListIndexDefinitionTest	testCreateValueSingleParameter	assertTrue(resultinstanceofCollection);	assertNotEquals(3,((List<Object>)result).size());	0
4	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertNotNull(walChanges);	0
5	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertSame(ByteOrder.nativeOrder(),buffer.order());	0
8	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.capacity()>=FIELD_SIZE+serializationOffset);	0
10	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FIELD_SIZE+serializationOffset,buffer.limit());	0
11	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.isDirect());	0
14	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FIELD_SIZE,buffer.capacity()-serializationOffset);	0
15	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(data.length<=buffer.remaining());	0
16	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertEquals(FIELD_SIZE+serializationOffset,buffer.limit()-buffer.position());	0
19	FloatSerializerTest	testSerializeWALChanges	assertEquals(floatSerializer.getObjectSizeInByteBuffer(buffer,walChanges,serializationOffset),FIELD_SIZE);	assertTrue(buffer.hasRemaining());	0
3	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
4	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	0
6	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertTrue(otp.length()>0);	0
7	YubicoClientTest	testLongOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals(0,otp.length());	0
0	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(YubicoClient.isValidOTPFormat(otp));	1
2	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertEquals(6,otp.length());	0
3	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals("STR",otp);	0
4	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotNull(otp);	0
7	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertFalse(otp.isEmpty());	0
8	YubicoClientTest	testShortOTP	assertFalse(YubicoClient.isValidOTPFormat(otp));	assertNotEquals("STR",otp.toUpperCase());	0
0	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	0
2	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer.getPrioritizedRoutes());	0
3	TestNanolets	testProvidedPriorityRoutePrioritizerNullUri	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotEquals(5,routePrioritizer.getPrioritizedRoutes().size());	0
0	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertNotNull(routePrioritizer);	0
1	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertTrue(routePrioritizer.getPrioritizedRoutes().isEmpty());	0
2	TestNanolets	testProvidedPriorityRoutePrioritizerNullHandler	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	assertEquals(0,routePrioritizer.getPrioritizedRoutes().size());	1
0	SvgSizeAnalyzerTest	svgWithoutChanges	assertEquals(SVG,a.getSvg());	assertEquals(SVG,a.getSvg());	1
0	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(transform);	1
1	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertEquals(ColorSpace.YUV420J,dst.getColor());	0
2	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(src.getWidth()==dst.getWidth()&&src.getHeight()==dst.getHeight());	0
4	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotEquals(0,transform);	0
6	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertEquals(ColorSpace.YUV444J,src.getColor());	0
8	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(dst);	0
9	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotNull(transform);	1
12	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertNotSame(srcPix,dst.getPlaneData(0));	0
14	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertTrue(transform!=null);	0
15	Yuv444jToYuv420jTest	testEvenEven	assertNotNull(transform);	assertFalse(dst.getPlaneData(0).equals(srcPix));	0
0	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
1	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertEquals(expected.length,actual.length);	0
2	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertTrue(java.util.Arrays.equals(expected,actual));	0
3	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertNotNull(actual);	1
5	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertSame(expected,actual);	0
12	PersonTest	testGetMbox_sha1sum	assertNotNull(actual);	assertArrayEquals(expected,actual);	0
0	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
2	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertNotNull(actual);	1
3	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
4	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertSame(expected,actual);	0
6	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertTrue(actual.size()>=expected.size());	0
11	ActivityDefinitionTest	testSetChoices	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
0	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	0
2	StatementTest	testGetObject	assertNotNull(actual);	assertNotNull(actual);	1
3	StatementTest	testGetObject	assertNotNull(actual);	assertEquals(expected,actual);	0
5	StatementTest	testGetObject	assertNotNull(actual);	assertTrue(actual==expected);	0
22	StatementTest	testGetObject	assertNotNull(actual);	assertSame(expected,actual);	0
26	StatementTest	testGetObject	assertNotNull(actual);	assertNotNull(actual);	1
0	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(aXls);	0
1	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(aXls.exists());	1
2	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedValue,actualValue);	0
3	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(expectedValue,actualValue);	0
4	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertSame(expectedObject,actualObject);	0
5	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(condition);	0
6	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(expectedObject,actualObject);	0
7	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	0
8	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedValue,actualValue,delta);	0
9	ExcelSheetToCodeList04Test	testReadExcel	assertTrue(aXls.exists());	assertArrayEquals(expectedArray,actualArray);	0
0	SourceLoaderFactoryTest	testCreateSourceLoaderWithAdditionalSourceDirectories	assertNotNull(sourceLoader);	assertNotNull(sourceLoader);	1
1	EdgeCases	testSpaces	assertEquals("STR",m.markdown("STR"));	assertEquals("STR",m.markdown("STR"));	1
2	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(1,env.size());	0
3	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.isEmpty());	0
4	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull(env);	0
5	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals(0,env.size());	0
7	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNull(env.get("STR"));	0
8	BambooEnvironmentVariablesTest	duplicates_bamboo_prefixed_env_vars_with_prefixless_copy	assertEquals("STR",convertedEnv.get("STR"));	assertNotSame("STR",env.get("STR"));	0
0	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals("STR",convertedEnv.get("STR"));	1
1	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertFalse(env.containsKey("STR"));	0
2	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(result.containsKey("STR"));	0
3	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertEquals(5,result.size());	0
4	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNull(result.get("STR"));	0
5	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals("STR",env.get("STR"));	0
6	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotNull(result);	0
8	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(env.containsKey("STR"));	0
9	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertNotEquals("STR",env.get("STR"));	0
10	BambooEnvironmentVariablesTest	prefixless_env_var_takes_precendence	assertEquals("STR",convertedEnv.get("STR"));	assertTrue(result.isEmpty());	0
0	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals("STR",result.get("STR"));	0
1	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(result.containsKey("STR"));	0
2	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertFalse(result.containsKey("STR"));	0
3	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotNull(result);	0
4	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(result.isEmpty());	0
5	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertEquals(expectedSize,result.size());	0
6	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotEquals(expectedValue,result.get("STR"));	0
7	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNull(result.get("STR"));	0
8	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertNotSame(expectedValue,result.get("STR"));	0
9	EnvFilterTest	allows_overriding_mask	assertEquals(expectedEnv,envFilter.filter(env));	assertTrue(result.containsValue("STR"));	0
0	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertNotNull(atts);	0
4	MBeanAnnotationUtilTest	testGetAttributes	assertEquals(2,atts.size());	assertEquals(2,atts.size());	1
0	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(expectedTokens,actualTokens);	0
1	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertTrue(!actualTokens.isEmpty());	0
2	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotNull(actualTokens);	0
3	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertFalse(actualTokens.contains("STR"));	0
4	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertEquals(expectedSize,actualTokens.size());	0
5	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertTrue(actualTokens.containsAll(expectedTokens));	0
6	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotEquals(expectedTokens,actualTokens);	0
7	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertFalse(actualTokens.isEmpty());	0
8	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertArrayEquals(expectedArray,actualArray);	0
9	AsArrayViewTest	testFlatMapTokens	assertEquals(createColl(),create().flatMap(tokens));	assertNotSame(expectedObject,actualObject);	0
0	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertNotNull(bolt);	0
6	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertTrue(true);	0
7	SiteMapParserBoltTest	testNonSitemapParsing	assertEquals(1,output.getEmitted().size());	assertFalse(false);	0
0	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotNull(fields);	0
1	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertEquals(1,fields.size());	0
4	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNotNull(fields);	0
12	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.isEmpty());	0
13	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.containsKey("STR"));	0
15	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertFalse(fields.containsValue("STR"));	0
18	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertNull(fields.get("STR"));	0
19	BasicIndexingTest	testRelativeCanonicalURL	assertEquals("STR",fields.get("STR"));	assertTrue(!fields.isEmpty());	0
3	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	assertNotNull(bolt);	0
8	FeedParserBoltTest	testNonFeedParsing	assertEquals(1,output.getEmitted().size());	assertTrue(5>3);	0
2	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertEquals(true,iterator.hasNext());	0
3	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertTrue(iterator.hasNext());	1
4	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertTrue(iterator.hasNext());	1
5	StreamIterableTest	containsRightElements	assertTrue(iterator.hasNext());	assertNotNull(iterator);	0
7	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.containsAll(Arrays.asList(1,2,3))&&expected.size()==3);	0
8	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertEquals(expected.size(),3);	0
12	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertNotEquals(0,expected.size());	0
14	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertFalse(expected.isEmpty());	0
15	CollectorsTest	toLinkedHashSet	assertEquals(expected,Arrays.asList(1,2,3).stream().collect(Collectors.toLinkedHashSet()));	assertTrue(expected.size()>0);	0
0	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
5	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotNull(result);	0
6	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertFalse(result.isEmpty());	0
8	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
9	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
12	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotSame("STR",result);	0
15	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertTrue(!result.isEmpty());	0
23	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertNotEquals("STR",result);	0
24	FizzBuzzTDDTest	test15ReturnsFizzBuzz	assertEquals("STR",result);	assertEquals("STR",result);	1
0	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
1	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.size()>0);	0
2	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(11,tokens.size());	0
3	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	0
4	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	0
9	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.contains(null));	0
13	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.size()>=3);	0
14	OpenKoreanProcessorJavaTest	testAddWordsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(!tokens.isEmpty());	0
0	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertFalse(filtered.isEmpty());	0
2	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(getAllTestData().containsAll(filtered));	0
3	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotSame(getAllTestData(),filtered);	0
4	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertSame(ProcessorConfig.class,pConfig.getClass());	0
5	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(pConfig.getConfigMap("STR").isEmpty());	0
6	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotNull(pConfig.prepareProcessors(getAllTestData(),"STR"));	0
12	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotNull(pConfig);	0
13	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertNotNull(filtered);	0
16	ProcessorConfigTest	inc	assertTrue(contains(filtered,"STR"));	assertTrue(filtered.size()>0);	0
0	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
2	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertEquals(true,matcher.lookingAt());	0
3	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	0
4	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertFalse(matcher.matches());	0
5	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotEquals(0,matcher.end());	0
6	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotSame(null,matcher.pattern());	0
7	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertEquals("STR",matcher.group());	0
8	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotEquals("STR",matcher.group());	0
9	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertTrue(matcher.hitEnd());	0
10	MatcherTest	lookingAtAREDirector	assertTrue(matcher.lookingAt());	assertNotSame("STR",matcher.group());	0
0	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertEquals(1,formas.size());	1
1	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()>0);	0
3	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.isEmpty());	0
4	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotEquals(0,formas.size());	0
13	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.stream().allMatch(wordform->wordform.getToken().startsWith("STR")));	0
14	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.stream().anyMatch(wordform->wordform.getToken().contains("STR")));	0
18	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertFalse(formas.contains(null));	0
19	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.get(0).getToken().equals("STR"));	0
24	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertNotNull(formas);	0
25	MorphologyTest	apstākļa_vārdu_ģenerēšana	assertEquals(1,formas.size());	assertTrue(formas.size()>=1);	0
1	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals("STR",defaultExtension.toString());	1
2	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.acceptProvidedExtensionAsServer("STR"));	0
5	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotSame(defaultExtension,defaultExtension.copyInstance());	0
6	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotNull(defaultExtension);	0
10	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals("STR",defaultExtension.toString());	1
11	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertEquals(0,defaultExtension.getProvidedExtensionAsServer().length());	0
12	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertFalse(defaultExtension.equals(null));	0
14	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertTrue(defaultExtension.acceptProvidedExtensionAsClient("STR"));	0
15	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertFalse(defaultExtension.equals("STR"));	0
17	DefaultExtensionTest	testToString	assertEquals("STR",defaultExtension.toString());	assertNotNull(defaultExtension.getProvidedExtensionAsServer());	0
0	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertEquals("STR","STR".replaceAll("STR","STR"));	0
2	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertEquals("STR",io.openliberty.tools.common.plugins.util.DevUtil.removeSurroundingQuotes("STR"));	0
7	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertFalse("STR".isEmpty());	0
8	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertTrue("STR".startsWith("STR"));	0
9	DevUtilTest	testRemoveSurroundingQuotes	assertEquals("STR",DevUtil.removeSurroundingQuotes("STR"));	assertNotEquals(5,10);	0
12	SeqTest	testCommaList	assertEquals("STR",Seq.join(Arrays.asList("STR","STR","STR"),"STR"));	assertFalse(false);	0
2	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotNull(sql.toString());	0
3	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
4	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	0
5	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
8	TSqlBuilderTest	testWhere	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString().trim());	0
1	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertEquals("STR",sql.toString());	1
4	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertFalse(sql.toString().isEmpty());	0
5	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotNull(sql);	0
6	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	0
7	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotSame(null,sql);	0
8	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertTrue(sql.toString().length()>0);	0
9	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals(null,sql.toString());	0
13	TSqlBuilderTest	testSort	assertEquals("STR",sql.toString());	assertNotEquals("STR",sql.toString());	0
1	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotNull(collection);	0
5	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertTrue(collection.length>0);	0
9	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotEquals("STR",collection[1]);	0
14	OMultiValueTest	testArrayFirstLast	assertEquals(OMultiValue.getFirstValue(collection),"STR");	assertNotSame("STR",collection[1]);	0
0	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertFalse(vertices.isEmpty());	0
2	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertEquals(1,vertices.size());	1
3	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.contains(doc));	0
4	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotNull(vertices);	0
5	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotEquals(0,vertices.size());	0
6	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertNotSame(0,vertices.size());	0
7	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertTrue(vertices.size()>0);	0
8	LuceneInheritanceQueryTest	testQuery	assertEquals(1,vertices.size());	assertSame(1,vertices.size());	0
3	OCompositeIndexDefinitionTest	testDocumentToIndexCollectionValueEmptyOneNullValuesSupport	assertEquals(result,Arrays.asList(newOCompositeKey(12,null)));	assertNotNull(result);	0
0	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertEquals(result,expectedResult);	1
6	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotEquals(expectedResult.size(),0);	0
9	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotNull(result);	0
10	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertFalse(expectedResult.isEmpty());	0
13	OCompositeIndexDefinitionTest	testCreateCollectionValueSuccessfulOne	assertEquals(result,expectedResult);	assertNotSame(expectedResult,result);	0
0	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
1	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertFalse(result.hasNext());	1
2	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertEquals(0,result.stream().count());	0
4	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertNotNull(result);	0
5	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertNotNull(result);	0
13	RemoteTransactionSupportTest	testQueryDeleteTxSQLTransaction	assertFalse(result.hasNext());	assertTrue(result.stream().noneMatch(e->e.getProperty("STR").equals("STR")));	0
0	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	1
7	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotNull(stream);	0
12	ByteSerializerTest	testSerialize	assertEquals(byteSerializer.deserialize(stream,0),OBJECT);	assertNotEquals(0,stream.length);	0
0	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	1
1	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.size()>0);	0
2	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotNull(database.getClusterNameById(database.getDefaultClusterId()));	0
3	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotEquals(0,ridBag.size());	0
4	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertNotSame(docOne,docTwo);	0
5	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(ridBag.contains(docOne));	0
7	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertEquals(2,ridBag.size());	0
8	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(database.exists());	0
9	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertTrue(database.getDefaultClusterId()>=0);	0
10	ORidBagAtomicUpdateTest	testAddTwoSavedDocuments	assertEquals(database.countClusterElements(database.getDefaultClusterId()),recordsCount);	assertFalse(ridBag.isEmpty());	0
0	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotNull(idProperty);	0
1	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertTrue(idProperty.isMandatory());	0
7	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(idProperty.isNotNull());	0
8	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals(10,idProperty.getMin());	0
10	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertSame(companyClass,idProperty.getOwnerClass());	0
11	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertNotSame(companyClass,idProperty.getLinkedClass());	0
14	OCommandExecutorSQLCreatePropertyTest	testNonStrict	assertEquals(idProperty.getName(),PROP_ID);	assertFalse(companyClass.existsProperty("STR"));	0
0	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertEquals(idProperty.getName(),PROP_ID);	1
12	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertNotEquals("STR",idProperty.getDescription());	0
14	OCommandExecutorSQLCreatePropertyTest	testLinkedTypeDefaultAndMinMaxUnsafeProperty	assertEquals(idProperty.getName(),PROP_ID);	assertSame(companyClass,idProperty.getOwnerClass());	0
1	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertEquals(2,clazzV.getClusterIds().length);	1
4	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertFalse(db.getClusterNames().isEmpty());	0
5	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotNull(clazzV);	0
7	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(0,s);	0
9	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(db.getClusterNames().size()>0);	0
10	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotSame(s,t);	0
12	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertNotEquals(s,t);	0
13	CreateClassMultipleClusterTest	testCreateClassSQLSpecifiedClusters	assertEquals(2,clazzV.getClusterIds().length);	assertTrue(clazzV.getClusterIds().length>0);	0
0	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertNotNull(doc);	0
2	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	0
13	TrackedSetTest	testClearOne	assertFalse(doc.isDirty());	assertSame(ODocument.class,doc.getClass());	0
0	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotNull(ret);	1
1	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotNull(manager.getConnections());	0
2	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertEquals(1,manager.getConnections().size());	0
4	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getConnections().contains(ret));	0
5	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertSame(protocol,ret.getProtocol());	0
6	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getConnections().stream().anyMatch(c->c.getId()==ret.getId()));	0
9	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertNotSame(null,ret);	0
10	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(ret.getId()>=0);	0
11	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertTrue(manager.getConnections().stream().anyMatch(c->c.equals(ret)));	0
12	OClientConnectionManagerTest	testSimpleConnectDisconnect	assertNotNull(ret);	assertFalse(manager.getConnections().isEmpty());	0
0	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(compositeKey,anotherCompositeKey);	0
1	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertTrue(compositeKey.equals(anotherCompositeKey));	1
3	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotSame(compositeKey,anotherCompositeKey);	0
4	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotNull(compositeKey);	0
6	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertFalse(compositeKey.getKeys().isEmpty());	0
7	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertEquals(2,compositeKey.getKeys().size());	0
10	OCompositeKeyTest	testEqualSameKeys	assertTrue(compositeKey.equals(anotherCompositeKey));	assertNotEquals(compositeKey,null);	0
2	OQueryRequestTest	testWithNamedParams	assertEquals(request.getCommand(),other.getCommand());	assertNotNull(other);	0
23	OPropertyMapIndexDefinitionTest	testCreateSingleValueByKey	assertEquals(result,"STR");	assertEquals(result,"STR");	1
10	SystemLoggerTest	defaults_to_WARN_when_unknown_log_level_is_set	assertEquals(Logger.Level.WARN,logger.level);	assertEquals(Logger.Level.WARN,logger.level);	1
0	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotSame(Integer.valueOf(0),comparison);	0
10	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotNull(macAddress);	0
11	MacAddressTest	testAddressCompareToNotEqual	assertNotEquals(0,comparison);	assertNotEquals(0,comparison);	1
0	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertEquals(true,macAddress.equals(macAddress));	0
1	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.equals(macAddress));	0
2	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertArrayEquals(macAddress.getBytes(),macAddress.getBytes());	0
3	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotNull(macAddress.toString());	0
4	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertNotEquals(null,macAddress);	0
5	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.isMulticast()&&macAddress.isLocal());	0
8	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertTrue(macAddress.hashCode()==macAddress.hashCode());	0
11	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertEquals(0,macAddress.compareTo(macAddress));	0
12	MacAddressTest	testAddressMulticastNotLocal	assertFalse(macAddress.equals(newMacAddress(LOCAL_ADDRESS)));	assertFalse(macAddress.isLocal());	0
0	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	0
1	AboutTest	testGetExtensions	assertNotNull(actual);	assertNotNull(actual);	1
5	AboutTest	testGetExtensions	assertNotNull(actual);	assertEquals(expected,actual);	0
7	AboutTest	testGetExtensions	assertNotNull(actual);	assertNotSame(expected,actual);	0
9	AboutTest	testGetExtensions	assertNotNull(actual);	assertTrue(actual.entrySet().size()>0);	0
1	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertNotNull(statementRef.getId());	0
3	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertEquals(id,statementRef.getId());	0
6	StatementReferenceTest	testStatementReferenceString	assertNotNull(statementRef);	assertFalse(statementRef.getId().isEmpty());	0
0	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected,actual);	0
1	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.containsAll(expected));	0
3	GroupTest	testSetMember	assertNotNull(actual);	assertNotNull(actual);	1
5	GroupTest	testSetMember	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
6	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
7	GroupTest	testSetMember	assertNotNull(actual);	assertSame(expected,actual);	0
8	GroupTest	testSetMember	assertNotNull(actual);	assertTrue(actual.contains(expected.get(0)));	0
11	GroupTest	testSetMember	assertNotNull(actual);	assertEquals(expected.hashCode(),actual.hashCode());	0
13	GroupTest	testSetMember	assertNotNull(actual);	assertArrayEquals(expected.toArray(),actual.toArray());	0
0	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertEquals(expected,actual);	1
1	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertTrue(actual.startsWith(expected));	0
2	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertNotNull(actual);	0
4	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertFalse(false);	0
5	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertSame(expected,actual);	0
8	PersonTest	testGetObjectType	assertEquals(expected,actual);	assertEquals(expected,actual);	1
0	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
3	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertNotNull(actual);	1
4	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
5	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.size()>0);	0
6	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
9	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertTrue(actual.contains(e));	0
10	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertSame(expected,actual);	0
12	ActivityDefinitionTest	testSetTarget	assertNotNull(actual);	assertFalse(actual.contains(e)&&actual.size()>1);	0
0	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertTrue(normalizedUrl.contains(expectedResult));	0
2	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
3	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
4	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
5	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame("STR",normalizedUrl);	0
6	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.equals("STR"));	0
7	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
8	BasicURLNormalizerTest	testRemoveDupeQueryParams	assertEquals(expectedResult,normalizedUrl);	assertArrayEquals(expectedResult.toCharArray(),normalizedUrl.toCharArray());	0
0	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
1	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertTrue(expectedResult.equals(normalizedUrl));	0
2	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotNull(normalizedUrl);	0
3	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertEquals(expectedResult,normalizedUrl);	1
11	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotEquals("STR",normalizedUrl);	0
13	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertNotSame(expectedResult,normalizedUrl);	0
14	BasicURLNormalizerTest	testLowerCasing	assertEquals(expectedResult,normalizedUrl);	assertFalse(normalizedUrl.isEmpty());	0
0	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotNull(aXls);	0
1	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(aXls.exists());	1
2	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertEquals(expectedValue,actualValue);	0
3	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertFalse(condition);	0
4	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(expectedValue,actualValue);	0
5	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNull(object);	0
6	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertArrayEquals(expectedArray,actualArray);	0
7	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotSame(expectedObject,actualObject);	0
8	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertTrue(condition);	0
10	ExcelSheetToCodeList10Test	testReadExcel	assertTrue(aXls.exists());	assertNotEquals(expectedValue,actualValue,delta);	0
3	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotNull(frame);	0
7	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertEquals(CloseFrame.NORMAL,frame.getCloseCode());	0
8	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertNotNull(frame);	0
12	CloseFrameTest	testExtends	assertEquals(true,frameinstanceofControlFrame);	assertEquals(1000,frame.getCloseCode());	0
0	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertEquals("STR",protocol0.getProvidedProtocol());	1
1	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(protocol0.getProvidedProtocol().isEmpty());	0
2	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.getProvidedProtocol());	0
3	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotEquals("STR",protocol0.getProvidedProtocol());	0
4	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotNull(protocol0.acceptProvidedProtocol("STR"));	0
10	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertTrue(protocol0.acceptProvidedProtocol("STR"));	0
13	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertNotSame(protocol0,protocol0.getProvidedProtocol());	0
14	ProtocolTest	testGetProvidedProtocol	assertEquals("STR",protocol0.getProvidedProtocol());	assertFalse(protocol0.equals(null));	0
0	HeadersTest	test_Add_RemoveHeaders	assertEquals("STR",client.removeHeader("STR"));	assertEquals("STR",client.removeHeader("STR"));	1
3	IterableToStreamTest	iterableToStream	assertEquals(Arrays.asList(1,2,3,4,5,6),IterableToStream.stream(ImmutableList.of(1,2,3,4,5,6)).collect(java.util.stream.Collectors.toList()));	assertNotNull("STR");	0
0	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNull(contentEncoding);	1
3	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertTrue(response.getStatusLine().getStatusCode()==200);	0
5	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNotEquals(0,testServer.response.getHeader("STR"));	0
8	GZipIntegrationTest	contentShouldNotBeGzippedIfContentLengthIsAddedManually	assertNull(contentEncoding);	assertNotSame(Status.INTERNAL_ERROR,testServer.response.getStatus());	0
2	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertEquals(3,result.size());	1
10	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertFalse(false);	0
13	JavaCompilerOptionsTest	testSource	assertEquals(3,result.size());	assertNotNull(result);	0
0	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
1	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertFalse(tokens.isEmpty());	0
3	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertEquals(1,tokens.size());	0
4	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotEquals(0,tokens.size());	0
12	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotNull(tokens);	0
13	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertTrue(tokens.size()>0);	0
14	OpenKoreanProcessorJavaTest	testAddNounsToDictionary	assertEquals("STR",OpenKoreanTextProcessorJava.tokensToJavaStringList(tokens).toString());	assertNotSame(0,tokens.size());	0
0	LifeCycleTest	testAvailabilityCheck	assertTrue(testFunctionAvailable(false));	assertEquals(<expectedAvailability>;,availabilityCheck());	0
0	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertEquals(tempTextFile,configFile);	0
1	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotNull(configFile);	0
2	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertTrue(configFile.exists());	1
3	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertFalse(configFile.isDirectory());	0
4	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertNotEquals(null,configFile);	0
5	DevUtilTest	testGetFileFromConfigDirectory	assertTrue(configFile.exists());	assertEquals(tempTextFile,configFile);	0
0	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertNotNull(obj);	0
3	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertFalse(obj.getAge()<0);	0
7	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertTrue(obj.getAge()>0);	0
8	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertEquals(21,obj.getAge());	1
9	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertTrue(!"STR".equals(obj.getName()));	0
11	ReflexUtilTest	testGetInstance	assertEquals(21,obj.getAge());	assertFalse("STR".equals(obj.getEmail()));	0
0	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotNull(client2);	0
1	GlobalSwitchTest	testDefaultvalue	assertFalse(client1.isConnectionMonitorSwitchOn());	assertNotSame(client1,client2);	0
0	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertEquals("STR",btUrl.getIp());	1
1	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertTrue(btUrl.getPort()==1111);	0
2	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotNull(btUrl.getProperties());	0
4	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotEquals("STR",btUrl.getIp());	0
5	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(btUrl.getPort()<1000);	0
6	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertNotSame(null,btUrl);	0
8	RpcAddressParserTest	testParserConnectTimeout	assertEquals("STR",btUrl.getIp());	assertFalse(url.endsWith("STR"));	0
0	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertEquals(rpcRequestProcessor2,processorManager.getProcessor(cmd2));	0
1	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotSame(rpcRequestProcessor1,processorManager.getProcessor(cmd1));	0
3	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(processorManager.getProcessor(cmd1));	0
4	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotNull(processorManager.getProcessor(cmd1));	0
6	ProcessorManagerTest	testRegisterProcessor	assertEquals(processorManager.getProcessor(cmd1),rpcRequestProcessor2);	assertNotEquals(rpcRequestProcessor1,processorManager.getProcessor(cmd2));	0
0	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	1
10	YubicoClientTest	testBadSignature	assertEquals(ResponseStatus.BAD_SIGNATURE,response.getStatus());	assertFalse(response.isOk());	0
2	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNotNull(response);	1
4	YubicoClientTest	testBadOTP	assertNotNull(response);	assertEquals(ResponseStatus.BAD_OTP,response.getStatus());	0
5	YubicoClientTest	testBadOTP	assertNotNull(response);	assertFalse(response.isOk());	0
7	YubicoClientTest	testBadOTP	assertNotNull(response);	assertNull(response.getNonce());	0
0	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected,actual);	0
1	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertTrue(actual.containsAll(expected)&&expected.containsAll(actual));	0
3	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertNotNull(actual);	1
7	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertSame(expected,actual);	0
11	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
12	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
13	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertEquals(expected.toString(),actual.toString());	0
14	ContentActivitiesTest	testSetCategory	assertNotNull(actual);	assertNotSame(newID,actual);	0
0	ScoreTest	testSerialize	assertNotNull(actual);	assertNotNull(actual);	1
1	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(actual,actual);	0
2	ScoreTest	testSerialize	assertNotNull(actual);	assertTrue(actual.isJsonObject());	0
4	ScoreTest	testSerialize	assertNotNull(actual);	assertFalse(actual.isJsonArray());	0
6	ScoreTest	testSerialize	assertNotNull(actual);	assertEquals(actual,actual);	0
0	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected,actual);	0
2	VerbTest	testSetDisplay	assertNotNull(actual);	assertFalse(actual.isEmpty());	0
3	VerbTest	testSetDisplay	assertNotNull(actual);	assertNotNull(actual);	1
6	VerbTest	testSetDisplay	assertNotNull(actual);	assertNotNull(actual);	1
8	VerbTest	testSetDisplay	assertNotNull(actual);	assertSame(expected,actual);	0
10	VerbTest	testSetDisplay	assertNotNull(actual);	assertEquals(expected.size(),actual.size());	0
0	StatementTest	testGetId	assertNotNull(actual);	assertEquals(expected,actual);	0
1	StatementTest	testGetId	assertNotNull(actual);	assertNotNull(actual);	1
2	StatementTest	testGetId	assertNotNull(actual);	assertTrue(actual!=null&&!actual.isEmpty());	0
1	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertEquals(false,frame.isFin());	1
2	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertFalse(frame.isFin());	0
5	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotNull(frame);	0
10	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotEquals(true,frame.isFin());	0
13	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertNotSame(null,frame);	0
14	FramedataImpl1Test	testSetters	assertEquals(false,frame.isFin());	assertEquals(Opcode.BINARY,frame.getOpcode());	0
1	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertEquals(3,names.size());	0
2	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertTrue(names.contains("STR"));	1
3	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.isEmpty());	0
4	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertFalse(names.contains("STR"));	0
12	OElementTest	testGetSetProperty	assertTrue(names.contains("STR"));	assertTrue(names.contains("STR"));	1
1	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertEquals(ddl,"STR");	1
4	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotNull(ddl);	0
5	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotEquals("STR",ddl);	0
14	OPropertyMapIndexDefinitionTest	testCreateDDLByKey	assertEquals(ddl,"STR");	assertNotSame("STR",ddl);	0
0	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertEquals(v,OBJECT);	1
1	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertFalse(Float.isNaN(v));	0
2	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotEquals(0.0f,v);	0
3	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertTrue(Float.isFinite(v));	0
4	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotNull(v);	0
5	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotSame(OBJECT,v);	0
7	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertTrue(v>0.0f);	0
8	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotEquals(5.0f,v);	0
9	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertEquals(OBJECT,Float.valueOf(v));	0
10	FloatSerializerTest	testSerializeNative	assertEquals(v,OBJECT);	assertNotSame(stream,null);	0
0	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertFalse(doc.isDirty());	1
1	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertTrue(!doc.isDirty());	0
2	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertEquals(0,doc.getVersion());	0
3	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotNull(doc);	0
4	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertSame(ODocument.class,doc.getClass());	0
5	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotSame(String.class,doc.getClass());	0
6	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotEquals("STR",doc.toString());	0
9	TrackedSetTest	testRemoveNotificationThree	assertFalse(doc.isDirty());	assertNotEquals(42,doc.getVersion());	0
4	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertNotNull(r);	0
6	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertFalse(r.isEmpty());	0
7	TxNonUniqueIndexWithCollationTest	testIn	assertEquals(4,r.size());	assertTrue(r.iterator().hasNext());	0
2	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertEquals(index.getSize(),4);	1
3	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertTrue(index.getSize()>0);	0
4	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotNull(index);	0
5	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotEquals(0,index.getSize());	0
8	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertTrue(index.getSize()<=10);	0
11	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertFalse(index.getSize()==0);	0
12	OLuceneManualIndexTest	shouldCreateManualIndexWithJavaApi	assertEquals(index.getSize(),4);	assertNotSame(0,index.getSize());	0
1	CiEnvironmentTest	is_inactive_by_default	assertNull(CIEnvironment.detect(env));	assertNotNull(env);	0
0	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertNull(factory.getDsn());	1
3	RavenAppenderFactoryTest	hasValidDefaults	assertNull(factory.getDsn());	assertTrue(factory.getFilterFactories().isEmpty());	0
1	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertEquals(0,map.size());	0
3	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertFalse(map.containsKey("STR"));	0
4	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertTrue(map.isEmpty());	0
7	AHashMapTest	testEqualityIdentity	assertEquals(key1,key2);	assertNotEquals(5,map.size());	0
0	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(len1.apply("STR"));	0
1	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertEquals(expectedSize,result.size());	0
2	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotNull(result);	0
3	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertFalse(len1.apply("STR"));	0
4	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotEquals(expectedSize,result.size());	0
5	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertArrayEquals(expectedArray,result.toArray());	0
6	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotSame(expectedObject,result);	0
7	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNull(result);	0
8	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertNotEquals(expectedList,result);	0
9	ACollectionHelperTest	testFilter	assertEquals(Arrays.<String>asList(),ACollectionHelper.filter(Arrays.<String>asList(),len1));	assertTrue(result.contains("STR"));	0
0	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertEquals(a,b);	1
1	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotSame(a,b);	0
2	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.equals(b));	0
3	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertArrayEquals(a.getCells(),b.getCells());	0
5	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertNotNull(a);	0
6	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.hashCode()==b.hashCode());	0
8	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertFalse(a==b);	0
11	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertSame(a.getClass(),b.getClass());	0
13	PuzzleTest	same_cells_means_same_puzzle	assertEquals(a,b);	assertTrue(a.toString().equals(b.toString()));	0
0	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertTrue(matcher.lookingAt());	1
1	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertFalse(matcher.matches());	0
2	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertEquals(7,matcher.regionEnd());	0
6	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertEquals(7,matcher.regionEnd());	0
9	MatcherTest	lookingAt	assertTrue(matcher.lookingAt());	assertNotNull(matcher);	0
0	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertTrue(jāmāk.isRecognized());	1
1	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertNotNull(jāmāk);	0
4	MorphologyTest	jāmāk	assertTrue(jāmāk.isRecognized());	assertEquals("STR",jāmāk.getToken());	0
0	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.isRecognized());	1
3	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertEquals("STR",w.getToken());	0
4	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotNull(w);	0
5	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.wordforms.isEmpty());	0
7	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotEquals("STR",w.getToken());	0
10	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertEquals(2,w.wordforms.size());	0
11	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertTrue(w.getToken().startsWith("STR"));	0
12	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertNotSame("STR",w.getToken());	0
13	MorphologyTest	žirafe	assertTrue(w.isRecognized());	assertFalse(w.getToken().isEmpty());	0
0	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	0
5	TestBugfixes	validLoggerReturned_whenOpenThenCloseThenOpenWithSameParameters	assertEquals(null,logger.sender);	assertNotNull(logger);	0
1	ObjectQueryPreparerTest	testGetSetParameterReplacer	assertNotNull(this.preparer.getParameterReplacer());	assertNotNull(testTarget001);	0
1	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotNull(factory.getTargetDescription());	0
2	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertTrue(!factory.getTargetDescription().equals("STR"));	0
4	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertNotSame("STR",factory.getTargetDescription());	0
5	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse(factory.getTargetDescription().isEmpty());	0
7	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse("STR".equals(factory.getTargetDescription()));	0
10	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertTrue(!"STR".equals(factory.getTargetDescription()));	0
11	JMXRemoteUrlConnectionFactoryTest	testGetTargetDescription	assertEquals("STR",this.factory.getTargetDescription());	assertFalse(factory.getTargetDescription().contains("STR"));	0
0	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotNull(method);	0
1	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertTrue(method!=null);	0
3	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotEquals(null,method);	0
4	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertFalse(method==null);	0
6	AnnotatedMethodRetrieverTest	testGetAtMostOneVoidMethodSkipArgsCheck	assertEquals("STR",method.getName());	assertNotSame(null,method);	0
7	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertEquals(7,words.size());	0
9	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotNull(words);	0
10	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotEquals(0,words.size());	0
11	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertFalse(words.isEmpty());	0
13	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertTrue(words.size()>5);	0
14	OpenKoreanProcessorJavaTest	testDetokenizer	assertEquals("STR",OpenKoreanTextProcessorJava.detokenize(words));	assertNotSame("STR",words.get(0));	0
0	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNotNull(properties);	0
1	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertEquals(5,properties.size());	1
3	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.isEmpty());	0
10	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertFalse(properties.containsKey("STR"));	0
11	ShippableTest	testGetEnvironment	assertEquals(5,properties.size());	assertNull(properties.getProperty("STR"));	0
2	CEFParserTest	invalidMessageValidationTest	assertNull(event);	assertNull(event);	1
0	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertEquals("STR",node.getPath());	1
2	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotNull(node.getPath());	0
3	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertTrue(!node.getPath().equals("STR"));	0
4	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertNotSame("STR",node.getPath());	0
5	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertFalse(node.getPath().isEmpty());	0
11	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertFalse(node.getPath().contains("STR"));	0
12	MultiPathNodeTest	commonPath	assertEquals("STR",node.getPath());	assertFalse("STR".equals(node.getPath()));	0