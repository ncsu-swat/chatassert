TestID	VariantID	Project	TestClass	TestName	TrueOracle	GenOracle	Time	Corr	Incorr	BuildErr	RunErr	TestFailure
0	0	TooTallNate/Java-WebSocket	PerMessageDeflateExtensionTest	testAcceptProvidedExtensionAsServer	"assertTrue(deflateExtension.acceptProvidedExtensionAsServer(""STR""));"	"assertNotNull(""STR"");"	8.0743989944458	0	1	0	0	0
0	28	/	ProfileUtilTest	simple	assertNotNull(is);	assert_contract_imgAwareClearEncEqualEncoder_g456atcFalseField(){);	72.07692813873291	0	1	0	0	0
0	6	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNotNull(prioritizer.getPrioritizedRoutes());	23.986231088638306	0	0	1	0	0
	7	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertTrue(prioritizer.getPrioritizedRoutes().isEmpty());	11.750105142593384	0	0	1	0	0
	8	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertEquals(0,prioritizer.getPrioritizedRoutes().size());	12.144025802612305	0	0	1	0	0
	9	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertFalse(prioritizer.getPrioritizedRoutes().iterator().hasNext());	12.22164511680603	0	0	1	0	0
	10	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNull(prioritizer.getPrioritizedRoutes().iterator().next());	12.225572109222412	0	0	1	0	0
	11	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertSame(prioritizer.getPrioritizedRoutes(),prioritizer.getPrioritizedRoutes());	11.75998067855835	0	0	1	0	0
	12	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNotSame(prioritizer.getPrioritizedRoutes(),new ArrayList<UriResource>());	12.155423879623413	0	0	1	0	0
	15	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertSame(0,prioritizer.getPrioritizedRoutes().toArray().length);	12.010605096817017	0	0	1	0	0
	16	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertNotEquals(0,prioritizer.getPrioritizedRoutes().toArray().length);	11.848112344741821	0	0	1	0	0
	18	/	TestNanolets	testRoutePrioritizerRemoveRouteNoRouteMatches	assertEquals(1,prioritizer.getPrioritizedRoutes().size());	assertTrue(prioritizer.getPrioritizedRoutes().isEmpty());	12.105573892593384	0	0	1	0	0
0	0	amlinv/stat-collection-utils	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertNotNull(result);	3.418252944946289	0	0	1	0	0
	1	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertTrue(result instanceof JMXMBeanConnection);	4.496246099472046	0	0	1	0	0
	2	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertNull(result);	3.7334237098693848	0	0	1	0	0
	4	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	"assertEquals(""expectedUrl"",result.getUrl());"	4.804753065109253	0	0	1	0	0
	5	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertFalse(result.getConnection().isClosed());	3.823401927947998	0	0	1	0	0
	6	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertSame(expectedObject,actualObject);	4.252453804016113	0	0	1	0	0
	7	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertThrows(ExpectedException.class,() -> {);	3.991403818130493	0	0	1	0	0
	8	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertNotEquals(expectedValue,actualValue);	3.4873111248016357	0	0	1	0	0
	9	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertArrayEquals(expectedArray,actualArray);	3.103337049484253	0	0	1	0	0
	10	/	JMXJvmIdConnectionFactoryTest	testCreateConnection	assertSame(result,this.mockJmxMbeanConnection);	assertThat(actual,CoreMatchers.equalTo(expected));	3.4966800212860107	0	0	1	0	0
1	0	amlinv/stat-collection-utils	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNotNull(poller.getAttributeInjector());	3.145324945449829	0	0	1	0	0
	1	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertEquals(expected,actual`);	4.836339235305786	0	0	1	0	0
	2	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertTrue(condition);	3.5882301330566406	0	0	1	0	0
	3	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertFalse(condition);	3.3391871452331543	0	0	1	0	0
	4	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNotEquals(expected,actual);	3.2658591270446777	0	0	1	0	0
	5	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertSame(expected,actual);	3.3467001914978027	0	0	1	0	0
	6	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNotSame(expected,actual);	3.0157618522644043	0	0	1	0	0
	7	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertNull(object);	2.999647855758667	0	0	1	0	0
	8	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertThrows(expectedException,executable);	3.5824079513549805	0	0	1	0	0
	12	/	JmxAttributePollerTest	testGetSetAttributeInjector	assertNotNull(this.poller.getAttributeInjector());	assertArrayEquals(expectedArray,actualArray);	3.4649620056152344	0	0	1	0	0
0	0	fizzed/jne	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertNotNull(file);	11.83063793182373	0	1	0	0	0
	1	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.exists());	13.084820032119751	0	1	0	0	0
	2	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	"assertEquals(""resource-linux-x64.txt"",file.getName());"	12.270336151123047	0	1	0	0	0
	3	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.isFile());	13.048555135726929	0	1	0	0	0
	4	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertNotEquals(null,file);	11.395673036575317	0	1	0	0	0
	5	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertFalse(file.isDirectory());	11.203421831130981	0	1	0	0	0
	7	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	"assertNull(JNE.findFile(""non-existing-file.txt"",options));"	11.278582096099854	0	1	0	0	0
	8	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertFalse(file.isHidden());	11.021015882492065	0	1	0	0	0
	9	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.canRead());	10.993797063827515	0	1	0	0	0
	10	/	JNETest	findFile	assertThat(file,is(not(nullValue())));	assertTrue(file.canWrite());	10.896945238113403	0	1	0	0	0
