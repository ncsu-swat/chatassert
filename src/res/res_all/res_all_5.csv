TestID	VariantID	Project	TestClass	TestName	TrueOracle	GenOracle	Time	Corr	BuildErr
/	1	//	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	"assertTrue(format(""STR"",duration),duration>0);"	assertTrue(Math.abs(durationLimit-duration)<=epsilon);	113.84840488433838	0	0
/	11	//	CommonUtils_SleepTest	testSleepRandomNanosMinDelayZero	"assertTrue(format(""STR"",duration),duration>0);"	assertTrue((1000000000-1139248)<10);	26.597986936569214	0	0
1	0	hazelcast/hazelcast-simulator	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals((String)expectedString,actualObject.toString());	64.30036401748657	0	0
/	2	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertTrue(actualResult.startsWith(""STR"")&&actualResult.contains(""STR""));"	68.40384697914124	0	0
/	3	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	???;	71.38378429412842	0	0
/	4	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	"assertTrue(actualResult.toLowerCase().contains(""STR""));"	76.70146775245667	0	0
/	5	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals(0,actualResult.size());	88.54716110229492	0	0
/	7	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertFalse(condition);	94.10145711898804	0	0
/	8	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertNotEquals(String.valueOf(expectedValue),String.valueOf(actualValue));	91.95209002494812	0	0
/	9	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertTrue(condition);	64.30203413963318	0	0
/	10	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertNotSame(expectedObject,actualObject);	75.78374719619751	0	0
/	11	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertEquals(expectedAddress,actualAddress);	97.65880799293518	0	0
/	21	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertNotNull(actual);	66.7858099937439	0	0
/	22	//	SimulatorAddressTest	testToString_whenCoordinator	"assertEquals(""STR"",coordinatorAddress().toString());"	assertNotSame(expected,actual);	40.52737879753113	0	0
3	0	orientechnologies/orientdb	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertEquals(expectedResult,result);	646.9834790229797	0	0
/	1	//	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(resultinstanceofList);	1638.9650840759277	0	0
/	5	//	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertEquals(mapToTest.size(),result.size());	1174.8791291713715	0	0
/	12	//	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertArrayEquals(expectedResult.toArray(),result.toArray());	132.62258195877075	0	0
/	16	//	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertNull(result);	138.97707796096802	0	0
/	20	//	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertTrue(resultinstanceofList&&!result.isEmpty());	75.9345588684082	0	0
/	22	//	OPropertyMapIndexDefinitionTest	testCreateValueByKeyTwoParameters	assertTrue(resultinstanceofCollection);	assertEquals(mapToTest,propertyIndexByKey);	109.23633575439453	0	0
/	4	//	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	???;	73.98954701423645	0	0
/	6	//	OPropertyIndexDefinitionTest	testGetTypes	assertEquals(result.length,1);	???;	31.835684061050415	0	0
/	5	//	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	assertTrue(compositeKey.getKeys().isEmpty());	471.35680508613586	0	0
/	11	//	OCompositeKeyTest	testAddKeyComparable	assertEquals(compositeKey.getKeys().size(),1);	???;	94.42740297317505	0	0
6	0	orientechnologies/orientdb	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertEquals(String.valueOf(expectedSize),String.valueOf(index.getSize()));	137.42562007904053	0	0
/	3	//	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	"assertTrue()`methodtocheckifthevalueof`index.getSize()`isequalto`0`.Hereisthemodifiedassertstatement:

```java
assertEquals(0,index.getSize());"	97.77679777145386	0	0
/	9	//	LuceneGeoUpdateTest	testUpdate	assertEquals(2,index.getSize());	assertTrue(index.getSize()>5);	68.87642693519592	0	0
/	12	//	OSQLFunctionAbsoluteValueTest	testPositiveBigDecimal	assertTrue(resultinstanceofBigDecimal);	"assertEquals(newBigDecimal(""STR""),result);"	1501.7167618274689	0	0
/	1	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.isEmpty());	279.6986780166626	0	0
/	6	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	"assertEquals(1,qResult.stream().filter(result->result.getProperty(""STR"").equals(""STR"")).count());"	92.40217709541321	0	0
/	7	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	???;	38.40468096733093	0	0
/	8	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	"assertTrue(qResult.getExecutionPlan().getSummaries()[0].getProperty(""STR"",Long.class)>0);"	464.43891406059265	0	0
/	11	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotSame(expectedSet,actualSet);	675.2608549594879	0	0
/	12	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	"assertTrue(columnNames.hasNext()&&columnNames.next().equals(""STR""));"	672.3323452472687	0	0
/	13	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertEquals(expectedValue,actualValue);	502.1144802570343	0	0
/	15	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.hasResult());	672.0964739322662	0	0
/	18	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotSame(expectedSet,actualSet);	666.9200439453125	0	0
/	20	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotEquals(5,calculateSum(2,3));	239.41044926643372	0	0
/	21	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(databaseObject.get().resultList.stream().anyMatch(e->einstanceofOElement&&((OElement)e).field.equalsIgnoreCase(expectedValue)))`;	685.0177810192108	0	0
/	24	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNotSame(expected.toString(),actual.toString());	456.79293489456177	0	0
/	25	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertEquals(expectedValue,actualValue,delta);	230.43814611434937	0	0
/	26	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertTrue(qResult.getResultType().isSubclassOf(OResult.class));	657.8613529205322	0	0
/	27	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertEquals(expected,actual);	236.5190830230713	0	0
/	28	//	OMatchStatementExecutionNewTest	testMaxDepthArrow	assertEquals(2,size(qResult));	assertNull(ODocument);	768.2992730140686	0	0
9	1	//	OLiveCommandResultListenerTest	testNetworkError	assertTrue(OLiveQueryHook.getOpsReference(db).getQueueThread().hasToken(10));	assertTrue(listener.hasToken(10));	709.9420778751373	0	0
