TestID	VariantID	Project	TestClass	TestName	TrueOracle	GenOracle	Time	Corr	BuildErr
0	1	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(vards.isRecognized());	42.89576768875122	0	0
/	3	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(expectedValue,actualValue);	29.983937978744507	0	0
/	4	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotEquals(expectedValue,actualValue);	13.407214164733887	0	0
/	5	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(expected,actual);	34.232393980026245	0	0
/	6	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotSame(expected,actual);	32.47982883453369	0	0
/	9	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	???;	30.364615201950073	0	0
/	10	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertFalse(condition);	20.93205976486206	0	0
/	11	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertArrayEquals(expected,actualArray);	25.61079692840576	0	0
/	14	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotEquals(expected,actual);	37.463536739349365	0	0
/	15	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNull(expectedNullValue);	33.5978319644928	0	0
/	16	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(expected,actual);	23.046175956726074	0	0
/	18	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertNotSame(expectedObject,actualObject);	28.727261066436768	0	0
/	27	//	MorphologyTest	gunta19dec_3	assertTrue(vārds.isRecognized());	assertEquals(expectedObject,actualObject);	27.149913787841797	0	0
1	1	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(expectedCount,lūzīs.getWordformCount());	28.390949964523315	0	0
/	2	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(lūzīs.getCorrectWordform());	16.878009796142578	0	0
/	5	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(expectedValue,actualValue);	35.02708196640015	0	0
/	8	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotEquals(expectedValue,actualValue);	14.572537899017334	0	0
/	9	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(expectedSize,lexicalia.getWordformCount(lucide.translators.getLutIbgDictionary().getKeySet()));	34.4835410118103	0	0
/	11	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	"assertEquals(""STR"",actualVariable);"	28.04652428627014	0	0
/	13	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(42,lūzīs.getWordformCount());	23.351845026016235	0	0
/	15	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lŪvīs.getParadigmsCount()>0);	28.398615837097168	0	0
/	16	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotEquals(expected,lūzīs.getWordforms());	28.810959815979004	0	0
/	17	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotNull(object);	27.49468684196472	0	0
/	18	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertTrue(lūzīs.getWordforms().size()>0);	23.900376081466675	0	0
/	20	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(expectedValue,actualValue);	21.213606357574463	0	0
/	21	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotSame(expectedObject,actualObject);	15.470866918563843	0	0
/	23	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertEquals(expected,actual);	22.201437950134277	0	0
/	24	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	"assertTrue(lūzīs.getWordforms().contains(""STR""));"	33.67136573791504	0	0
/	25	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertFalse(condition);	30.744314193725586	0	0
/	27	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	???;	24.8712477684021	0	0
/	29	//	MorphologyTest	lūzīs	assertTrue(lūzīs.isRecognized());	assertNotEquals(obj1,obj2);	21.530065059661865	0	0
2	1	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals(1,austrumlatvija.getWordforms().size());	17.205555200576782	0	0
/	8	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotEquals(0,lociTajs.getCacheSize());	34.90134882926941	0	0
/	9	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertFalse(locītājs.isCacheEnabled());	27.97853708267212	0	0
/	10	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNull(locSize);	27.797675132751465	0	0
/	12	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals(expectedSize,locītājs.getCacheSize());	27.48337411880493	0	0
/	13	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotSame(expectedWord,actualWord);	17.48404097557068	0	0
/	14	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	???;	27.628802061080933	0	0
/	17	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals(expectedSize,lutcis.getCacheSize());	29.91044807434082	0	0
/	19	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	???;	32.10352301597595	0	0
/	20	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	"assertNotSame(""STR"",actualWordform);"	20.889781951904297	0	0
/	22	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals(expectedValue,actualValue);	20.50682497024536	0	0
/	24	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertEquals(expectedValue,actualValue);	27.409006118774414	0	0
/	25	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotSame(expectedObject,actualObject);	21.11722493171692	0	0
/	26	//	MorphologyTest	izskanjas	assertTrue(austrumlatvija.isRecognized());	assertNotEquals(expectedValue,actualValue);	26.49205207824707	0	0
3	1	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals(1,w.size());	21.548635959625244	0	0
/	5	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals(expectedSize,w.getWordforms().size());	27.77363109588623	0	0
/	6	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertSame(expectedWordform,w.getCorrectWordform());	23.532435178756714	0	0
/	7	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertFalse(w.getForms().isEmpty());	22.095617055892944	0	0
/	8	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.getWordforms().contains(expectedWordform));	27.7011878490448	0	0
/	9	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertNotEquals(expectedWordform,w.getCorrectWordform());	26.593312978744507	0	0
/	10	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertEquals(expectedResultWord,w.getWord());	26.588037967681885	0	0
/	12	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(w.getWordforms().stream().anyMatch(expected->expectedLemma.equals(expected.getLemma())));	29.817466020584106	0	0
/	13	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	???;	34.32782602310181	0	0
/	14	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	"assertNotNull(""Theattributeisnull."",w.getAttribute(""SomeAttributeName""))`;"	46.80490803718567	0	0
/	17	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	"assertNotNull(w.getProperty(""STR""));"	31.63197422027588	0	0
/	18	//	MorphologyTest	plāns_B	assertTrue(w.isRecognized());	assertTrue(contains);	36.74091291427612	0	0
4	0	hazelcast/hazelcast-simulator	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertEquals(expectedCoordinatorPort,getCoordinatorPort());	41.77862620353699	0	0
/	1	//	SimulatorPropertiesTest	testGetCoordinatorPort	assertEquals(0,simulatorProperties.getCoordinatorPort());	assertNotEquals(expectedValue,simulatorProperties.getCoordinatorPort());	36.369848012924194	0	0
