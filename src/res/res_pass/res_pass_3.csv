TestID	VariantID	Project	TestClass	TestName	TrueOracle	GenOracle	Time	Corr	BuildErr
0	0	TooTallNate/Java-WebSocket	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	8.628824710845947	1	0
/	1	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	19.229124069213867	1	0
/	7	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	20.651204824447632	1	0
/	14	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	18.948354959487915	1	0
/	15	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	152.40882205963135	1	0
/	17	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	154.65029978752136	1	0
/	20	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(handshakedataProtocolExtension);	314.6476306915283	0	0
/	21	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	14.182055950164795	1	0
/	23	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	13.4514639377594	1	0
/	26	//	Draft_6455Test	testGetExtension	assertNotNull(draft_6455.getExtension());	assertNotNull(draft_6455.getExtension());	153.7330391407013	1	0
1	5	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketImpl);	55.75822901725769	1	0
/	6	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketImpl);	46.515761852264404	1	0
/	7	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketImpl);	15.350757122039795	1	0
/	9	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertEquals(WebSocketImpl.class,webSocketImpl.getClass());	13.428486108779907	0	0
/	12	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertSame(webSocketImpl,webSocketImpl);	8.700389862060547	0	0
/	13	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotSame(webSocketImpl,null);	7.211869239807129	0	0
/	14	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertFalse(webSocketImpl==null);	8.162758827209473	0	0
/	15	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertTrue(webSocketImpl!=null);	8.559462070465088	0	0
/	17	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertNotNull(webSocketAdapter);	7.409703016281128	0	0
/	29	//	DefaultSSLWebSocketServerFactoryTest	testCreateWebSocket	assertNotNull(webSocketImpl);	assertEquals(WebSocketImpl.class,webSocketImpl.getClass());	7.694648027420044	0	0
/	1	//	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(Float.compare(expected,actual)==0);	6.740179061889648	0	0
/	4	//	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotSame(expected,actual);	6.646777153015137	0	0
/	6	//	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertNotNull(actual);	6.196320056915283	0	0
/	7	//	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertTrue(actual>0);	6.176922082901001	0	0
3	19	//	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertEquals(expected,actual,0);	14.677820920944214	1	0
/	22	//	ScoreTest	testSetRaw	assertEquals(expected,actual,0);	assertFalse(actual>10);	6.319797039031982	0	0
4	0	adlnet/jxapi	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	6.774410963058472	0	0
/	1	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertTrue(expected.equals(actual));	6.393823862075806	0	0
4	2	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertNotNull(actual);	6.154693841934204	1	0
/	3	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	11.457779884338379	0	0
/	4	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertFalse(result.isSuccess());	6.73178505897522	0	0
/	5	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	155.82283091545105	0	0
/	6	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertSame(expected,actual);	16.269188165664673	0	0
/	7	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertSame(expected,actual);	12.121071100234985	0	0
/	28	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	162.73776006698608	0	0
/	29	//	SubStatementTest	testGetVerb	assertNotNull(actual);	assertEquals(expected,actual);	159.04160499572754	0	0
5	0	adlnet/jxapi	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	5.34286904335022	0	0
5	1	//	ResultTest	testGetDuration	assertNotNull(actual);	assertNotNull(actual);	5.5392701625823975	1	0
/	2	//	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual!=null);	6.200028896331787	0	0
/	5	//	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	72.24980401992798	0	0
/	7	//	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected.toLowerCase(),actual.toLowerCase());	5.829610824584961	0	0
/	9	//	ResultTest	testGetDuration	assertNotNull(actual);	assertTrue(actual.startsWith(expected));	6.550636053085327	0	0
/	10	//	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	11.27812671661377	0	0
/	15	//	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	71.7672266960144	0	0
/	16	//	ResultTest	testGetDuration	assertNotNull(actual);	assertFalse(actual.isEmpty());	6.1418540477752686	0	0
/	26	//	ResultTest	testGetDuration	assertNotNull(actual);	assertEquals(expected,actual);	76.28099822998047	0	0
6	0	adlnet/jxapi	StatementTest	testGetAuthority	assertNotNull(actual);	assertEquals(agent,actual);	5.5234129428863525	0	0
6	1	//	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	6.65805196762085	1	0
/	2	//	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	115.13571882247925	1	0
/	4	//	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(actual);	115.01835322380066	1	0
/	5	//	StatementTest	testGetAuthority	assertNotNull(actual);	assertTrue(statement.getResult().isSuccess());	5.950767993927002	0	0
/	6	//	StatementTest	testGetAuthority	assertNotNull(actual);	"assertEquals(""STR"",statement.getContext().getLanguage());"	12.230480909347534	0	0
/	7	//	StatementTest	testGetAuthority	assertNotNull(actual);	assertNotNull(statement.getId());	23.216859102249146	0	0
/	8	//	StatementTest	testGetAuthority	assertNotNull(actual);	assertFalse(statement.getAttachments().isEmpty());	5.901723861694336	0	0
/	9	//	StatementTest	testGetAuthority	assertNotNull(actual);	"assertEquals(""STR"",statement.getVersion());"	11.460438013076782	0	0
/	10	//	StatementTest	testGetAuthority	assertNotNull(actual);	"assertTrue(statement.getStored().matches(""STR""));"	6.261283874511719	0	0
/	5	//	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	"assertEquals(""STR""+""STR"",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());"	assertNotNull(tokens);	26.685322046279907	0	0
/	6	//	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	"assertEquals(""STR""+""STR"",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());"	assertNotEquals(0,tokens.size());	30.57624101638794	0	0
/	7	//	OpenKoreanProcessorJavaTest	testTokensToJavaKoreanTokenList	"assertEquals(""STR""+""STR"",OpenKoreanTextProcessorJava.tokensToJavaKoreanTokenList(tokens,true).toString());"	assertTrue(tokens.size()>0);	28.849426984786987	0	0
