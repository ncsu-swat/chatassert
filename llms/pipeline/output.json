{
    "1": {
        "starcoder": [
            "Assert.assertEquals(expected, actual);"
        ],
        "incoder": [
            "Assert.assertArrayEquals(expected, actual);"
        ]
    },
    "2": {
        "starcoder": [
            "Assert.assertEquals(null, HazelcastStarter.getHazelcastVersionFromJarOrNull(file));"
        ],
        "incoder": [
            "Assert.assertNull(Hazelcast.getHazelcastVersionFromJarOrNull(file));"
        ]
    },
    "3": {
        "starcoder": [
            "Assert.assertEquals(original, doc.field(\"field\"));"
        ],
        "incoder": [
            "Assert.assertEquals(original, trackedSet.getOriginal());"
        ]
    },
    "4": {
        "starcoder": [
            "Assert.assertEquals(\"Turpm\u0101kaj\u0101\", Turpm\u0101kaj\u0101.getLemma());"
        ],
        "incoder": [
            "Assert.assertEquals(\"Turpm\u0101kaj\u0101\", Turpm\u0101kaj\u0101.getWord());"
        ]
    },
    "5": {
        "starcoder": [
            "Assert.assertEquals(OBJECT, byteSerializer.deserializeNative(buffer));"
        ],
        "incoder": [
            "Assert.assertEquals(buffer.limit(), stream.length);",
            "Assert.assertEquals(buffer.capacity(), buffer.limit());",
            "Assert.assertEquals(buffer.capacity(), stream.length);"
        ]
    },
    "6": {
        "starcoder": [
            "Assert.assertFalse(multiKey.equals(new Object()));"
        ],
        "incoder": [
            "Assert.assertFalse(multiKey.equals(new OMultiKey(Collections.singletonList(\"b\"))));"
        ]
    },
    "7": {
        "starcoder": [
            "Assert.assertEquals(\"teardown\", method.getName());"
        ],
        "incoder": [
            "Assert.assertEquals(method, \"testLocalTeardownFilter\");"
        ]
    },
    "8": {
        "starcoder": [
            "Assert.assertTrue(manager.isFieldChanged(\"test1\"));",
            "Assert.assertTrue(manager.isChanged());"
        ],
        "incoder": [
            "Assert.assertEquals(manager.getDirtyFields().get(\"test1\"), doc);",
            "Assert.assertEquals(manager.getDirtyCount(), 1);"
        ]
    },
    "9": {
        "starcoder": [
            "Assert.assertEquals(head.getHead(), Label.of(\"hula\"));"
        ],
        "incoder": [
            "Assert.assertEquals(2d, head.yOffset);",
            "Assert.assertEquals(1d, head.xOffset);",
            "Assert.assertEquals(\"hula\", head.label);"
        ]
    },
    "10": {
        "starcoder": [
            "Assert.assertEquals(otp, OTPGenerator.generateOTP(otp));"
        ],
        "incoder": [
            "Assert.assertEquals(otp, otpUtil.generateOTP(OTPUtil.SHORT_OTP_LENGTH));"
        ]
    }
}