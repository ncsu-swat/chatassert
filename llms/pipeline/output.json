{
    "1": {
        "incoder": [
            "Assert.assertArrayEquals(expected, actual);"
        ]
    },
    "2": {
        "incoder": [
            "Assert.assertNull(Hazelcast.getHazelcastVersionFromJarOrNull(file));"
        ]
    },
    "3": {
        "incoder": [
            "Assert.assertEquals(original, trackedSet.getOriginal());",
            "Assert.assertEquals(trackedSet.getOriginal(), original);"
        ]
    },
    "4": {
        "incoder": [
            "Assert.assertEquals(\"Turpm\u0101kaj\u0101\", Turpm\u0101kaj\u0101.getWord());"
        ]
    },
    "5": {
        "incoder": [
            "Assert.assertEquals(buffer.capacity(), stream.length);",
            "Assert.assertEquals(buffer.limit(), stream.length);",
            "Assert.assertEquals(buffer.capacity(), buffer.limit());",
            "Assert.assertEquals(OBJECT, byteSerializer.deserializeNative(buffer, 0));"
        ]
    },
    "6": {
        "incoder": [
            "Assert.assertFalse(multiKey.equals(new OMultiKey(Collections.singletonList(\"b\"))));",
            "Assert.assertFalse(multiKey.equals(new OMultiKey(Collections.singletonList(\"a\"))));"
        ]
    },
    "7": {
        "incoder": [
            "Assert.assertEquals(method, \"teardown\");",
            "Assert.assertEquals(method, \"testLocalTeardownFilter\");"
        ]
    },
    "8": {
        "incoder": [
            "Assert.assertEquals(manager.getDirtyFields().get(\"test1\"), doc);",
            "Assert.assertEquals(manager.getDirtyCount(), 1);"
        ]
    },
    "9": {
        "incoder": [
            "Assert.assertEquals(\"hula\", head.label);",
            "Assert.assertEquals(1d, head.xOffset);",
            "Assert.assertEquals(1d, head.getX());",
            "Assert.assertEquals(2d, head.yOffset);",
            "Assert.assertEquals(\"hula\", head.getLabel());"
        ]
    },
    "10": {
        "incoder": [
            "Assert.assertFalse(otp.matches(\"^[0-9]{6}$\"));",
            "Assert.assertEquals(otp, otpUtil.generateOTP(otp.length()));",
            "Assert.assertEquals(otp, otpService.generateOTP(otp));"
        ]
    }
}